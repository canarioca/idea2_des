/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.sorin.idea.dto;

import com.sorin.idea.dao.*;
import com.sorin.idea.factory.*;
import com.sorin.idea.exceptions.*;
import java.io.Serializable;
import java.util.*;

public class ProtSincopeValCard implements Serializable
{
	/** 
	 * This attribute maps to the column IDPROTSINCOPE in the prot_sincope_val_card table.
	 */
	protected Integer idprotsincope;

	/** 
	 * This attribute maps to the column FECHA in the prot_sincope_val_card table.
	 */
	protected Date fecha;

	/** 
	 * This attribute maps to the column SINCOPE_PICO in the prot_sincope_val_card table.
	 */
	protected Integer sincopePico;

	/** 
	 * This attribute maps to the column SINCOPE_DEC in the prot_sincope_val_card table.
	 */
	protected Integer sincopeDec;

	/** 
	 * This attribute maps to the column AF_MS in the prot_sincope_val_card table.
	 */
	protected Integer afMs;

	/** 
	 * This attribute maps to the column PALPITACIONES in the prot_sincope_val_card table.
	 */
	protected Integer palpitaciones;

	/** 
	 * This attribute maps to the column DOLOR_TORACICO in the prot_sincope_val_card table.
	 */
	protected Integer dolorToracico;

	/** 
	 * This attribute maps to the column CARDIO_ESTRUCT in the prot_sincope_val_card table.
	 */
	protected Integer cardioEstruct;

	/** 
	 * This attribute maps to the column ANT_ISQ_ICC in the prot_sincope_val_card table.
	 */
	protected Integer antIsqIcc;

	/** 
	 * This attribute maps to the column ECG_ANORMAL in the prot_sincope_val_card table.
	 */
	protected Integer ecgAnormal;

	/** 
	 * This attribute maps to the column HALL_BRADI in the prot_sincope_val_card table.
	 */
	protected Integer hallBradi;

	/** 
	 * This attribute maps to the column HALL_BAV in the prot_sincope_val_card table.
	 */
	protected Integer hallBav;

	/** 
	 * This attribute maps to the column HALL_BR in the prot_sincope_val_card table.
	 */
	protected Integer hallBr;

	/** 
	 * This attribute maps to the column HALL_TSV in the prot_sincope_val_card table.
	 */
	protected Integer hallTsv;

	/** 
	 * This attribute maps to the column HALL_TVNS in the prot_sincope_val_card table.
	 */
	protected Integer hallTvns;

	/** 
	 * This attribute maps to the column HALL_MPDAI in the prot_sincope_val_card table.
	 */
	protected Integer hallMpdai;

	/** 
	 * This attribute maps to the column HALL_ECG in the prot_sincope_val_card table.
	 */
	protected Integer hallEcg;

	/** 
	 * This attribute maps to the column HALL_ESTEN in the prot_sincope_val_card table.
	 */
	protected Integer hallEsten;

	/** 
	 * This attribute maps to the column HALL_HTAPULM in the prot_sincope_val_card table.
	 */
	protected Integer hallHtapulm;

	/** 
	 * This attribute maps to the column HALL_EMBOL in the prot_sincope_val_card table.
	 */
	protected Integer hallEmbol;

	/** 
	 * This attribute maps to the column HALL_DISEC in the prot_sincope_val_card table.
	 */
	protected Integer hallDisec;

	/** 
	 * This attribute maps to the column HALL_MIX in the prot_sincope_val_card table.
	 */
	protected Integer hallMix;

	/** 
	 * This attribute maps to the column COMENTARIOS in the prot_sincope_val_card table.
	 */
	protected String comentarios;

	/** 
	 * This attribute maps to the column OPERADOR in the prot_sincope_val_card table.
	 */
	protected String operador;
	
	private Boolean sincopePicoB;
	private Boolean sincopeDecB;
	private Boolean afMsB;
	private Boolean palpitacionesB;
	private Boolean dolorToracicoB;
	
	/**
	 * Method 'ProtSincopeValCard'
	 * 
	 */
	public ProtSincopeValCard()
	{
	}

	/**
	 * Method 'getIdprotsincope'
	 * 
	 * @return Integer
	 */
	public Integer getIdprotsincope()
	{
		return idprotsincope;
	}

	/**
	 * Method 'setIdprotsincope'
	 * 
	 * @param idprotsincope
	 */
	public void setIdprotsincope(Integer idprotsincope)
	{
		this.idprotsincope = idprotsincope;
	}

	/**
	 * Method 'getFecha'
	 * 
	 * @return Date
	 */
	public Date getFecha()
	{
		return fecha;
	}

	/**
	 * Method 'setFecha'
	 * 
	 * @param fecha
	 */
	public void setFecha(Date fecha)
	{
		this.fecha = fecha;
	}

	/**
	 * Method 'getSincopePico'
	 * 
	 * @return Integer
	 */
	public Integer getSincopePico()
	{
		return sincopePico;
	}
	public Boolean getSincopePicoB() {
		if (sincopePico != null && sincopePico == 1)
			return true;
		return false;
	}
	/**
	 * Method 'setSincopePico'
	 * 
	 * @param sincopePico
	 */
	public void setSincopePico(Integer sincopePico)
	{
		this.sincopePico = sincopePico;
	}
	public void setSincopePicoB(Boolean sincopePico) {
		if (sincopePico != null && sincopePico)
			this.sincopePico = 1;
		else
			this.sincopePico = 0;
	}
	/**
	 * Method 'getSincopeDec'
	 * 
	 * @return Integer
	 */
	public Integer getSincopeDec()
	{
		return sincopeDec;
	}
	public Boolean getSincopeDecB() {
		if (sincopeDec != null && sincopeDec == 1)
			return true;
		return false;
	}
	/**
	 * Method 'setSincopeDec'
	 * 
	 * @param sincopeDec
	 */
	public void setSincopeDec(Integer sincopeDec)
	{
		this.sincopeDec = sincopeDec;
	}
	public void setSincopeDecB(Boolean sincopeDec) {
		if (sincopeDec != null && sincopeDec)
			this.sincopeDec = 1;
		else
			this.sincopeDec = 0;
	}
	/**
	 * Method 'getAfMs'
	 * 
	 * @return Integer
	 */
	public Integer getAfMs()
	{
		return afMs;
	}
	public Boolean getAfMsB() {
		if (afMs != null && afMs == 1)
			return true;
		return false;
	}
	/**
	 * Method 'setAfMs'
	 * 
	 * @param afMs
	 */
	public void setAfMs(Integer afMs)
	{
		this.afMs = afMs;
	}
	public void setAfMsB(Boolean afMs) {
		if (afMs != null && afMs)
			this.afMs = 1;
		else
			this.afMs = 0;
	}
	/**
	 * Method 'getPalpitaciones'
	 * 
	 * @return Integer
	 */
	public Integer getPalpitaciones()
	{
		return palpitaciones;
	}
	public Boolean getPalpitacionesB() {
		if (palpitaciones != null && palpitaciones == 1)
			return true;
		return false;
	}
	/**
	 * Method 'setPalpitaciones'
	 * 
	 * @param palpitaciones
	 */
	public void setPalpitaciones(Integer palpitaciones)
	{
		this.palpitaciones = palpitaciones;
	}
	public void setPalpitacionesB(Boolean palpitaciones) {
		if (palpitaciones != null && palpitaciones)
			this.palpitaciones = 1;
		else
			this.palpitaciones = 0;
	}
	/**
	 * Method 'getDolorToracico'
	 * 
	 * @return Integer
	 */
	public Integer getDolorToracico()
	{
		return dolorToracico;
	}
	public Boolean getDolorToracicoB() {
		if (dolorToracico != null && dolorToracico == 1)
			return true;
		return false;
	}
	/**
	 * Method 'setDolorToracico'
	 * 
	 * @param dolorToracico
	 */
	public void setDolorToracico(Integer dolorToracico)
	{
		this.dolorToracico = dolorToracico;
	}
	public void setDolorToracicoB(Boolean dolorToracico) {
		if (dolorToracico != null && dolorToracico)
			this.dolorToracico = 1;
		else
			this.dolorToracico = 0;
	}
	/**
	 * Method 'getCardioEstruct'
	 * 
	 * @return Integer
	 */
	public Integer getCardioEstruct()
	{
		return cardioEstruct;
	}

	/**
	 * Method 'setCardioEstruct'
	 * 
	 * @param cardioEstruct
	 */
	public void setCardioEstruct(Integer cardioEstruct)
	{
		this.cardioEstruct = cardioEstruct;
	}

	/**
	 * Method 'getAntIsqIcc'
	 * 
	 * @return Integer
	 */
	public Integer getAntIsqIcc()
	{
		return antIsqIcc;
	}

	/**
	 * Method 'setAntIsqIcc'
	 * 
	 * @param antIsqIcc
	 */
	public void setAntIsqIcc(Integer antIsqIcc)
	{
		this.antIsqIcc = antIsqIcc;
	}

	/**
	 * Method 'getEcgAnormal'
	 * 
	 * @return Integer
	 */
	public Integer getEcgAnormal()
	{
		return ecgAnormal;
	}

	/**
	 * Method 'setEcgAnormal'
	 * 
	 * @param ecgAnormal
	 */
	public void setEcgAnormal(Integer ecgAnormal)
	{
		this.ecgAnormal = ecgAnormal;
	}

	/**
	 * Method 'getHallBradi'
	 * 
	 * @return Integer
	 */
	public Integer getHallBradi()
	{
		return hallBradi;
	}

	/**
	 * Method 'setHallBradi'
	 * 
	 * @param hallBradi
	 */
	public void setHallBradi(Integer hallBradi)
	{
		this.hallBradi = hallBradi;
	}

	/**
	 * Method 'getHallBav'
	 * 
	 * @return Integer
	 */
	public Integer getHallBav()
	{
		return hallBav;
	}

	/**
	 * Method 'setHallBav'
	 * 
	 * @param hallBav
	 */
	public void setHallBav(Integer hallBav)
	{
		this.hallBav = hallBav;
	}

	/**
	 * Method 'getHallBr'
	 * 
	 * @return Integer
	 */
	public Integer getHallBr()
	{
		return hallBr;
	}

	/**
	 * Method 'setHallBr'
	 * 
	 * @param hallBr
	 */
	public void setHallBr(Integer hallBr)
	{
		this.hallBr = hallBr;
	}

	/**
	 * Method 'getHallTsv'
	 * 
	 * @return Integer
	 */
	public Integer getHallTsv()
	{
		return hallTsv;
	}

	/**
	 * Method 'setHallTsv'
	 * 
	 * @param hallTsv
	 */
	public void setHallTsv(Integer hallTsv)
	{
		this.hallTsv = hallTsv;
	}

	/**
	 * Method 'getHallTvns'
	 * 
	 * @return Integer
	 */
	public Integer getHallTvns()
	{
		return hallTvns;
	}

	/**
	 * Method 'setHallTvns'
	 * 
	 * @param hallTvns
	 */
	public void setHallTvns(Integer hallTvns)
	{
		this.hallTvns = hallTvns;
	}

	/**
	 * Method 'getHallMpdai'
	 * 
	 * @return Integer
	 */
	public Integer getHallMpdai()
	{
		return hallMpdai;
	}

	/**
	 * Method 'setHallMpdai'
	 * 
	 * @param hallMpdai
	 */
	public void setHallMpdai(Integer hallMpdai)
	{
		this.hallMpdai = hallMpdai;
	}

	/**
	 * Method 'getHallEcg'
	 * 
	 * @return Integer
	 */
	public Integer getHallEcg()
	{
		return hallEcg;
	}

	/**
	 * Method 'setHallEcg'
	 * 
	 * @param hallEcg
	 */
	public void setHallEcg(Integer hallEcg)
	{
		this.hallEcg = hallEcg;
	}

	/**
	 * Method 'getHallEsten'
	 * 
	 * @return Integer
	 */
	public Integer getHallEsten()
	{
		return hallEsten;
	}

	/**
	 * Method 'setHallEsten'
	 * 
	 * @param hallEsten
	 */
	public void setHallEsten(Integer hallEsten)
	{
		this.hallEsten = hallEsten;
	}

	/**
	 * Method 'getHallHtapulm'
	 * 
	 * @return Integer
	 */
	public Integer getHallHtapulm()
	{
		return hallHtapulm;
	}

	/**
	 * Method 'setHallHtapulm'
	 * 
	 * @param hallHtapulm
	 */
	public void setHallHtapulm(Integer hallHtapulm)
	{
		this.hallHtapulm = hallHtapulm;
	}

	/**
	 * Method 'getHallEmbol'
	 * 
	 * @return Integer
	 */
	public Integer getHallEmbol()
	{
		return hallEmbol;
	}

	/**
	 * Method 'setHallEmbol'
	 * 
	 * @param hallEmbol
	 */
	public void setHallEmbol(Integer hallEmbol)
	{
		this.hallEmbol = hallEmbol;
	}

	/**
	 * Method 'getHallDisec'
	 * 
	 * @return Integer
	 */
	public Integer getHallDisec()
	{
		return hallDisec;
	}

	/**
	 * Method 'setHallDisec'
	 * 
	 * @param hallDisec
	 */
	public void setHallDisec(Integer hallDisec)
	{
		this.hallDisec = hallDisec;
	}

	/**
	 * Method 'getHallMix'
	 * 
	 * @return Integer
	 */
	public Integer getHallMix()
	{
		return hallMix;
	}

	/**
	 * Method 'setHallMix'
	 * 
	 * @param hallMix
	 */
	public void setHallMix(Integer hallMix)
	{
		this.hallMix = hallMix;
	}

	/**
	 * Method 'getComentarios'
	 * 
	 * @return String
	 */
	public String getComentarios()
	{
		return comentarios;
	}

	/**
	 * Method 'setComentarios'
	 * 
	 * @param comentarios
	 */
	public void setComentarios(String comentarios)
	{
		this.comentarios = comentarios;
	}

	/**
	 * Method 'getOperador'
	 * 
	 * @return String
	 */
	public String getOperador()
	{
		return operador;
	}

	/**
	 * Method 'setOperador'
	 * 
	 * @param operador
	 */
	public void setOperador(String operador)
	{
		this.operador = operador;
	}

	
	/**
	 * Method 'equals'
	 * 
	 * @param _other
	 * @return boolean
	 */
	public boolean equals(Object _other)
	{
		if (_other == null) {
			return false;
		}
		
		if (_other == this) {
			return true;
		}
		
		if (!(_other instanceof ProtSincopeValCard)) {
			return false;
		}
		
		final ProtSincopeValCard _cast = (ProtSincopeValCard) _other;
		if (idprotsincope == null ? _cast.idprotsincope != idprotsincope : !idprotsincope.equals( _cast.idprotsincope )) {
			return false;
		}
		
		if (fecha == null ? _cast.fecha != fecha : !fecha.equals( _cast.fecha )) {
			return false;
		}
		
		if (sincopePico == null ? _cast.sincopePico != sincopePico : !sincopePico.equals( _cast.sincopePico )) {
			return false;
		}
		
		if (sincopeDec == null ? _cast.sincopeDec != sincopeDec : !sincopeDec.equals( _cast.sincopeDec )) {
			return false;
		}
		
		if (afMs == null ? _cast.afMs != afMs : !afMs.equals( _cast.afMs )) {
			return false;
		}
		
		if (palpitaciones == null ? _cast.palpitaciones != palpitaciones : !palpitaciones.equals( _cast.palpitaciones )) {
			return false;
		}
		
		if (dolorToracico == null ? _cast.dolorToracico != dolorToracico : !dolorToracico.equals( _cast.dolorToracico )) {
			return false;
		}
		
		if (cardioEstruct == null ? _cast.cardioEstruct != cardioEstruct : !cardioEstruct.equals( _cast.cardioEstruct )) {
			return false;
		}
		
		if (antIsqIcc == null ? _cast.antIsqIcc != antIsqIcc : !antIsqIcc.equals( _cast.antIsqIcc )) {
			return false;
		}
		
		if (ecgAnormal == null ? _cast.ecgAnormal != ecgAnormal : !ecgAnormal.equals( _cast.ecgAnormal )) {
			return false;
		}
		
		if (hallBradi == null ? _cast.hallBradi != hallBradi : !hallBradi.equals( _cast.hallBradi )) {
			return false;
		}
		
		if (hallBav == null ? _cast.hallBav != hallBav : !hallBav.equals( _cast.hallBav )) {
			return false;
		}
		
		if (hallBr == null ? _cast.hallBr != hallBr : !hallBr.equals( _cast.hallBr )) {
			return false;
		}
		
		if (hallTsv == null ? _cast.hallTsv != hallTsv : !hallTsv.equals( _cast.hallTsv )) {
			return false;
		}
		
		if (hallTvns == null ? _cast.hallTvns != hallTvns : !hallTvns.equals( _cast.hallTvns )) {
			return false;
		}
		
		if (hallMpdai == null ? _cast.hallMpdai != hallMpdai : !hallMpdai.equals( _cast.hallMpdai )) {
			return false;
		}
		
		if (hallEcg == null ? _cast.hallEcg != hallEcg : !hallEcg.equals( _cast.hallEcg )) {
			return false;
		}
		
		if (hallEsten == null ? _cast.hallEsten != hallEsten : !hallEsten.equals( _cast.hallEsten )) {
			return false;
		}
		
		if (hallHtapulm == null ? _cast.hallHtapulm != hallHtapulm : !hallHtapulm.equals( _cast.hallHtapulm )) {
			return false;
		}
		
		if (hallEmbol == null ? _cast.hallEmbol != hallEmbol : !hallEmbol.equals( _cast.hallEmbol )) {
			return false;
		}
		
		if (hallDisec == null ? _cast.hallDisec != hallDisec : !hallDisec.equals( _cast.hallDisec )) {
			return false;
		}
		
		if (hallMix == null ? _cast.hallMix != hallMix : !hallMix.equals( _cast.hallMix )) {
			return false;
		}
		
		if (comentarios == null ? _cast.comentarios != comentarios : !comentarios.equals( _cast.comentarios )) {
			return false;
		}
		
		if (operador == null ? _cast.operador != operador : !operador.equals( _cast.operador )) {
			return false;
		}
		
		return true;
	}

	/**
	 * Method 'hashCode'
	 * 
	 * @return int
	 */
	public int hashCode()
	{
		int _hashCode = 0;
		if (idprotsincope != null) {
			_hashCode = 29 * _hashCode + idprotsincope.hashCode();
		}
		
		if (fecha != null) {
			_hashCode = 29 * _hashCode + fecha.hashCode();
		}
		
		if (sincopePico != null) {
			_hashCode = 29 * _hashCode + sincopePico.hashCode();
		}
		
		if (sincopeDec != null) {
			_hashCode = 29 * _hashCode + sincopeDec.hashCode();
		}
		
		if (afMs != null) {
			_hashCode = 29 * _hashCode + afMs.hashCode();
		}
		
		if (palpitaciones != null) {
			_hashCode = 29 * _hashCode + palpitaciones.hashCode();
		}
		
		if (dolorToracico != null) {
			_hashCode = 29 * _hashCode + dolorToracico.hashCode();
		}
		
		if (cardioEstruct != null) {
			_hashCode = 29 * _hashCode + cardioEstruct.hashCode();
		}
		
		if (antIsqIcc != null) {
			_hashCode = 29 * _hashCode + antIsqIcc.hashCode();
		}
		
		if (ecgAnormal != null) {
			_hashCode = 29 * _hashCode + ecgAnormal.hashCode();
		}
		
		if (hallBradi != null) {
			_hashCode = 29 * _hashCode + hallBradi.hashCode();
		}
		
		if (hallBav != null) {
			_hashCode = 29 * _hashCode + hallBav.hashCode();
		}
		
		if (hallBr != null) {
			_hashCode = 29 * _hashCode + hallBr.hashCode();
		}
		
		if (hallTsv != null) {
			_hashCode = 29 * _hashCode + hallTsv.hashCode();
		}
		
		if (hallTvns != null) {
			_hashCode = 29 * _hashCode + hallTvns.hashCode();
		}
		
		if (hallMpdai != null) {
			_hashCode = 29 * _hashCode + hallMpdai.hashCode();
		}
		
		if (hallEcg != null) {
			_hashCode = 29 * _hashCode + hallEcg.hashCode();
		}
		
		if (hallEsten != null) {
			_hashCode = 29 * _hashCode + hallEsten.hashCode();
		}
		
		if (hallHtapulm != null) {
			_hashCode = 29 * _hashCode + hallHtapulm.hashCode();
		}
		
		if (hallEmbol != null) {
			_hashCode = 29 * _hashCode + hallEmbol.hashCode();
		}
		
		if (hallDisec != null) {
			_hashCode = 29 * _hashCode + hallDisec.hashCode();
		}
		
		if (hallMix != null) {
			_hashCode = 29 * _hashCode + hallMix.hashCode();
		}
		
		if (comentarios != null) {
			_hashCode = 29 * _hashCode + comentarios.hashCode();
		}
		
		if (operador != null) {
			_hashCode = 29 * _hashCode + operador.hashCode();
		}
		
		return _hashCode;
	}

	/**
	 * Method 'createPk'
	 * 
	 * @return ProtSincopeValCardPk
	 */
	public ProtSincopeValCardPk createPk()
	{
		return new ProtSincopeValCardPk(idprotsincope);
	}

	/**
	 * Method 'toString'
	 * 
	 * @return String
	 */
	public String toString()
	{
		StringBuffer ret = new StringBuffer();
		ret.append( "com.sorin.idea.dto.ProtSincopeValCard: " );
		ret.append( "idprotsincope=" + idprotsincope );
		ret.append( ", fecha=" + fecha );
		ret.append( ", sincopePico=" + sincopePico );
		ret.append( ", sincopeDec=" + sincopeDec );
		ret.append( ", afMs=" + afMs );
		ret.append( ", palpitaciones=" + palpitaciones );
		ret.append( ", dolorToracico=" + dolorToracico );
		ret.append( ", cardioEstruct=" + cardioEstruct );
		ret.append( ", antIsqIcc=" + antIsqIcc );
		ret.append( ", ecgAnormal=" + ecgAnormal );
		ret.append( ", hallBradi=" + hallBradi );
		ret.append( ", hallBav=" + hallBav );
		ret.append( ", hallBr=" + hallBr );
		ret.append( ", hallTsv=" + hallTsv );
		ret.append( ", hallTvns=" + hallTvns );
		ret.append( ", hallMpdai=" + hallMpdai );
		ret.append( ", hallEcg=" + hallEcg );
		ret.append( ", hallEsten=" + hallEsten );
		ret.append( ", hallHtapulm=" + hallHtapulm );
		ret.append( ", hallEmbol=" + hallEmbol );
		ret.append( ", hallDisec=" + hallDisec );
		ret.append( ", hallMix=" + hallMix );
		ret.append( ", comentarios=" + comentarios );
		ret.append( ", operador=" + operador );
		return ret.toString();
	}

}
