/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.sorin.idea.dao;

import com.sorin.idea.dto.*;
import com.sorin.idea.exceptions.*;

public interface ArrAccesoModulosDao
{
	/** 
	 * Inserts a new row in the arr_acceso_modulos table.
	 */
	public void insert(ArrAccesoModulos dto) throws ArrAccesoModulosDaoException;

	/** 
	 * Returns all rows from the arr_acceso_modulos table that match the criteria ''.
	 */
	public ArrAccesoModulos[] findAll() throws ArrAccesoModulosDaoException;

	/** 
	 * Returns all rows from the arr_acceso_modulos table that match the criteria 'USUARIO = :usuario'.
	 */
	public ArrAccesoModulos[] findWhereUsuarioEquals(String usuario) throws ArrAccesoModulosDaoException;

	/** 
	 * Returns all rows from the arr_acceso_modulos table that match the criteria 'ID_TIPO_PROCEDIMIENTO = :idTipoProcedimiento'.
	 */
	public ArrAccesoModulos[] findWhereIdTipoProcedimientoEquals(int idTipoProcedimiento) throws ArrAccesoModulosDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the arr_acceso_modulos table that match the specified arbitrary SQL statement
	 */
	public ArrAccesoModulos[] findByDynamicSelect(String sql, Object[] sqlParams) throws ArrAccesoModulosDaoException;

	/** 
	 * Returns all rows from the arr_acceso_modulos table that match the specified arbitrary SQL statement
	 */
	public ArrAccesoModulos[] findByDynamicWhere(String sql, Object[] sqlParams) throws ArrAccesoModulosDaoException;

	
	/** 
	 * Deletes a single row in the arr_acceso_modulos table.
	 */
	public void delete(ArrAccesoModulosPk pk) throws ArrAccesoModulosDaoException;

}
