/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.sorin.idea.dao;

import java.util.Date;
import com.sorin.idea.dto.*;
import com.sorin.idea.exceptions.*;

public interface RcNutricionDao
{
	/** 
	 * Inserts a new row in the rc_nutricion table.
	 */
	public RcNutricionPk insert(RcNutricion dto) throws RcNutricionDaoException;

	/** 
	 * Updates a single row in the rc_nutricion table.
	 */
	public void update(RcNutricionPk pk, RcNutricion dto) throws RcNutricionDaoException;

	/** 
	 * Deletes a single row in the rc_nutricion table.
	 */
	public void delete(RcNutricionPk pk) throws RcNutricionDaoException;

	/** 
	 * Returns the rows from the rc_nutricion table that matches the specified primary-key value.
	 */
	public RcNutricion findByPrimaryKey(RcNutricionPk pk) throws RcNutricionDaoException;

	/** 
	 * Returns all rows from the rc_nutricion table that match the criteria 'ID_RC_NUTRICION = :idRcNutricion'.
	 */
	public RcNutricion findByPrimaryKey(int idRcNutricion) throws RcNutricionDaoException;

	/** 
	 * Returns all rows from the rc_nutricion table that match the criteria ''.
	 */
	public RcNutricion[] findAll() throws RcNutricionDaoException;

	/** 
	 * Returns all rows from the rc_nutricion table that match the criteria 'ID_RC_NUTRICION = :idRcNutricion'.
	 */
	public RcNutricion[] findWhereIdRcNutricionEquals(int idRcNutricion) throws RcNutricionDaoException;

	/** 
	 * Returns all rows from the rc_nutricion table that match the criteria 'FECHA = :fecha'.
	 */
	public RcNutricion[] findWhereFechaEquals(Date fecha) throws RcNutricionDaoException;

	/** 
	 * Returns all rows from the rc_nutricion table that match the criteria 'ESCALA_DIETETICA = :escalaDietetica'.
	 */
	public RcNutricion[] findWhereEscalaDieteticaEquals(float escalaDietetica) throws RcNutricionDaoException;

	/** 
	 * Returns all rows from the rc_nutricion table that match the criteria 'PERIMETRO_ABDOMINAL = :perimetroAbdominal'.
	 */
	public RcNutricion[] findWherePerimetroAbdominalEquals(float perimetroAbdominal) throws RcNutricionDaoException;

	/** 
	 * Returns all rows from the rc_nutricion table that match the criteria 'PERIMETRO_CINTURA = :perimetroCintura'.
	 */
	public RcNutricion[] findWherePerimetroCinturaEquals(float perimetroCintura) throws RcNutricionDaoException;

	/** 
	 * Returns all rows from the rc_nutricion table that match the criteria 'INDICE_CINTURA = :indiceCintura'.
	 */
	public RcNutricion[] findWhereIndiceCinturaEquals(float indiceCintura) throws RcNutricionDaoException;

	/** 
	 * Returns all rows from the rc_nutricion table that match the criteria 'CINTURA_CADERA = :cinturaCadera'.
	 */
	public RcNutricion[] findWhereCinturaCaderaEquals(float cinturaCadera) throws RcNutricionDaoException;

	/** 
	 * Returns all rows from the rc_nutricion table that match the criteria 'INDICE_CINTURA_TALLA = :indiceCinturaTalla'.
	 */
	public RcNutricion[] findWhereIndiceCinturaTallaEquals(float indiceCinturaTalla) throws RcNutricionDaoException;

	/** 
	 * Returns all rows from the rc_nutricion table that match the criteria 'MASA_MUSCULAR = :masaMuscular'.
	 */
	public RcNutricion[] findWhereMasaMuscularEquals(float masaMuscular) throws RcNutricionDaoException;

	/** 
	 * Returns all rows from the rc_nutricion table that match the criteria 'MASA_GRASA_CORPORAL = :masaGrasaCorporal'.
	 */
	public RcNutricion[] findWhereMasaGrasaCorporalEquals(float masaGrasaCorporal) throws RcNutricionDaoException;

	/** 
	 * Returns all rows from the rc_nutricion table that match the criteria 'PORCENTAJE_GRASA_CORPORAL = :porcentajeGrasaCorporal'.
	 */
	public RcNutricion[] findWherePorcentajeGrasaCorporalEquals(float porcentajeGrasaCorporal) throws RcNutricionDaoException;

	/** 
	 * Returns all rows from the rc_nutricion table that match the criteria 'RELACION_CINTURA_CADERA = :relacionCinturaCadera'.
	 */
	public RcNutricion[] findWhereRelacionCinturaCaderaEquals(float relacionCinturaCadera) throws RcNutricionDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the rc_nutricion table that match the specified arbitrary SQL statement
	 */
	public RcNutricion[] findByDynamicSelect(String sql, Object[] sqlParams) throws RcNutricionDaoException;

	/** 
	 * Returns all rows from the rc_nutricion table that match the specified arbitrary SQL statement
	 */
	public RcNutricion[] findByDynamicWhere(String sql, Object[] sqlParams) throws RcNutricionDaoException;

}
