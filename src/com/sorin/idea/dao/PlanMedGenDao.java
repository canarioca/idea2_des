/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.sorin.idea.dao;

import java.util.Date;
import com.sorin.idea.dto.*;
import com.sorin.idea.exceptions.*;

public interface PlanMedGenDao
{
	/** 
	 * Inserts a new row in the plan_med_gen table.
	 */
	public PlanMedGenPk insert(PlanMedGen dto) throws PlanMedGenDaoException;

	/** 
	 * Updates a single row in the plan_med_gen table.
	 */
	public void update(PlanMedGenPk pk, PlanMedGen dto) throws PlanMedGenDaoException;

	/** 
	 * Deletes a single row in the plan_med_gen table.
	 */
	public void delete(PlanMedGenPk pk) throws PlanMedGenDaoException;

	/** 
	 * Returns the rows from the plan_med_gen table that matches the specified primary-key value.
	 */
	public PlanMedGen findByPrimaryKey(PlanMedGenPk pk) throws PlanMedGenDaoException;

	/** 
	 * Returns all rows from the plan_med_gen table that match the criteria 'IDPLANMEDGEN = :idplanmedgen'.
	 */
	public PlanMedGen findByPrimaryKey(Integer idplanmedgen) throws PlanMedGenDaoException;

	/** 
	 * Returns all rows from the plan_med_gen table that match the criteria ''.
	 */
	public PlanMedGen[] findAll() throws PlanMedGenDaoException;

	/** 
	 * Returns all rows from the plan_med_gen table that match the criteria 'IDPLANMEDGEN = :idplanmedgen'.
	 */
	public PlanMedGen[] findWhereIdplanmedgenEquals(int idplanmedgen) throws PlanMedGenDaoException;

	/** 
	 * Returns all rows from the plan_med_gen table that match the criteria 'IDPACIENTE = :idpaciente'.
	 */
	public PlanMedGen[] findWhereIdpacienteEquals(int idpaciente) throws PlanMedGenDaoException;

	/** 
	 * Returns all rows from the plan_med_gen table that match the criteria 'IDMEDGEN = :idmedgen'.
	 */
	public PlanMedGen[] findWhereIdmedgenEquals(int idmedgen) throws PlanMedGenDaoException;

	/** 
	 * Returns all rows from the plan_med_gen table that match the criteria 'IDMEDCOM = :idmedcom'.
	 */
	public PlanMedGen[] findWhereIdmedcomEquals(int idmedcom) throws PlanMedGenDaoException;

	/** 
	 * Returns all rows from the plan_med_gen table that match the criteria 'DOSIS = :dosis'.
	 */
	public PlanMedGen[] findWhereDosisEquals(String dosis) throws PlanMedGenDaoException;

	/** 
	 * Returns all rows from the plan_med_gen table that match the criteria 'UNIDAD = :unidad'.
	 */
	public PlanMedGen[] findWhereUnidadEquals(String unidad) throws PlanMedGenDaoException;

	/** 
	 * Returns all rows from the plan_med_gen table that match the criteria 'FRECUENCIA = :frecuencia'.
	 */
	public PlanMedGen[] findWhereFrecuenciaEquals(String frecuencia) throws PlanMedGenDaoException;

	/** 
	 * Returns all rows from the plan_med_gen table that match the criteria 'ADMINISTRACION = :administracion'.
	 */
	public PlanMedGen[] findWhereAdministracionEquals(String administracion) throws PlanMedGenDaoException;

	/** 
	 * Returns all rows from the plan_med_gen table that match the criteria 'IDVIA = :idvia'.
	 */
	public PlanMedGen[] findWhereIdviaEquals(int idvia) throws PlanMedGenDaoException;

	/** 
	 * Returns all rows from the plan_med_gen table that match the criteria 'FECHAPRESCRIPCION = :fechaprescripcion'.
	 */
	public PlanMedGen[] findWhereFechaprescripcionEquals(Date fechaprescripcion) throws PlanMedGenDaoException;

	/** 
	 * Returns all rows from the plan_med_gen table that match the criteria 'FECHAINICIO = :fechainicio'.
	 */
	public PlanMedGen[] findWhereFechainicioEquals(Date fechainicio) throws PlanMedGenDaoException;

	/** 
	 * Returns all rows from the plan_med_gen table that match the criteria 'FECHAMOD = :fechamod'.
	 */
	public PlanMedGen[] findWhereFechamodEquals(Date fechamod) throws PlanMedGenDaoException;

	/** 
	 * Returns all rows from the plan_med_gen table that match the criteria 'FECHASUSPENSION = :fechasuspension'.
	 */
	public PlanMedGen[] findWhereFechasuspensionEquals(Date fechasuspension) throws PlanMedGenDaoException;

	/** 
	 * Returns all rows from the plan_med_gen table that match the criteria 'MOTIVOSUSPENSION = :motivosuspension'.
	 */
	public PlanMedGen[] findWhereMotivosuspensionEquals(String motivosuspension) throws PlanMedGenDaoException;

	/** 
	 * Returns all rows from the plan_med_gen table that match the criteria 'ESTADO = :estado'.
	 */
	public PlanMedGen[] findWhereEstadoEquals(int estado) throws PlanMedGenDaoException;

	/** 
	 * Returns all rows from the plan_med_gen table that match the criteria 'PRESCRIPTOR = :prescriptor'.
	 */
	public PlanMedGen[] findWherePrescriptorEquals(String prescriptor) throws PlanMedGenDaoException;

	/** 
	 * Returns all rows from the plan_med_gen table that match the criteria 'COMENTARIOS = :comentarios'.
	 */
	public PlanMedGen[] findWhereComentariosEquals(String comentarios) throws PlanMedGenDaoException;

	/** 
	 * Returns all rows from the plan_med_gen table that match the criteria 'OTROS = :otros'.
	 */
	public PlanMedGen[] findWhereOtrosEquals(String otros) throws PlanMedGenDaoException;
	
	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the plan_med_gen table that match the specified arbitrary SQL statement
	 */
	public PlanMedGen[] findByDynamicSelect(String sql, Object[] sqlParams) throws PlanMedGenDaoException;

	/** 
	 * Returns all rows from the plan_med_gen table that match the specified arbitrary SQL statement
	 */
	public PlanMedGen[] findByDynamicWhere(String sql, Object[] sqlParams) throws PlanMedGenDaoException;

}
