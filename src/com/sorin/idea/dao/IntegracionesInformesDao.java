/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.sorin.idea.dao;

import java.util.Date;
import com.sorin.idea.dto.*;
import com.sorin.idea.exceptions.*;

public interface IntegracionesInformesDao
{
	/** 
	 * Inserts a new row in the integraciones_informes table.
	 */
	public IntegracionesInformesPk insert(IntegracionesInformes dto) throws IntegracionesInformesDaoException;

	/** 
	 * Updates a single row in the integraciones_informes table.
	 */
	public void update(IntegracionesInformesPk pk, IntegracionesInformes dto) throws IntegracionesInformesDaoException;

	/** 
	 * Deletes a single row in the integraciones_informes table.
	 */
	public void delete(IntegracionesInformesPk pk) throws IntegracionesInformesDaoException;

	/** 
	 * Returns the rows from the integraciones_informes table that matches the specified primary-key value.
	 */
	public IntegracionesInformes findByPrimaryKey(IntegracionesInformesPk pk) throws IntegracionesInformesDaoException;

	/** 
	 * Returns all rows from the integraciones_informes table that match the criteria 'IDINTEGRACIONES = :idintegraciones'.
	 */
	public IntegracionesInformes findByPrimaryKey(Integer idintegraciones) throws IntegracionesInformesDaoException;

	/** 
	 * Returns all rows from the integraciones_informes table that match the criteria ''.
	 */
	public IntegracionesInformes[] findAll() throws IntegracionesInformesDaoException;

	/** 
	 * Returns all rows from the integraciones_informes table that match the criteria 'IDINTEGRACIONES = :idintegraciones'.
	 */
	public IntegracionesInformes[] findWhereIdintegracionesEquals(int idintegraciones) throws IntegracionesInformesDaoException;

	/** 
	 * Returns all rows from the integraciones_informes table that match the criteria 'IDINTEGRACION = :idintegracion'.
	 */
	public IntegracionesInformes[] findWhereIdintegracionEquals(int idintegracion) throws IntegracionesInformesDaoException;

	/** 
	 * Returns all rows from the integraciones_informes table that match the criteria 'FECHARX = :fecharx'.
	 */
	public IntegracionesInformes[] findWhereFecharxEquals(Date fecharx) throws IntegracionesInformesDaoException;

	/** 
	 * Returns all rows from the integraciones_informes table that match the criteria 'FECHAREGISTRO = :fecharegistro'.
	 */
	public IntegracionesInformes[] findWhereFecharegistroEquals(Date fecharegistro) throws IntegracionesInformesDaoException;

	/** 
	 * Returns all rows from the integraciones_informes table that match the criteria 'IDSISTEMA = :idsistema'.
	 */
	public IntegracionesInformes[] findWhereIdsistemaEquals(int idsistema) throws IntegracionesInformesDaoException;

	/** 
	 * Returns all rows from the integraciones_informes table that match the criteria 'MODELO = :modelo'.
	 */
	public IntegracionesInformes[] findWhereModeloEquals(String modelo) throws IntegracionesInformesDaoException;

	/** 
	 * Returns all rows from the integraciones_informes table that match the criteria 'NSERIE = :nserie'.
	 */
	public IntegracionesInformes[] findWhereNserieEquals(String nserie) throws IntegracionesInformesDaoException;

	/** 
	 * Returns all rows from the integraciones_informes table that match the criteria 'NOMBRE_APS = :nombreAps'.
	 */
	public IntegracionesInformes[] findWhereNombreApsEquals(String nombreAps) throws IntegracionesInformesDaoException;

	/** 
	 * Returns all rows from the integraciones_informes table that match the criteria 'NHC = :nhc'.
	 */
	public IntegracionesInformes[] findWhereNhcEquals(String nhc) throws IntegracionesInformesDaoException;

	/** 
	 * Returns all rows from the integraciones_informes table that match the criteria 'NOMBREFICHERO = :nombrefichero'.
	 */
	public IntegracionesInformes[] findWhereNombreficheroEquals(String nombrefichero) throws IntegracionesInformesDaoException;

	/** 
	 * Returns all rows from the integraciones_informes table that match the criteria 'ESTADO = :estado'.
	 */
	public IntegracionesInformes[] findWhereEstadoEquals(int estado) throws IntegracionesInformesDaoException;

	/** 
	 * Returns all rows from the integraciones_informes table that match the criteria 'ERROR = :error'.
	 */
	public IntegracionesInformes[] findWhereErrorEquals(String error) throws IntegracionesInformesDaoException;

	/** 
	 * Returns all rows from the integraciones_informes table that match the criteria 'COMENTARIOS = :comentarios'.
	 */
	public IntegracionesInformes[] findWhereComentariosEquals(String comentarios) throws IntegracionesInformesDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the integraciones_informes table that match the specified arbitrary SQL statement
	 */
	public IntegracionesInformes[] findByDynamicSelect(String sql, Object[] sqlParams) throws IntegracionesInformesDaoException;

	/** 
	 * Returns all rows from the integraciones_informes table that match the specified arbitrary SQL statement
	 */
	public IntegracionesInformes[] findByDynamicWhere(String sql, Object[] sqlParams) throws IntegracionesInformesDaoException;

}
