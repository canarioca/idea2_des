/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.sorin.idea.dao;

import com.sorin.idea.dto.*;
import com.sorin.idea.exceptions.*;


public interface ArrDatosMesDao
{
	/** 
	 * Inserts a new row in the ARR_DATOS_MES table.
	 */
	public ArrDatosMesPk insert(ArrDatosMes dto) throws ArrDatosMesDaoException;

	/** 
	 * Updates a single row in the ARR_DATOS_MES table.
	 */
	public void update(ArrDatosMesPk pk, ArrDatosMes dto) throws ArrDatosMesDaoException;

	/** 
	 * Deletes a single row in the ARR_DATOS_MES table.
	 */
	public void delete(ArrDatosMesPk pk) throws ArrDatosMesDaoException;

	/** 
	 * Returns the rows from the ARR_DATOS_MES table that matches the specified primary-key value.
	 */
	public ArrDatosMes findByPrimaryKey(ArrDatosMesPk pk) throws ArrDatosMesDaoException;

	/** 
	 * Returns all rows from the ARR_DATOS_MES table that match the criteria 'MES = :mes AND ANIO = :anio'.
	 */
	public ArrDatosMes findByPrimaryKey(String mes, Integer anio) throws ArrDatosMesDaoException;

	/** 
	 * Returns all rows from the ARR_DATOS_MES table that match the criteria ''.
	 */
	public ArrDatosMes[] findAll() throws ArrDatosMesDaoException;

	/** 
	 * Returns all rows from the ARR_DATOS_MES table that match the criteria 'MES = :mes'.
	 */
	public ArrDatosMes[] findWhereMesEquals(String mes) throws ArrDatosMesDaoException;

	/** 
	 * Returns all rows from the ARR_DATOS_MES table that match the criteria 'ANIO = :anio'.
	 */
	public ArrDatosMes[] findWhereAnioEquals(long anio) throws ArrDatosMesDaoException;

	/** 
	 * Returns all rows from the ARR_DATOS_MES table that match the criteria 'MESASMES = :mesasmes'.
	 */
	public ArrDatosMes[] findWhereMesasmesEquals(String mesasmes) throws ArrDatosMesDaoException;

	/** 
	 * Returns all rows from the ARR_DATOS_MES table that match the criteria 'MESASTOT = :mesastot'.
	 */
	public ArrDatosMes[] findWhereMesastotEquals(String mesastot) throws ArrDatosMesDaoException;

	/** 
	 * Returns all rows from the ARR_DATOS_MES table that match the criteria 'RIEMES = :riemes'.
	 */
	public ArrDatosMes[] findWhereRiemesEquals(String riemes) throws ArrDatosMesDaoException;

	/** 
	 * Returns all rows from the ARR_DATOS_MES table that match the criteria 'RIETOT = :rietot'.
	 */
	public ArrDatosMes[] findWhereRietotEquals(String rietot) throws ArrDatosMesDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the ARR_DATOS_MES table that match the specified arbitrary SQL statement
	 */
	public ArrDatosMes[] findByDynamicSelect(String sql, Object[] sqlParams) throws ArrDatosMesDaoException;

	/** 
	 * Returns all rows from the ARR_DATOS_MES table that match the specified arbitrary SQL statement
	 */
	public ArrDatosMes[] findByDynamicWhere(String sql, Object[] sqlParams) throws ArrDatosMesDaoException;
	
}
