/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.sorin.idea.dao;

import com.sorin.idea.dto.*;
import com.sorin.idea.exceptions.*;


public interface ArrEnfIntroductoresDao
{
	/** 
	 * Inserts a new row in the ARR_ENF_INTRODUCTORES table.
	 */
	public void insert(ArrEnfIntroductores dto) throws ArrEnfIntroductoresDaoException;

	/** 
	 * Deletes a single row in the ARR_ENF table.
	 */
	public void delete(Integer codEnf) throws ArrEnfIntroductoresDaoException;
	
	/** 
	 * Returns all rows from the ARR_ENF_INTRODUCTORES table that match the criteria ''.
	 */
	public ArrEnfIntroductores[] findAll() throws ArrEnfIntroductoresDaoException;

	/** 
	 * Returns all rows from the ARR_ENF_INTRODUCTORES table that match the criteria 'ID_REG = :idReg'.
	 */
	public ArrEnfIntroductores[] findWhereIdRegEquals(long idReg) throws ArrEnfIntroductoresDaoException;

	/** 
	 * Returns all rows from the ARR_ENF_INTRODUCTORES table that match the criteria 'NUMERO = :numero'.
	 */
	public ArrEnfIntroductores[] findWhereNumeroEquals(String numero) throws ArrEnfIntroductoresDaoException;

	/** 
	 * Returns all rows from the ARR_ENF_INTRODUCTORES table that match the criteria 'CALIBRE = :calibre'.
	 */
	public ArrEnfIntroductores[] findWhereCalibreEquals(String calibre) throws ArrEnfIntroductoresDaoException;

	/** 
	 * Returns all rows from the ARR_ENF_INTRODUCTORES table that match the criteria 'TIPO = :tipo'.
	 */
	public ArrEnfIntroductores[] findWhereTipoEquals(String tipo) throws ArrEnfIntroductoresDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the ARR_ENF_INTRODUCTORES table that match the specified arbitrary SQL statement
	 */
	public ArrEnfIntroductores[] findByDynamicSelect(String sql, Object[] sqlParams) throws ArrEnfIntroductoresDaoException;

	/** 
	 * Returns all rows from the ARR_ENF_INTRODUCTORES table that match the specified arbitrary SQL statement
	 */
	public ArrEnfIntroductores[] findByDynamicWhere(String sql, Object[] sqlParams) throws ArrEnfIntroductoresDaoException;

}
