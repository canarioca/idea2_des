/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.sorin.idea.dao;

import com.sorin.idea.dto.*;
import com.sorin.idea.exceptions.*;


public interface ArrEstudioEnfDao
{
	/** 
	 * Inserts a new row in the ARR_ESTUDIO_ENF table.
	 */
	public ArrEstudioEnfPk insert(ArrEstudioEnf dto) throws ArrEstudioEnfDaoException;

	/** 
	 * Updates a single row in the ARR_ESTUDIO_ENF table.
	 */
	public void update(ArrEstudioEnfPk pk, ArrEstudioEnf dto) throws ArrEstudioEnfDaoException;

	/** 
	 * Deletes a single row in the ARR_ESTUDIO_ENF table.
	 */
	public void delete(ArrEstudioEnfPk pk) throws ArrEstudioEnfDaoException;

	/** 
	 * Returns the rows from the ARR_ESTUDIO_ENF table that matches the specified primary-key value.
	 */
	public ArrEstudioEnf findByPrimaryKey(ArrEstudioEnfPk pk) throws ArrEstudioEnfDaoException;

	/** 
	 * Returns all rows from the ARR_ESTUDIO_ENF table that match the criteria 'IDESTUDIO = :idestudio'.
	 */
	public ArrEstudioEnf findByPrimaryKey(Integer idestudio) throws ArrEstudioEnfDaoException;

	/** 
	 * Returns all rows from the ARR_ESTUDIO_ENF table that match the criteria ''.
	 */
	public ArrEstudioEnf[] findAll() throws ArrEstudioEnfDaoException;

	/** 
	 * Returns all rows from the ARR_ESTUDIO_ENF table that match the criteria 'IDESTUDIO = :idestudio'.
	 */
	public ArrEstudioEnf[] findWhereIdestudioEquals(long idestudio) throws ArrEstudioEnfDaoException;

	/** 
	 * Returns all rows from the ARR_ESTUDIO_ENF table that match the criteria 'IDENFERMERA = :idenfermera'.
	 */
	public ArrEstudioEnf[] findWhereIdenfermeraEquals(long idenfermera) throws ArrEstudioEnfDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the ARR_ESTUDIO_ENF table that match the specified arbitrary SQL statement
	 */
	public ArrEstudioEnf[] findByDynamicSelect(String sql, Object[] sqlParams) throws ArrEstudioEnfDaoException;

	/** 
	 * Returns all rows from the ARR_ESTUDIO_ENF table that match the specified arbitrary SQL statement
	 */
	public ArrEstudioEnf[] findByDynamicWhere(String sql, Object[] sqlParams) throws ArrEstudioEnfDaoException;

}
