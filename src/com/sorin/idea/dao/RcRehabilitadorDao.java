/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.sorin.idea.dao;

import java.util.Date;
import com.sorin.idea.dto.*;
import com.sorin.idea.exceptions.*;

public interface RcRehabilitadorDao
{
	/** 
	 * Inserts a new row in the rc_rehabilitador table.
	 */
	public RcRehabilitadorPk insert(RcRehabilitador dto) throws RcRehabilitadorDaoException;

	/** 
	 * Updates a single row in the rc_rehabilitador table.
	 */
	public void update(RcRehabilitadorPk pk, RcRehabilitador dto) throws RcRehabilitadorDaoException;

	/** 
	 * Deletes a single row in the rc_rehabilitador table.
	 */
	public void delete(RcRehabilitadorPk pk) throws RcRehabilitadorDaoException;

	/** 
	 * Returns the rows from the rc_rehabilitador table that matches the specified primary-key value.
	 */
	public RcRehabilitador findByPrimaryKey(RcRehabilitadorPk pk) throws RcRehabilitadorDaoException;

	/** 
	 * Returns all rows from the rc_rehabilitador table that match the criteria 'ID_RC_REHABILITADOR = :idRcRehabilitador'.
	 */
	public RcRehabilitador findByPrimaryKey(int idRcRehabilitador) throws RcRehabilitadorDaoException;

	/** 
	 * Returns all rows from the rc_rehabilitador table that match the criteria ''.
	 */
	public RcRehabilitador[] findAll() throws RcRehabilitadorDaoException;

	/** 
	 * Returns all rows from the rc_rehabilitador table that match the criteria 'ID_RC_REHABILITADOR = :idRcRehabilitador'.
	 */
	public RcRehabilitador[] findWhereIdRcRehabilitadorEquals(int idRcRehabilitador) throws RcRehabilitadorDaoException;

	/** 
	 * Returns all rows from the rc_rehabilitador table that match the criteria 'FECHA = :fecha'.
	 */
	public RcRehabilitador[] findWhereFechaEquals(Date fecha) throws RcRehabilitadorDaoException;

	/** 
	 * Returns all rows from the rc_rehabilitador table that match the criteria 'SEDENTARISMO = :sedentarismo'.
	 */
	public RcRehabilitador[] findWhereSedentarismoEquals(int sedentarismo) throws RcRehabilitadorDaoException;

	/** 
	 * Returns all rows from the rc_rehabilitador table that match the criteria 'NIVEL_EJERCICIO = :nivelEjercicio'.
	 */
	public RcRehabilitador[] findWhereNivelEjercicioEquals(String nivelEjercicio) throws RcRehabilitadorDaoException;

	/** 
	 * Returns all rows from the rc_rehabilitador table that match the criteria 'HORAS_EJERCICIO = :horasEjercicio'.
	 */
	public RcRehabilitador[] findWhereHorasEjercicioEquals(String horasEjercicio) throws RcRehabilitadorDaoException;

	/** 
	 * Returns all rows from the rc_rehabilitador table that match the criteria 'PARAMETRO_FVC = :parametroFvc'.
	 */
	public RcRehabilitador[] findWhereParametroFvcEquals(String parametroFvc) throws RcRehabilitadorDaoException;

	/** 
	 * Returns all rows from the rc_rehabilitador table that match the criteria 'PARAMETRO_FEVI = :parametroFevi'.
	 */
	public RcRehabilitador[] findWhereParametroFeviEquals(String parametroFevi) throws RcRehabilitadorDaoException;

	/** 
	 * Returns all rows from the rc_rehabilitador table that match the criteria 'PARAMETRO_FVC_FEVI = :parametroFvcFevi'.
	 */
	public RcRehabilitador[] findWhereParametroFvcFeviEquals(String parametroFvcFevi) throws RcRehabilitadorDaoException;

	/** 
	 * Returns all rows from the rc_rehabilitador table that match the criteria 'ID_PROBLEMA_ARTICULAR = :idProblemaArticular'.
	 */
	public RcRehabilitador[] findWhereIdProblemaArticularEquals(int idProblemaArticular) throws RcRehabilitadorDaoException;

	/** 
	 * Returns all rows from the rc_rehabilitador table that match the criteria 'ID_PROBLEMA_COGNITIVO = :idProblemaCognitivo'.
	 */
	public RcRehabilitador[] findWhereIdProblemaCognitivoEquals(int idProblemaCognitivo) throws RcRehabilitadorDaoException;

	/** 
	 * Returns all rows from the rc_rehabilitador table that match the criteria 'ID_PROBLEMA_SENSORIAL = :idProblemaSensorial'.
	 */
	public RcRehabilitador[] findWhereIdProblemaSensorialEquals(int idProblemaSensorial) throws RcRehabilitadorDaoException;

	/** 
	 * Returns all rows from the rc_rehabilitador table that match the criteria 'ID_NIVEL_EDUCATIVO = :idNivelEducativo'.
	 */
	public RcRehabilitador[] findWhereIdNivelEducativoEquals(int idNivelEducativo) throws RcRehabilitadorDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the rc_rehabilitador table that match the specified arbitrary SQL statement
	 */
	public RcRehabilitador[] findByDynamicSelect(String sql, Object[] sqlParams) throws RcRehabilitadorDaoException;

	/** 
	 * Returns all rows from the rc_rehabilitador table that match the specified arbitrary SQL statement
	 */
	public RcRehabilitador[] findByDynamicWhere(String sql, Object[] sqlParams) throws RcRehabilitadorDaoException;

}
