/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.sorin.idea.dao;

import com.sorin.idea.dto.*;
import com.sorin.idea.exceptions.*;


public interface SegSituacionclinicaDao
{
	/** 
	 * Inserts a new row in the seg_situacionclinica table.
	 */
	public SegSituacionclinicaPk insert(SegSituacionclinica dto) throws SegSituacionclinicaDaoException;

	/** 
	 * Updates a single row in the seg_situacionclinica table.
	 */
	public void update(SegSituacionclinicaPk pk, SegSituacionclinica dto) throws SegSituacionclinicaDaoException;

	/** 
	 * Deletes a single row in the seg_situacionclinica table.
	 */
	public void delete(SegSituacionclinicaPk pk) throws SegSituacionclinicaDaoException;

	/** 
	 * Returns the rows from the seg_situacionclinica table that matches the specified primary-key value.
	 */
	public SegSituacionclinica findByPrimaryKey(SegSituacionclinicaPk pk) throws SegSituacionclinicaDaoException;

	/** 
	 * Returns all rows from the seg_situacionclinica table that match the criteria 'IDSITCLIN = :idsitclin'.
	 */
	public SegSituacionclinica findByPrimaryKey(Integer idsitclin) throws SegSituacionclinicaDaoException;

	/** 
	 * Returns all rows from the seg_situacionclinica table that match the criteria ''.
	 */
	public SegSituacionclinica[] findAll() throws SegSituacionclinicaDaoException;

	/** 
	 * Returns all rows from the seg_situacionclinica table that match the criteria 'IDSITCLIN = :idsitclin'.
	 */
	public SegSituacionclinica[] findWhereIdsitclinEquals(int idsitclin) throws SegSituacionclinicaDaoException;

	/** 
	 * Returns all rows from the seg_situacionclinica table that match the criteria 'RITMO = :ritmo'.
	 */
	public SegSituacionclinica[] findWhereRitmoEquals(int ritmo) throws SegSituacionclinicaDaoException;

	/** 
	 * Returns all rows from the seg_situacionclinica table that match the criteria 'CONDUCAV = :conducav'.
	 */
	public SegSituacionclinica[] findWhereConducavEquals(int conducav) throws SegSituacionclinicaDaoException;

	/** 
	 * Returns all rows from the seg_situacionclinica table that match the criteria 'QRS = :qrs'.
	 */
	public SegSituacionclinica[] findWhereQrsEquals(int qrs) throws SegSituacionclinicaDaoException;

	/** 
	 * Returns all rows from the seg_situacionclinica table that match the criteria 'ANCHURAQRS = :anchuraqrs'.
	 */
	public SegSituacionclinica[] findWhereAnchuraqrsEquals(String anchuraqrs) throws SegSituacionclinicaDaoException;

	/** 
	 * Returns all rows from the seg_situacionclinica table that match the criteria 'FEVI = :fevi'.
	 */
	public SegSituacionclinica[] findWhereFeviEquals(String fevi) throws SegSituacionclinicaDaoException;

	/** 
	 * Returns all rows from the seg_situacionclinica table that match the criteria 'FUNCIONVENTRICULAR = :funcionventricular'.
	 */
	public SegSituacionclinica[] findWhereFuncionventricularEquals(int funcionventricular) throws SegSituacionclinicaDaoException;

	/** 
	 * Returns all rows from the seg_situacionclinica table that match the criteria 'NYHA = :nyha'.
	 */
	public SegSituacionclinica[] findWhereNyhaEquals(int nyha) throws SegSituacionclinicaDaoException;

	/** 
	 * Returns all rows from the seg_situacionclinica table that match the criteria 'CARDIOPATIA = :cardiopatia'.
	 */
	public SegSituacionclinica[] findWhereCardiopatiaEquals(int cardiopatia) throws SegSituacionclinicaDaoException;

	/** 
	 * Returns all rows from the seg_situacionclinica table that match the criteria 'OTRA = :otra'.
	 */
	public SegSituacionclinica[] findWhereOtraEquals(String otra) throws SegSituacionclinicaDaoException;

	/** 
	 * Returns all rows from the seg_situacionclinica table that match the criteria 'AEVOLUCION = :aevolucion'.
	 */
	public SegSituacionclinica[] findWhereAevolucionEquals(String aevolucion) throws SegSituacionclinicaDaoException;

	/** 
	 * Returns all rows from the seg_situacionclinica table that match the criteria 'REVASC = :revasc'.
	 */
	public SegSituacionclinica[] findWhereRevascEquals(short revasc) throws SegSituacionclinicaDaoException;

	/** 
	 * Returns all rows from the seg_situacionclinica table that match the criteria 'INFPREVIO = :infprevio'.
	 */
	public SegSituacionclinica[] findWhereInfprevioEquals(short infprevio) throws SegSituacionclinicaDaoException;

	/** 
	 * Returns all rows from the seg_situacionclinica table that match the criteria 'ANIO = :anio'.
	 */
	public SegSituacionclinica[] findWhereAnioEquals(String anio) throws SegSituacionclinicaDaoException;

	/** 
	 * Returns all rows from the seg_situacionclinica table that match the criteria 'LOCALIZACION = :localizacion'.
	 */
	public SegSituacionclinica[] findWhereLocalizacionEquals(int localizacion) throws SegSituacionclinicaDaoException;

	/** 
	 * Returns all rows from the seg_situacionclinica table that match the criteria 'HTA = :hta'.
	 */
	public SegSituacionclinica[] findWhereHtaEquals(short hta) throws SegSituacionclinicaDaoException;

	/** 
	 * Returns all rows from the seg_situacionclinica table that match the criteria 'DISLIPEMIA = :dislipemia'.
	 */
	public SegSituacionclinica[] findWhereDislipemiaEquals(short dislipemia) throws SegSituacionclinicaDaoException;

	/** 
	 * Returns all rows from the seg_situacionclinica table that match the criteria 'DIABETES = :diabetes'.
	 */
	public SegSituacionclinica[] findWhereDiabetesEquals(short diabetes) throws SegSituacionclinicaDaoException;

	/** 
	 * Returns all rows from the seg_situacionclinica table that match the criteria 'TABAQUISMO = :tabaquismo'.
	 */
	public SegSituacionclinica[] findWhereTabaquismoEquals(short tabaquismo) throws SegSituacionclinicaDaoException;

	/** 
	 * Returns all rows from the seg_situacionclinica table that match the criteria 'INGALCOHOLICA = :ingalcoholica'.
	 */
	public SegSituacionclinica[] findWhereIngalcoholicaEquals(short ingalcoholica) throws SegSituacionclinicaDaoException;

	/** 
	 * Returns all rows from the seg_situacionclinica table that match the criteria 'ACV = :acv'.
	 */
	public SegSituacionclinica[] findWhereAcvEquals(short acv) throws SegSituacionclinicaDaoException;

	/** 
	 * Returns all rows from the seg_situacionclinica table that match the criteria 'AIT = :ait'.
	 */
	public SegSituacionclinica[] findWhereAitEquals(short ait) throws SegSituacionclinicaDaoException;

	/** 
	 * Returns all rows from the seg_situacionclinica table that match the criteria 'EPOC = :epoc'.
	 */
	public SegSituacionclinica[] findWhereEpocEquals(short epoc) throws SegSituacionclinicaDaoException;

	/** 
	 * Returns all rows from the seg_situacionclinica table that match the criteria 'SAHS = :sahs'.
	 */
	public SegSituacionclinica[] findWhereSahsEquals(short sahs) throws SegSituacionclinicaDaoException;

	/** 
	 * Returns all rows from the seg_situacionclinica table that match the criteria 'TIPOSAHS = :tiposahs'.
	 */
	public SegSituacionclinica[] findWhereTiposahsEquals(int tiposahs) throws SegSituacionclinicaDaoException;

	/** 
	 * Returns all rows from the seg_situacionclinica table that match the criteria 'AHI = :ahi'.
	 */
	public SegSituacionclinica[] findWhereAhiEquals(String ahi) throws SegSituacionclinicaDaoException;

	/** 
	 * Returns all rows from the seg_situacionclinica table that match the criteria 'CPAP = :cpap'.
	 */
	public SegSituacionclinica[] findWhereCpapEquals(short cpap) throws SegSituacionclinicaDaoException;

	/** 
	 * Returns all rows from the seg_situacionclinica table that match the criteria 'INSRENAL = :insrenal'.
	 */
	public SegSituacionclinica[] findWhereInsrenalEquals(short insrenal) throws SegSituacionclinicaDaoException;

	/** 
	 * Returns all rows from the seg_situacionclinica table that match the criteria 'TIPOINSRENAL = :tipoinsrenal'.
	 */
	public SegSituacionclinica[] findWhereTipoinsrenalEquals(int tipoinsrenal) throws SegSituacionclinicaDaoException;

	/** 
	 * Returns all rows from the seg_situacionclinica table that match the criteria 'NEOPLASIA = :neoplasia'.
	 */
	public SegSituacionclinica[] findWhereNeoplasiaEquals(short neoplasia) throws SegSituacionclinicaDaoException;

	/** 
	 * Returns all rows from the seg_situacionclinica table that match the criteria 'TIPONEOPLASIA = :tiponeoplasia'.
	 */
	public SegSituacionclinica[] findWhereTiponeoplasiaEquals(String tiponeoplasia) throws SegSituacionclinicaDaoException;

	/** 
	 * Returns all rows from the seg_situacionclinica table that match the criteria 'AFECTIROIDEA = :afectiroidea'.
	 */
	public SegSituacionclinica[] findWhereAfectiroideaEquals(int afectiroidea) throws SegSituacionclinicaDaoException;

	/** 
	 * Returns all rows from the seg_situacionclinica table that match the criteria 'COMENTARIOS = :comentarios'.
	 */
	public SegSituacionclinica[] findWhereComentariosEquals(String comentarios) throws SegSituacionclinicaDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the seg_situacionclinica table that match the specified arbitrary SQL statement
	 */
	public SegSituacionclinica[] findByDynamicSelect(String sql, Object[] sqlParams) throws SegSituacionclinicaDaoException;

	/** 
	 * Returns all rows from the seg_situacionclinica table that match the specified arbitrary SQL statement
	 */
	public SegSituacionclinica[] findByDynamicWhere(String sql, Object[] sqlParams) throws SegSituacionclinicaDaoException;

}
