/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.sorin.idea.dao;

import com.sorin.idea.dto.*;
import com.sorin.idea.exceptions.*;

public interface RcRehaProbSensorialesDao
{
	/** 
	 * Inserts a new row in the RC_REHA_PROB_SENSORIALES table.
	 */
	public RcRehaProbSensorialesPk insert(RcRehaProbSensoriales dto) throws RcRehaProbSensorialesDaoException;

	/** 
	 * Updates a single row in the RC_REHA_PROB_SENSORIALES table.
	 */
	public void update(RcRehaProbSensorialesPk pk, RcRehaProbSensoriales dto) throws RcRehaProbSensorialesDaoException;

	/** 
	 * Deletes a single row in the RC_REHA_PROB_SENSORIALES table.
	 */
	public void delete(RcRehaProbSensorialesPk pk) throws RcRehaProbSensorialesDaoException;

	/** 
	 * Returns the rows from the RC_REHA_PROB_SENSORIALES table that matches the specified primary-key value.
	 */
	public RcRehaProbSensoriales findByPrimaryKey(RcRehaProbSensorialesPk pk) throws RcRehaProbSensorialesDaoException;

	/** 
	 * Returns all rows from the RC_REHA_PROB_SENSORIALES table that match the criteria 'ID_PROBLEMA_SENSORIAL = :idProblemaSensorial'.
	 */
	public RcRehaProbSensoriales findByPrimaryKey(long idProblemaSensorial) throws RcRehaProbSensorialesDaoException;

	/** 
	 * Returns all rows from the RC_REHA_PROB_SENSORIALES table that match the criteria ''.
	 */
	public RcRehaProbSensoriales[] findAll() throws RcRehaProbSensorialesDaoException;

	/** 
	 * Returns all rows from the RC_REHA_PROB_SENSORIALES table that match the criteria 'ID_PROBLEMA_SENSORIAL = :idProblemaSensorial'.
	 */
	public RcRehaProbSensoriales[] findWhereIdProblemaSensorialEquals(long idProblemaSensorial) throws RcRehaProbSensorialesDaoException;

	/** 
	 * Returns all rows from the RC_REHA_PROB_SENSORIALES table that match the criteria 'NOMBRE_PROBLEMA = :nombreProblema'.
	 */
	public RcRehaProbSensoriales[] findWhereNombreProblemaEquals(String nombreProblema) throws RcRehaProbSensorialesDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the RC_REHA_PROB_SENSORIALES table that match the specified arbitrary SQL statement
	 */
	public RcRehaProbSensoriales[] findByDynamicSelect(String sql, Object[] sqlParams) throws RcRehaProbSensorialesDaoException;

	/** 
	 * Returns all rows from the RC_REHA_PROB_SENSORIALES table that match the specified arbitrary SQL statement
	 */
	public RcRehaProbSensoriales[] findByDynamicWhere(String sql, Object[] sqlParams) throws RcRehaProbSensorialesDaoException;
	
	/** 
	 * Returns all rows from the RC_REHA_PROB_SENSORIALES table that match the specified arbitrary SQL statement inner join with RC_REHABILITADOR
	 */
	public RcRehaProbSensoriales findByInnerJoinRCRehabilitador( long idRehabilitador ) throws RcRehaProbSensorialesDaoException;

}
