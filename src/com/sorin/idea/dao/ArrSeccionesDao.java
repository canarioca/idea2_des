/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.sorin.idea.dao;

import com.sorin.idea.dto.*;
import com.sorin.idea.exceptions.*;


public interface ArrSeccionesDao
{
	/** 
	 * Inserts a new row in the ARR_SECCIONES table.
	 */
	public ArrSeccionesPk insert(ArrSecciones dto) throws ArrSeccionesDaoException;

	/** 
	 * Updates a single row in the ARR_SECCIONES table.
	 */
	public void update(ArrSeccionesPk pk, ArrSecciones dto) throws ArrSeccionesDaoException;

	/** 
	 * Deletes a single row in the ARR_SECCIONES table.
	 */
	public void delete(ArrSeccionesPk pk) throws ArrSeccionesDaoException;

	/** 
	 * Returns the rows from the ARR_SECCIONES table that matches the specified primary-key value.
	 */
	public ArrSecciones findByPrimaryKey(ArrSeccionesPk pk) throws ArrSeccionesDaoException;

	/** 
	 * Returns all rows from the ARR_SECCIONES table that match the criteria 'CODIGO = :codigo'.
	 */
	public ArrSecciones findByPrimaryKey(Integer codigo) throws ArrSeccionesDaoException;

	/** 
	 * Returns all rows from the ARR_SECCIONES table that match the criteria ''.
	 */
	public ArrSecciones[] findAll() throws ArrSeccionesDaoException;

	/** 
	 * Returns all rows from the ARR_SECCIONES table that match the criteria 'CODIGO = :codigo'.
	 */
	public ArrSecciones[] findWhereCodigoEquals(long codigo) throws ArrSeccionesDaoException;

	/** 
	 * Returns all rows from the ARR_SECCIONES table that match the criteria 'NOMBRE = :nombre'.
	 */
	public ArrSecciones[] findWhereNombreEquals(String nombre) throws ArrSeccionesDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the ARR_SECCIONES table that match the specified arbitrary SQL statement
	 */
	public ArrSecciones[] findByDynamicSelect(String sql, Object[] sqlParams) throws ArrSeccionesDaoException;

	/** 
	 * Returns all rows from the ARR_SECCIONES table that match the specified arbitrary SQL statement
	 */
	public ArrSecciones[] findByDynamicWhere(String sql, Object[] sqlParams) throws ArrSeccionesDaoException;

}
