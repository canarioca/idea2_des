/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.sorin.idea.dao;

import java.util.Date;
import com.sorin.idea.dto.*;
import com.sorin.idea.exceptions.*;

public interface IntImplantesDao
{
	/** 
	 * Inserts a new row in the int_implantes table.
	 */
	public IntImplantesPk insert(IntImplantes dto) throws IntImplantesDaoException;

	/** 
	 * Updates a single row in the int_implantes table.
	 */
	public void update(IntImplantesPk pk, IntImplantes dto) throws IntImplantesDaoException;

	/** 
	 * Deletes a single row in the int_implantes table.
	 */
	public void delete(IntImplantesPk pk) throws IntImplantesDaoException;

	/** 
	 * Returns the rows from the int_implantes table that matches the specified primary-key value.
	 */
	public IntImplantes findByPrimaryKey(IntImplantesPk pk) throws IntImplantesDaoException;

	/** 
	 * Returns all rows from the int_implantes table that match the criteria 'IDINTEGRACION = :idintegracion'.
	 */
	public IntImplantes findByPrimaryKey(Integer idintegracion) throws IntImplantesDaoException;

	/** 
	 * Returns all rows from the int_implantes table that match the criteria ''.
	 */
	public IntImplantes[] findAll() throws IntImplantesDaoException;

	/** 
	 * Returns all rows from the int_implantes table that match the criteria 'IDINTEGRACION = :idintegracion'.
	 */
	public IntImplantes[] findWhereIdintegracionEquals(int idintegracion) throws IntImplantesDaoException;

	/** 
	 * Returns all rows from the int_implantes table that match the criteria 'FECHAIMPLANTE = :fechaimplante'.
	 */
	public IntImplantes[] findWhereFechaimplanteEquals(Date fechaimplante) throws IntImplantesDaoException;

	/** 
	 * Returns all rows from the int_implantes table that match the criteria 'MODELOG = :modelog'.
	 */
	public IntImplantes[] findWhereModelogEquals(String modelog) throws IntImplantesDaoException;

	/** 
	 * Returns all rows from the int_implantes table that match the criteria 'NUMSERIEG = :numserieg'.
	 */
	public IntImplantes[] findWhereNumseriegEquals(String numserieg) throws IntImplantesDaoException;

	/** 
	 * Returns all rows from the int_implantes table that match the criteria 'FABRICANTEG = :fabricanteg'.
	 */
	public IntImplantes[] findWhereFabricantegEquals(String fabricanteg) throws IntImplantesDaoException;

	/** 
	 * Returns all rows from the int_implantes table that match the criteria 'ORU_PATH = :oruPath'.
	 */
	public IntImplantes[] findWhereOruPathEquals(String oruPath) throws IntImplantesDaoException;

	/** 
	 * Returns all rows from the int_implantes table that match the criteria 'FECHASEG = :fechaseg'.
	 */
	public IntImplantes[] findWhereFechasegEquals(Date fechaseg) throws IntImplantesDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the int_implantes table that match the specified arbitrary SQL statement
	 */
	public IntImplantes[] findByDynamicSelect(String sql, Object[] sqlParams) throws IntImplantesDaoException;

	/** 
	 * Returns all rows from the int_implantes table that match the specified arbitrary SQL statement
	 */
	public IntImplantes[] findByDynamicWhere(String sql, Object[] sqlParams) throws IntImplantesDaoException;

}
