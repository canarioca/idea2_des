/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.sorin.idea.dao;

import com.sorin.idea.dto.*;
import com.sorin.idea.exceptions.*;


public interface ArrEstudioIntentoDao
{
	/** 
	 * Inserts a new row in the ARR_ESTUDIO_INTENTO table.
	 */
	public ArrEstudioIntentoPk insert(ArrEstudioIntento dto) throws ArrEstudioIntentoDaoException;

	/** 
	 * Updates a single row in the ARR_ESTUDIO_INTENTO table.
	 */
	public void update(ArrEstudioIntentoPk pk, ArrEstudioIntento dto) throws ArrEstudioIntentoDaoException;

	/** 
	 * Deletes a single row in the ARR_ESTUDIO_INTENTO table.
	 */
	public void delete(ArrEstudioIntentoPk pk) throws ArrEstudioIntentoDaoException;

	/** 
	 * Returns the rows from the ARR_ESTUDIO_INTENTO table that matches the specified primary-key value.
	 */
	public ArrEstudioIntento findByPrimaryKey(ArrEstudioIntentoPk pk) throws ArrEstudioIntentoDaoException;

	/** 
	 * Returns all rows from the ARR_ESTUDIO_INTENTO table that match the criteria 'IDESTUDIO = :idestudio AND IDINTENTO = :idintento'.
	 */
	public ArrEstudioIntento findByPrimaryKey(Integer idestudio) throws ArrEstudioIntentoDaoException;

	/** 
	 * Returns all rows from the ARR_ESTUDIO_INTENTO table that match the criteria ''.
	 */
	public ArrEstudioIntento[] findAll() throws ArrEstudioIntentoDaoException;

	/** 
	 * Returns all rows from the ARR_ESTUDIO_INTENTO table that match the criteria 'IDESTUDIO = :idestudio'.
	 */
	public ArrEstudioIntento[] findWhereIdestudioEquals(long idestudio) throws ArrEstudioIntentoDaoException;

	/** 
	 * Returns all rows from the ARR_ESTUDIO_INTENTO table that match the criteria 'IDNIVEL1 = :idnivel1'.
	 */
	public ArrEstudioIntento[] findWhereIdnivel1Equals(long idnivel1) throws ArrEstudioIntentoDaoException;

	/** 
	 * Returns all rows from the ARR_ESTUDIO_INTENTO table that match the criteria 'IDNIVEL2 = :idnivel2'.
	 */
	public ArrEstudioIntento[] findWhereIdnivel2Equals(long idnivel2) throws ArrEstudioIntentoDaoException;

	/** 
	 * Returns all rows from the ARR_ESTUDIO_INTENTO table that match the criteria 'IDNIVEL3 = :idnivel3'.
	 */
	public ArrEstudioIntento[] findWhereIdnivel3Equals(long idnivel3) throws ArrEstudioIntentoDaoException;

	/** 
	 * Returns all rows from the ARR_ESTUDIO_INTENTO table that match the criteria 'OTROS = :otros'.
	 */
	public ArrEstudioIntento[] findWhereOtrosEquals(String otros) throws ArrEstudioIntentoDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the ARR_ESTUDIO_INTENTO table that match the specified arbitrary SQL statement
	 */
	public ArrEstudioIntento[] findByDynamicSelect(String sql, Object[] sqlParams) throws ArrEstudioIntentoDaoException;

	/** 
	 * Returns all rows from the ARR_ESTUDIO_INTENTO table that match the specified arbitrary SQL statement
	 */
	public ArrEstudioIntento[] findByDynamicWhere(String sql, Object[] sqlParams) throws ArrEstudioIntentoDaoException;

	/** 
	 * ESTADISTICAS
	 * @throws ArrEstudioIntentoDaoException 
	 */
	public ArrEstudioIntento[] getEstadisticas(ArrEstudioIntento intento) throws ArrTestAtpDaoException, ArrEstudioIntentoDaoException;
}
