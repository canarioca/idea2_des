/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.sorin.idea.dao;

import java.util.ArrayList;
import java.util.Date;
import com.sorin.idea.dto.*;
import com.sorin.idea.exceptions.*;

public interface ArrListaEsperaDao
{
	/** 
	 * Inserts a new row in the arr_lista_espera table.
	 */
	public ArrListaEsperaPk insert(ArrListaEspera dto) throws ArrListaEsperaDaoException;

	/** 
	 * Updates a single row in the arr_lista_espera table.
	 */
	public void update(ArrListaEsperaPk pk, ArrListaEspera dto) throws ArrListaEsperaDaoException;

	/** 
	 * Deletes a single row in the arr_lista_espera table.
	 */
	public void delete(ArrListaEsperaPk pk) throws ArrListaEsperaDaoException;

	/** 
	 * Returns the rows from the arr_lista_espera table that matches the specified primary-key value.
	 */
	public ArrListaEspera findByPrimaryKey(ArrListaEsperaPk pk) throws ArrListaEsperaDaoException;

	/** 
	 * Returns all rows from the arr_lista_espera table that match the criteria 'CODIGO_PACIENTE = :codigoPaciente AND CODIGO_LE = :codigoLe'.
	 */
	public ArrListaEspera findByPrimaryKey(Integer codigoPaciente, Integer codigoLe) throws ArrListaEsperaDaoException;

	/** 
	 * Returns all rows from the arr_lista_espera table that match the criteria ''.
	 */
	public ArrListaEspera[] findAll() throws ArrListaEsperaDaoException;

	/** 
	 * Returns all rows from the arr_lista_espera table that match the criteria 'CODIGO_PACIENTE = :codigoPaciente'.
	 */
	public ArrListaEspera[] findWhereCodigoPacienteEquals(int codigoPaciente) throws ArrListaEsperaDaoException;

	/** 
	 * Returns all rows from the arr_lista_espera table that match the criteria 'INGRESO = :ingreso'.
	 */
	public ArrListaEspera[] findWhereIngresoEquals(Date ingreso) throws ArrListaEsperaDaoException;

	/** 
	 * Returns all rows from the arr_lista_espera table that match the criteria 'ARRITMIA = :arritmia'.
	 */
	public ArrListaEspera[] findWhereArritmiaEquals(String arritmia) throws ArrListaEsperaDaoException;

	/** 
	 * Returns all rows from the arr_lista_espera table that match the criteria 'NOTAS = :notas'.
	 */
	public ArrListaEspera[] findWhereNotasEquals(String notas) throws ArrListaEsperaDaoException;

	/** 
	 * Returns all rows from the arr_lista_espera table that match the criteria 'CARACTER = :caracter'.
	 */
	public ArrListaEspera[] findWhereCaracterEquals(String caracter) throws ArrListaEsperaDaoException;

	/** 
	 * Returns all rows from the arr_lista_espera table that match the criteria 'CARDIOPATIA = :cardiopatia'.
	 */
	public ArrListaEspera[] findWhereCardiopatiaEquals(String cardiopatia) throws ArrListaEsperaDaoException;

	/** 
	 * Returns all rows from the arr_lista_espera table that match the criteria 'ANESTESIA = :anestesia'.
	 */
	public ArrListaEspera[] findWhereAnestesiaEquals(String anestesia) throws ArrListaEsperaDaoException;

	/** 
	 * Returns all rows from the arr_lista_espera table that match the criteria 'PROCEDIMIENTO = :procedimiento'.
	 */
	public ArrListaEspera[] findWhereProcedimientoEquals(String procedimiento) throws ArrListaEsperaDaoException;

	/** 
	 * Returns all rows from the arr_lista_espera table that match the criteria 'TRATAMIENTO1 = :tratamiento1'.
	 */
	public ArrListaEspera[] findWhereTratamiento1Equals(String tratamiento1) throws ArrListaEsperaDaoException;

	/** 
	 * Returns all rows from the arr_lista_espera table that match the criteria 'CODIGO_LE = :codigoLe'.
	 */
	public ArrListaEspera[] findWhereCodigoLeEquals(int codigoLe) throws ArrListaEsperaDaoException;

	/** 
	 * Returns all rows from the arr_lista_espera table that match the criteria 'ESTADO = :estado'.
	 */
	public ArrListaEspera[] findWhereEstadoEquals(int estado) throws ArrListaEsperaDaoException;

	/** 
	 * Returns all rows from the arr_lista_espera table that match the criteria 'RECLAMACION = :reclamacion'.
	 */
	public ArrListaEspera[] findWhereReclamacionEquals(Date reclamacion) throws ArrListaEsperaDaoException;

	/** 
	 * Returns all rows from the arr_lista_espera table that match the criteria 'INCLUIDOPOR = :incluidopor'.
	 */
	public ArrListaEspera[] findWhereIncluidoporEquals(int incluidopor) throws ArrListaEsperaDaoException;
	public ArrayList<ArrListaEspera> findWhereFiltro(ArrListaEspera filtro) throws ArrListaEsperaDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the arr_lista_espera table that match the specified arbitrary SQL statement
	 */
	public ArrListaEspera[] findByDynamicSelect(String sql, Object[] sqlParams) throws ArrListaEsperaDaoException;

	/** 
	 * Returns all rows from the arr_lista_espera table that match the specified arbitrary SQL statement
	 */
	public ArrListaEspera[] findByDynamicWhere(String sql, Object[] sqlParams) throws ArrListaEsperaDaoException;

}
