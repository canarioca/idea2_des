/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.sorin.idea.dao;

import java.util.Date;
import com.sorin.idea.dto.*;
import com.sorin.idea.exceptions.*;

public interface ProtocolosDao
{
	/** 
	 * Inserts a new row in the protocolos table.
	 */
	public ProtocolosPk insert(Protocolos dto) throws ProtocolosDaoException;

	/** 
	 * Updates a single row in the protocolos table.
	 */
	public void update(ProtocolosPk pk, Protocolos dto) throws ProtocolosDaoException;

	/** 
	 * Deletes a single row in the protocolos table.
	 */
	public void delete(ProtocolosPk pk) throws ProtocolosDaoException;

	/** 
	 * Returns the rows from the protocolos table that matches the specified primary-key value.
	 */
	public Protocolos findByPrimaryKey(ProtocolosPk pk) throws ProtocolosDaoException;

	/** 
	 * Returns all rows from the protocolos table that match the criteria 'IDPROTOCOLO = :idprotocolo'.
	 */
	public Protocolos findByPrimaryKey(Integer idprotocolo) throws ProtocolosDaoException;

	/** 
	 * Returns all rows from the protocolos table that match the criteria ''.
	 */
	public Protocolos[] findAll() throws ProtocolosDaoException;

	/** 
	 * Returns all rows from the protocolos table that match the criteria 'IDPROTOCOLO = :idprotocolo'.
	 */
	public Protocolos[] findWhereIdprotocoloEquals(int idprotocolo) throws ProtocolosDaoException;

	/** 
	 * Returns all rows from the protocolos table that match the criteria 'CODIGO = :codigo'.
	 */
	public Protocolos[] findWhereCodigoEquals(int codigo) throws ProtocolosDaoException;

	/** 
	 * Returns all rows from the protocolos table that match the criteria 'FECHACREACION = :fechacreacion'.
	 */
	public Protocolos[] findWhereFechacreacionEquals(Date fechacreacion) throws ProtocolosDaoException;

	/** 
	 * Returns all rows from the protocolos table that match the criteria 'TIPO = :tipo'.
	 */
	public Protocolos[] findWhereTipoEquals(int tipo) throws ProtocolosDaoException;

	/** 
	 * Returns all rows from the protocolos table that match the criteria 'ESTADO = :estado'.
	 */
	public Protocolos[] findWhereEstadoEquals(int estado) throws ProtocolosDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the protocolos table that match the specified arbitrary SQL statement
	 */
	public Protocolos[] findByDynamicSelect(String sql, Object[] sqlParams) throws ProtocolosDaoException;

	/** 
	 * Returns all rows from the protocolos table that match the specified arbitrary SQL statement
	 */
	public Protocolos[] findByDynamicWhere(String sql, Object[] sqlParams) throws ProtocolosDaoException;

}
