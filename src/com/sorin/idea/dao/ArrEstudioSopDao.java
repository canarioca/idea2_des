/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.sorin.idea.dao;

import com.sorin.idea.dto.*;
import com.sorin.idea.exceptions.*;


public interface ArrEstudioSopDao
{
	/** 
	 * Inserts a new row in the ARR_ESTUDIO_SOP table.
	 */
	public ArrEstudioSopPk insert(ArrEstudioSop dto) throws ArrEstudioSopDaoException;

	/** 
	 * Updates a single row in the ARR_ESTUDIO_SOP table.
	 */
	public void update(ArrEstudioSopPk pk, ArrEstudioSop dto) throws ArrEstudioSopDaoException;

	/** 
	 * Deletes a single row in the ARR_ESTUDIO_SOP table.
	 */
	public void delete(ArrEstudioSopPk pk) throws ArrEstudioSopDaoException;

	/** 
	 * Returns the rows from the ARR_ESTUDIO_SOP table that matches the specified primary-key value.
	 */
	public ArrEstudioSop findByPrimaryKey(ArrEstudioSopPk pk) throws ArrEstudioSopDaoException;

	/** 
	 * Returns all rows from the ARR_ESTUDIO_SOP table that match the criteria 'IDESTUDIO = :idestudio'.
	 */
	public ArrEstudioSop findByPrimaryKey(Integer idestudio) throws ArrEstudioSopDaoException;

	/** 
	 * Returns all rows from the ARR_ESTUDIO_SOP table that match the criteria ''.
	 */
	public ArrEstudioSop[] findAll() throws ArrEstudioSopDaoException;

	/** 
	 * Returns all rows from the ARR_ESTUDIO_SOP table that match the criteria 'IDESTUDIO = :idestudio'.
	 */
	public ArrEstudioSop[] findWhereIdestudioEquals(long idestudio) throws ArrEstudioSopDaoException;

	/** 
	 * Returns all rows from the ARR_ESTUDIO_SOP table that match the criteria 'IDOPERADOR = :idoperador'.
	 */
	public ArrEstudioSop[] findWhereIdoperadorEquals(long idoperador) throws ArrEstudioSopDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the ARR_ESTUDIO_SOP table that match the specified arbitrary SQL statement
	 */
	public ArrEstudioSop[] findByDynamicSelect(String sql, Object[] sqlParams) throws ArrEstudioSopDaoException;

	/** 
	 * Returns all rows from the ARR_ESTUDIO_SOP table that match the specified arbitrary SQL statement
	 */
	public ArrEstudioSop[] findByDynamicWhere(String sql, Object[] sqlParams) throws ArrEstudioSopDaoException;

}
