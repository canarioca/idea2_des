/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.sorin.idea.dao;

import com.sorin.idea.dto.*;
import com.sorin.idea.exceptions.*;


public interface ArrEstudioPeriodoDao
{
	/** 
	 * Inserts a new row in the ARR_ESTUDIO_PERIODO table.
	 */
	public ArrEstudioPeriodoPk insert(ArrEstudioPeriodo dto) throws ArrEstudioPeriodoDaoException;

	/** 
	 * Updates a single row in the ARR_ESTUDIO_PERIODO table.
	 */
	public void update(ArrEstudioPeriodoPk pk, ArrEstudioPeriodo dto) throws ArrEstudioPeriodoDaoException;

	/** 
	 * Deletes a single row in the ARR_ESTUDIO_PERIODO table.
	 */
	public void delete(ArrEstudioPeriodoPk pk) throws ArrEstudioPeriodoDaoException;

	/** 
	 * Returns the rows from the ARR_ESTUDIO_PERIODO table that matches the specified primary-key value.
	 */
	public ArrEstudioPeriodo findByPrimaryKey(ArrEstudioPeriodoPk pk) throws ArrEstudioPeriodoDaoException;

	/** 
	 * Returns all rows from the ARR_ESTUDIO_PERIODO table that match the criteria 'IDESTUDIO = :idestudio'.
	 */
	public ArrEstudioPeriodo findByPrimaryKey(Integer idestudio) throws ArrEstudioPeriodoDaoException;

	/** 
	 * Returns all rows from the ARR_ESTUDIO_PERIODO table that match the criteria ''.
	 */
	public ArrEstudioPeriodo[] findAll() throws ArrEstudioPeriodoDaoException;

	/** 
	 * Returns all rows from the ARR_ESTUDIO_PERIODO table that match the criteria 'IDESTUDIO = :idestudio'.
	 */
	public ArrEstudioPeriodo[] findWhereIdestudioEquals(long idestudio) throws ArrEstudioPeriodoDaoException;

	/** 
	 * Returns all rows from the ARR_ESTUDIO_PERIODO table that match the criteria 'IDTIPO = :idtipo'.
	 */
	public ArrEstudioPeriodo[] findWhereIdtipoEquals(long idtipo) throws ArrEstudioPeriodoDaoException;

	/** 
	 * Returns all rows from the ARR_ESTUDIO_PERIODO table that match the criteria 'IDTEJIDO = :idtejido'.
	 */
	public ArrEstudioPeriodo[] findWhereIdtejidoEquals(long idtejido) throws ArrEstudioPeriodoDaoException;

	/** 
	 * Returns all rows from the ARR_ESTUDIO_PERIODO table that match the criteria 'IDS1 = :ids1'.
	 */
	public ArrEstudioPeriodo[] findWhereIds1Equals(long ids1) throws ArrEstudioPeriodoDaoException;

	/** 
	 * Returns all rows from the ARR_ESTUDIO_PERIODO table that match the criteria 'REF = :ref'.
	 */
	public ArrEstudioPeriodo[] findWhereRefEquals(String ref) throws ArrEstudioPeriodoDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the ARR_ESTUDIO_PERIODO table that match the specified arbitrary SQL statement
	 */
	public ArrEstudioPeriodo[] findByDynamicSelect(String sql, Object[] sqlParams) throws ArrEstudioPeriodoDaoException;

	/** 
	 * Returns all rows from the ARR_ESTUDIO_PERIODO table that match the specified arbitrary SQL statement
	 */
	public ArrEstudioPeriodo[] findByDynamicWhere(String sql, Object[] sqlParams) throws ArrEstudioPeriodoDaoException;

}
