/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.sorin.idea.dao;

import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.Date;

import com.sorin.idea.dto.*;
import com.sorin.idea.exceptions.*;


public interface ArrTestAtpDao
{
	/** 
	 * Inserts a new row in the ARR_TEST_ATP table.
	 */
	public ArrTestAtpPk insert(ArrTestAtp dto) throws ArrTestAtpDaoException;

	/** 
	 * Updates a single row in the ARR_TEST_ATP table.
	 */
	public void update(ArrTestAtpPk pk, ArrTestAtp dto) throws ArrTestAtpDaoException;

	/** 
	 * Deletes a single row in the ARR_TEST_ATP table.
	 */
	public void delete(ArrTestAtpPk pk) throws ArrTestAtpDaoException;

	/** 
	 * Returns the rows from the ARR_TEST_ATP table that matches the specified primary-key value.
	 */
	public ArrTestAtp findByPrimaryKey(ArrTestAtpPk pk) throws ArrTestAtpDaoException;

	/** 
	 * Returns all rows from the ARR_TEST_ATP table that match the criteria 'CODIGO_TEST = :codigoTest'.
	 */
	public ArrTestAtp findByPrimaryKey(Integer codigoTest) throws ArrTestAtpDaoException;

	/** 
	 * Returns all rows from the ARR_TEST_ATP table that match the criteria ''.
	 */
	public ArrTestAtp[] findAll() throws ArrTestAtpDaoException;

	/** 
	 * Returns all rows from the ARR_TEST_ATP table that match the criteria 'CODIGO_PACIENTE = :codigoPaciente'.
	 */
	public ArrTestAtp[] findWhereCodigoPacienteEquals(long codigoPaciente) throws ArrTestAtpDaoException;

	/** 
	 * Returns all rows from the ARR_TEST_ATP table that match the criteria 'CODIGO_TEST = :codigoTest'.
	 */
	public ArrTestAtp[] findWhereCodigoTestEquals(long codigoTest) throws ArrTestAtpDaoException;

	/** 
	 * Returns all rows from the ARR_TEST_ATP table that match the criteria 'CLINICO = :clinico'.
	 */
	public ArrTestAtp[] findWhereClinicoEquals(long clinico) throws ArrTestAtpDaoException;

	/** 
	 * Returns all rows from the ARR_TEST_ATP table that match the criteria 'ECG = :ecg'.
	 */
	public ArrTestAtp[] findWhereEcgEquals(long ecg) throws ArrTestAtpDaoException;

	/** 
	 * Returns all rows from the ARR_TEST_ATP table that match the criteria 'INTERVALOS = :intervalos'.
	 */
	public ArrTestAtp[] findWhereIntervalosEquals(long intervalos) throws ArrTestAtpDaoException;

	/** 
	 * Returns all rows from the ARR_TEST_ATP table that match the criteria 'QRS = :qrs'.
	 */
	public ArrTestAtp[] findWhereQrsEquals(long qrs) throws ArrTestAtpDaoException;

	/** 
	 * Returns all rows from the ARR_TEST_ATP table that match the criteria 'DOSIS1 = :dosis1'.
	 */
	public ArrTestAtp[] findWhereDosis1Equals(long dosis1) throws ArrTestAtpDaoException;

	/** 
	 * Returns all rows from the ARR_TEST_ATP table that match the criteria 'DOSIS2 = :dosis2'.
	 */
	public ArrTestAtp[] findWhereDosis2Equals(long dosis2) throws ArrTestAtpDaoException;

	/** 
	 * Returns all rows from the ARR_TEST_ATP table that match the criteria 'COMPLICA = :complica'.
	 */
	public ArrTestAtp[] findWhereComplicaEquals(long complica) throws ArrTestAtpDaoException;

	/** 
	 * Returns all rows from the ARR_TEST_ATP table that match the criteria 'TRATAM = :tratam'.
	 */
	public ArrTestAtp[] findWhereTratamEquals(long tratam) throws ArrTestAtpDaoException;

	/** 
	 * Returns all rows from the ARR_TEST_ATP table that match the criteria 'FECHA = :fecha'.
	 */
	public ArrTestAtp[] findWhereFechaEquals(Date fecha) throws ArrTestAtpDaoException;

	/** 
	 * Returns all rows from the arr_test_atp table that match the criteria 'COMPLICAOTR = :complicaotr'.
	 */
	public ArrTestAtp[] findWhereComplicaotrEquals(String complicaotr) throws ArrTestAtpDaoException;

	/** 
	 * Returns all rows from the arr_test_atp table that match the criteria 'NPROC = :nproc'.
	 */
	public ArrTestAtp[] findWhereNprocEquals(String nproc) throws ArrTestAtpDaoException;

	/**
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the ARR_TEST_ATP table that match the specified arbitrary SQL statement
	 */
	public ArrTestAtp[] findByDynamicSelect(String sql, Object[] sqlParams) throws ArrTestAtpDaoException;

	/** 
	 * Returns all rows from the ARR_TEST_ATP table that match the specified arbitrary SQL statement
	 */
	public ArrTestAtp[] findByDynamicWhere(String sql, Object[] sqlParams) throws ArrTestAtpDaoException;
	
	/** 
	 * ESTADISTICAS
	 */
	public ArrayList<ArrayList<Object>> getEstadisticas(Date fechaini,Date fechafin,ArrTestAtp test) throws ArrTestAtpDaoException;
	public ArrayList<ArrayList<Object>> getEstadisticasATP(Date fechaini, Date fechafin) throws ArrTestAtpDaoException;

}
