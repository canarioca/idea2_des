/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.sorin.idea.dao;

import com.sorin.idea.dto.*;
import com.sorin.idea.exceptions.*;

public interface AgendacitaDao
{
	/** 
	 * Inserts a new row in the agendacita table.
	 */
	public AgendacitaPk insert(Agendacita dto) throws AgendacitaDaoException;

	/** 
	 * Updates a single row in the agendacita table.
	 */
	public void update(AgendacitaPk pk, Agendacita dto) throws AgendacitaDaoException;

	/** 
	 * Deletes a single row in the agendacita table.
	 */
	public void delete(AgendacitaPk pk) throws AgendacitaDaoException;

	/** 
	 * Returns the rows from the agendacita table that matches the specified primary-key value.
	 */
	public Agendacita findByPrimaryKey(AgendacitaPk pk) throws AgendacitaDaoException;

	/** 
	 * Returns all rows from the agendacita table that match the criteria 'IDAGENDA = :idagenda AND IDEVENTO = :idevento'.
	 */
	public Agendacita findByPrimaryKey(Integer idagenda, Integer idevento) throws AgendacitaDaoException;

	/** 
	 * Returns all rows from the agendacita table that match the criteria ''.
	 */
	public Agendacita[] findAll() throws AgendacitaDaoException;

	/** 
	 * Returns all rows from the agendacita table that match the criteria 'IDAGENDA = :idagenda'.
	 */
	public Agendacita[] findWhereIdagendaEquals(int idagenda) throws AgendacitaDaoException;

	/** 
	 * Returns all rows from the agendacita table that match the criteria 'IDEVENTO = :idevento'.
	 */
	public Agendacita[] findWhereIdeventoEquals(int idevento) throws AgendacitaDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the agendacita table that match the specified arbitrary SQL statement
	 */
	public Agendacita[] findByDynamicSelect(String sql, Object[] sqlParams) throws AgendacitaDaoException;

	/** 
	 * Returns all rows from the agendacita table that match the specified arbitrary SQL statement
	 */
	public Agendacita[] findByDynamicWhere(String sql, Object[] sqlParams) throws AgendacitaDaoException;

}
