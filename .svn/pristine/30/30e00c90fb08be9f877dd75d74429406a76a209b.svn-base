/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.sorin.idea.dao;

import java.util.Date;
import com.sorin.idea.dto.*;
import com.sorin.idea.exceptions.*;

public interface SegSeguimientoClinicoDao
{
	/** 
	 * Inserts a new row in the seg_seguimiento_clinico table.
	 */
	public SegSeguimientoClinicoPk insert(SegSeguimientoClinico dto) throws SegSeguimientoClinicoDaoException;

	/** 
	 * Updates a single row in the seg_seguimiento_clinico table.
	 */
	public void update(SegSeguimientoClinicoPk pk, SegSeguimientoClinico dto) throws SegSeguimientoClinicoDaoException;

	/** 
	 * Deletes a single row in the seg_seguimiento_clinico table.
	 */
	public void delete(SegSeguimientoClinicoPk pk) throws SegSeguimientoClinicoDaoException;

	/** 
	 * Returns the rows from the seg_seguimiento_clinico table that matches the specified primary-key value.
	 */
	public SegSeguimientoClinico findByPrimaryKey(SegSeguimientoClinicoPk pk) throws SegSeguimientoClinicoDaoException;

	/** 
	 * Returns all rows from the seg_seguimiento_clinico table that match the criteria 'IDSEGCLIN = :idsegclin'.
	 */
	public SegSeguimientoClinico findByPrimaryKey(Integer idsegclin) throws SegSeguimientoClinicoDaoException;

	/** 
	 * Returns all rows from the seg_seguimiento_clinico table that match the criteria ''.
	 */
	public SegSeguimientoClinico[] findAll() throws SegSeguimientoClinicoDaoException;

	/** 
	 * Returns all rows from the seg_seguimiento_clinico table that match the criteria 'IDSEGCLIN = :idsegclin'.
	 */
	public SegSeguimientoClinico[] findWhereIdsegclinEquals(int idsegclin) throws SegSeguimientoClinicoDaoException;

	/** 
	 * Returns all rows from the seg_seguimiento_clinico table that match the criteria 'FECHA = :fecha'.
	 */
	public SegSeguimientoClinico[] findWhereFechaEquals(Date fecha) throws SegSeguimientoClinicoDaoException;

	/** 
	 * Returns all rows from the seg_seguimiento_clinico table that match the criteria 'TIPOSEG = :tiposeg'.
	 */
	public SegSeguimientoClinico[] findWhereTiposegEquals(int tiposeg) throws SegSeguimientoClinicoDaoException;

	/** 
	 * Returns all rows from the seg_seguimiento_clinico table that match the criteria 'PROGRAMADO = :programado'.
	 */
	public SegSeguimientoClinico[] findWhereProgramadoEquals(int programado) throws SegSeguimientoClinicoDaoException;

	/** 
	 * Returns all rows from the seg_seguimiento_clinico table that match the criteria 'MOTIVO = :motivo'.
	 */
	public SegSeguimientoClinico[] findWhereMotivoEquals(int motivo) throws SegSeguimientoClinicoDaoException;

	/** 
	 * Returns all rows from the seg_seguimiento_clinico table that match the criteria 'OTROMOTIVO = :otromotivo'.
	 */
	public SegSeguimientoClinico[] findWhereOtromotivoEquals(String otromotivo) throws SegSeguimientoClinicoDaoException;

	/** 
	 * Returns all rows from the seg_seguimiento_clinico table that match the criteria 'OBSERVACIONES = :observaciones'.
	 */
	public SegSeguimientoClinico[] findWhereObservacionesEquals(String observaciones) throws SegSeguimientoClinicoDaoException;

	/** 
	 * Returns all rows from the seg_seguimiento_clinico table that match the criteria 'COMENTARIOS = :comentarios'.
	 */
	public SegSeguimientoClinico[] findWhereComentariosEquals(String comentarios) throws SegSeguimientoClinicoDaoException;

	/** 
	 * Returns all rows from the seg_seguimiento_clinico table that match the criteria 'RESULTADOS = :resultados'.
	 */
	public SegSeguimientoClinico[] findWhereResultadosEquals(String resultados) throws SegSeguimientoClinicoDaoException;

	/** 
	 * Returns all rows from the seg_seguimiento_clinico table that match the criteria 'OPMED = :opmed'.
	 */
	public SegSeguimientoClinico[] findWhereOpmedEquals(String opmed) throws SegSeguimientoClinicoDaoException;

	/** 
	 * Returns all rows from the seg_seguimiento_clinico table that match the criteria 'OPENF = :openf'.
	 */
	public SegSeguimientoClinico[] findWhereOpenfEquals(String openf) throws SegSeguimientoClinicoDaoException;

	/** 
	 * Returns all rows from the seg_seguimiento_clinico table that match the criteria 'TIPOPROCREF = :tipoprocref'.
	 */
	public SegSeguimientoClinico[] findWhereTipoprocrefEquals(int tipoprocref) throws SegSeguimientoClinicoDaoException;

	/** 
	 * Returns all rows from the seg_seguimiento_clinico table that match the criteria 'IDPROCREF = :idprocref'.
	 */
	public SegSeguimientoClinico[] findWhereIdprocrefEquals(int idprocref) throws SegSeguimientoClinicoDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the seg_seguimiento_clinico table that match the specified arbitrary SQL statement
	 */
	public SegSeguimientoClinico[] findByDynamicSelect(String sql, Object[] sqlParams) throws SegSeguimientoClinicoDaoException;

	/** 
	 * Returns all rows from the seg_seguimiento_clinico table that match the specified arbitrary SQL statement
	 */
	public SegSeguimientoClinico[] findByDynamicWhere(String sql, Object[] sqlParams) throws SegSeguimientoClinicoDaoException;

}
