/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.sorin.idea.dao;

import com.sorin.idea.dto.*;
import com.sorin.idea.exceptions.*;


public interface ArrEstudioNprocDao
{
	/** 
	 * Inserts a new row in the ARR_PACIENTE_NPROC table.
	 */
	public ArrEstudioNprocPk insert(ArrEstudioNproc dto) throws ArrEstudioNprocDaoException;

	/** 
	 * Updates a single row in the ARR_PACIENTE_NPROC table.
	 */
	public void update(ArrEstudioNprocPk pk, ArrEstudioNproc dto) throws ArrEstudioNprocDaoException;

	/** 
	 * Deletes a single row in the ARR_PACIENTE_NPROC table.
	 */
	public void delete(ArrEstudioNprocPk pk) throws ArrEstudioNprocDaoException;

	/** 
	 * Returns the rows from the ARR_PACIENTE_NPROC table that matches the specified primary-key value.
	 */
	public ArrEstudioNproc findByPrimaryKey(ArrEstudioNprocPk pk) throws ArrEstudioNprocDaoException;

	/** 
	 * Returns all rows from the ARR_PACIENTE_NPROC table that match the criteria 'IDPACIENTE = :idpaciente'.
	 */
	public ArrEstudioNproc findByPrimaryKey(Integer idpaciente) throws ArrEstudioNprocDaoException;

	/** 
	 * Returns all rows from the ARR_PACIENTE_NPROC table that match the criteria ''.
	 */
	public ArrEstudioNproc[] findAll() throws ArrEstudioNprocDaoException;

	/** 
	 * Returns all rows from the ARR_PACIENTE_NPROC table that match the criteria 'IDPACIENTE = :idpaciente'.
	 */
	public ArrEstudioNproc[] findWhereIdestudioEquals(long idpaciente) throws ArrEstudioNprocDaoException;

	/** 
	 * Returns all rows from the ARR_PACIENTE_NPROC table that match the criteria 'IDPROC = :idproc'.
	 */
	public ArrEstudioNproc[] findWhereIdprocEquals(long idproc) throws ArrEstudioNprocDaoException;

	/** 
	 * Returns all rows from the ARR_PACIENTE_NPROC table that match the criteria 'NUMPROC = :numproc'.
	 */
	public ArrEstudioNproc[] findWhereNumprocEquals(String numproc) throws ArrEstudioNprocDaoException;

	/** 
	 * Returns all rows from the ARR_PACIENTE_NPROC table that match the criteria 'IDMOTIVO = :idmotivo'.
	 */
	public ArrEstudioNproc[] findWhereIdmotivoEquals(long idmotivo) throws ArrEstudioNprocDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the ARR_PACIENTE_NPROC table that match the specified arbitrary SQL statement
	 */
	public ArrEstudioNproc[] findByDynamicSelect(String sql, Object[] sqlParams) throws ArrEstudioNprocDaoException;

	/** 
	 * Returns all rows from the ARR_PACIENTE_NPROC table that match the specified arbitrary SQL statement
	 */
	public ArrEstudioNproc[] findByDynamicWhere(String sql, Object[] sqlParams) throws ArrEstudioNprocDaoException;

}
