/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.sorin.idea.dao;

import com.sorin.idea.dto.*;
import com.sorin.idea.exceptions.*;


public interface ArrEnfActDao
{
	/** 
	 * Inserts a new row in the ARR_ENF_ACT table.
	 */
	public void insert(ArrEnfAct dto) throws ArrEnfActDaoException;
	public void delete(Integer codEnf) throws ArrEnfActDaoException;
	/** 
	 * Returns all rows from the ARR_ENF_ACT table that match the criteria ''.
	 */
	public ArrEnfAct[] findAll() throws ArrEnfActDaoException;

	/** 
	 * Returns all rows from the ARR_ENF_ACT table that match the criteria 'ID_REGISTRO = :idRegistro'.
	 */
	public ArrEnfAct[] findWhereIdRegistroEquals(long idRegistro) throws ArrEnfActDaoException;

	/** 
	 * Returns all rows from the ARR_ENF_ACT table that match the criteria 'ACT = :act'.
	 */
	public ArrEnfAct[] findWhereActEquals(long act) throws ArrEnfActDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the ARR_ENF_ACT table that match the specified arbitrary SQL statement
	 */
	public ArrEnfAct[] findByDynamicSelect(String sql, Object[] sqlParams) throws ArrEnfActDaoException;

	/** 
	 * Returns all rows from the ARR_ENF_ACT table that match the specified arbitrary SQL statement
	 */
	public ArrEnfAct[] findByDynamicWhere(String sql, Object[] sqlParams) throws ArrEnfActDaoException;

}
