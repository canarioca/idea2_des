/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.sorin.idea.dao;

import com.sorin.idea.dto.*;
import com.sorin.idea.exceptions.*;


public interface ImpIndicacionDao
{
	/** 
	 * Inserts a new row in the imp_indicacion table.
	 */
	public ImpIndicacionPk insert(ImpIndicacion dto) throws ImpIndicacionDaoException;

	/** 
	 * Updates a single row in the imp_indicacion table.
	 */
	public void update(ImpIndicacionPk pk, ImpIndicacion dto) throws ImpIndicacionDaoException;

	/** 
	 * Deletes a single row in the imp_indicacion table.
	 */
	public void delete(ImpIndicacionPk pk) throws ImpIndicacionDaoException;

	/** 
	 * Returns the rows from the imp_indicacion table that matches the specified primary-key value.
	 */
	public ImpIndicacion findByPrimaryKey(ImpIndicacionPk pk) throws ImpIndicacionDaoException;

	/** 
	 * Returns all rows from the imp_indicacion table that match the criteria 'IDINDICACION = :idindicacion'.
	 */
	public ImpIndicacion findByPrimaryKey(Integer idindicacion) throws ImpIndicacionDaoException;

	/** 
	 * Returns all rows from the imp_indicacion table that match the criteria ''.
	 */
	public ImpIndicacion[] findAll() throws ImpIndicacionDaoException;

	/** 
	 * Returns all rows from the imp_indicacion table that match the criteria 'IDINDICACION = :idindicacion'.
	 */
	public ImpIndicacion[] findWhereIdindicacionEquals(int idindicacion) throws ImpIndicacionDaoException;

	/** 
	 * Returns all rows from the imp_indicacion table that match the criteria 'RITMOBASAL = :ritmobasal'.
	 */
	public ImpIndicacion[] findWhereRitmobasalEquals(int ritmobasal) throws ImpIndicacionDaoException;

	/** 
	 * Returns all rows from the imp_indicacion table that match the criteria 'CONDUCAV = :conducav'.
	 */
	public ImpIndicacion[] findWhereConducavEquals(int conducav) throws ImpIndicacionDaoException;

	/** 
	 * Returns all rows from the imp_indicacion table that match the criteria 'QRS = :qrs'.
	 */
	public ImpIndicacion[] findWhereQrsEquals(int qrs) throws ImpIndicacionDaoException;

	/** 
	 * Returns all rows from the imp_indicacion table that match the criteria 'ANCHURAQRS = :anchuraqrs'.
	 */
	public ImpIndicacion[] findWhereAnchuraqrsEquals(String anchuraqrs) throws ImpIndicacionDaoException;

	/** 
	 * Returns all rows from the imp_indicacion table that match the criteria 'FEYECCION = :feyeccion'.
	 */
	public ImpIndicacion[] findWhereFeyeccionEquals(int feyeccion) throws ImpIndicacionDaoException;

	/** 
	 * Returns all rows from the imp_indicacion table that match the criteria 'NYHA = :nyha'.
	 */
	public ImpIndicacion[] findWhereNyhaEquals(int nyha) throws ImpIndicacionDaoException;

	/** 
	 * Returns all rows from the imp_indicacion table that match the criteria 'CARDIOPATIA = :cardiopatia'.
	 */
	public ImpIndicacion[] findWhereCardiopatiaEquals(int cardiopatia) throws ImpIndicacionDaoException;

	/** 
	 * Returns all rows from the imp_indicacion table that match the criteria 'AEVOLUCION = :aevolucion'.
	 */
	public ImpIndicacion[] findWhereAevolucionEquals(String aevolucion) throws ImpIndicacionDaoException;

	/** 
	 * Returns all rows from the imp_indicacion table that match the criteria 'REVASC = :revasc'.
	 */
	public ImpIndicacion[] findWhereRevascEquals(short revasc) throws ImpIndicacionDaoException;

	/** 
	 * Returns all rows from the imp_indicacion table that match the criteria 'INFPREV = :infprev'.
	 */
	public ImpIndicacion[] findWhereInfprevEquals(short infprev) throws ImpIndicacionDaoException;

	/** 
	 * Returns all rows from the imp_indicacion table that match the criteria 'ANIO = :anio'.
	 */
	public ImpIndicacion[] findWhereAnioEquals(String anio) throws ImpIndicacionDaoException;

	/** 
	 * Returns all rows from the imp_indicacion table that match the criteria 'LOCALIZACION = :localizacion'.
	 */
	public ImpIndicacion[] findWhereLocalizacionEquals(int localizacion) throws ImpIndicacionDaoException;

	/** 
	 * Returns all rows from the imp_indicacion table that match the criteria 'INSRENAL = :insrenal'.
	 */
	public ImpIndicacion[] findWhereInsrenalEquals(short insrenal) throws ImpIndicacionDaoException;

	/** 
	 * Returns all rows from the imp_indicacion table that match the criteria 'ANTFA = :antfa'.
	 */
	public ImpIndicacion[] findWhereAntfaEquals(short antfa) throws ImpIndicacionDaoException;

	/** 
	 * Returns all rows from the imp_indicacion table that match the criteria 'DIABETES = :diabetes'.
	 */
	public ImpIndicacion[] findWhereDiabetesEquals(short diabetes) throws ImpIndicacionDaoException;

	/** 
	 * Returns all rows from the imp_indicacion table that match the criteria 'HIPERTENSION = :hipertension'.
	 */
	public ImpIndicacion[] findWhereHipertensionEquals(short hipertension) throws ImpIndicacionDaoException;

	/** 
	 * Returns all rows from the imp_indicacion table that match the criteria 'MUERTESUBITA = :muertesubita'.
	 */
	public ImpIndicacion[] findWhereMuertesubitaEquals(short muertesubita) throws ImpIndicacionDaoException;

	/** 
	 * Returns all rows from the imp_indicacion table that match the criteria 'FUMADOR = :fumador'.
	 */
	public ImpIndicacion[] findWhereFumadorEquals(short fumador) throws ImpIndicacionDaoException;

	/** 
	 * Returns all rows from the imp_indicacion table that match the criteria 'HIPERCOLEST = :hipercolest'.
	 */
	public ImpIndicacion[] findWhereHipercolestEquals(short hipercolest) throws ImpIndicacionDaoException;

	/** 
	 * Returns all rows from the imp_indicacion table that match the criteria 'ACV = :acv'.
	 */
	public ImpIndicacion[] findWhereAcvEquals(short acv) throws ImpIndicacionDaoException;

	/** 
	 * Returns all rows from the imp_indicacion table that match the criteria 'ARRITMIAS = :arritmias'.
	 */
	public ImpIndicacion[] findWhereArritmiasEquals(int arritmias) throws ImpIndicacionDaoException;

	/** 
	 * Returns all rows from the imp_indicacion table that match the criteria 'EEF = :eef'.
	 */
	public ImpIndicacion[] findWhereEefEquals(int eef) throws ImpIndicacionDaoException;

	/** 
	 * Returns all rows from the imp_indicacion table that match the criteria 'ETIOLOGIA = :etiologia'.
	 */
	public ImpIndicacion[] findWhereEtiologiaEquals(int etiologia) throws ImpIndicacionDaoException;

	/** 
	 * Returns all rows from the imp_indicacion table that match the criteria 'OTRA = :otra'.
	 */
	public ImpIndicacion[] findWhereOtraEquals(String otra) throws ImpIndicacionDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the imp_indicacion table that match the specified arbitrary SQL statement
	 */
	public ImpIndicacion[] findByDynamicSelect(String sql, Object[] sqlParams) throws ImpIndicacionDaoException;

	/** 
	 * Returns all rows from the imp_indicacion table that match the specified arbitrary SQL statement
	 */
	public ImpIndicacion[] findByDynamicWhere(String sql, Object[] sqlParams) throws ImpIndicacionDaoException;

}
