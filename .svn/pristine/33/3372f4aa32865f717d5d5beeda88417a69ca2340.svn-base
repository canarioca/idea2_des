/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.sorin.idea.dao;

import com.sorin.idea.dto.*;
import com.sorin.idea.exceptions.*;

public interface RcPsicoSituacionLaboralDao
{
	/** 
	 * Inserts a new row in the RC_PSICO_SITUACION_LABORAL table.
	 */
	public RcPsicoSituacionLaboralPk insert(RcPsicoSituacionLaboral dto) throws RcPsicoSituacionLaboralDaoException;

	/** 
	 * Updates a single row in the RC_PSICO_SITUACION_LABORAL table.
	 */
	public void update(RcPsicoSituacionLaboralPk pk, RcPsicoSituacionLaboral dto) throws RcPsicoSituacionLaboralDaoException;

	/** 
	 * Deletes a single row in the RC_PSICO_SITUACION_LABORAL table.
	 */
	public void delete(RcPsicoSituacionLaboralPk pk) throws RcPsicoSituacionLaboralDaoException;

	/** 
	 * Returns the rows from the RC_PSICO_SITUACION_LABORAL table that matches the specified primary-key value.
	 */
	public RcPsicoSituacionLaboral findByPrimaryKey(RcPsicoSituacionLaboralPk pk) throws RcPsicoSituacionLaboralDaoException;

	/** 
	 * Returns all rows from the RC_PSICO_SITUACION_LABORAL table that match the criteria 'ID_SITUACION_LABORAL = :idSituacionLaboral'.
	 */
	public RcPsicoSituacionLaboral findByPrimaryKey(long idSituacionLaboral) throws RcPsicoSituacionLaboralDaoException;

	/** 
	 * Returns all rows from the RC_PSICO_SITUACION_LABORAL table that match the criteria ''.
	 */
	public RcPsicoSituacionLaboral[] findAll() throws RcPsicoSituacionLaboralDaoException;

	/** 
	 * Returns all rows from the RC_PSICO_SITUACION_LABORAL table that match the criteria 'ID_SITUACION_LABORAL = :idSituacionLaboral'.
	 */
	public RcPsicoSituacionLaboral[] findWhereIdSituacionLaboralEquals(long idSituacionLaboral) throws RcPsicoSituacionLaboralDaoException;

	/** 
	 * Returns all rows from the RC_PSICO_SITUACION_LABORAL table that match the criteria 'SITUACION = :situacion'.
	 */
	public RcPsicoSituacionLaboral[] findWhereSituacionEquals(String situacion) throws RcPsicoSituacionLaboralDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the RC_PSICO_SITUACION_LABORAL table that match the specified arbitrary SQL statement
	 */
	public RcPsicoSituacionLaboral[] findByDynamicSelect(String sql, Object[] sqlParams) throws RcPsicoSituacionLaboralDaoException;

	/** 
	 * Returns all rows from the RC_PSICO_SITUACION_LABORAL table that match the specified arbitrary SQL statement
	 */
	public RcPsicoSituacionLaboral[] findByDynamicWhere(String sql, Object[] sqlParams) throws RcPsicoSituacionLaboralDaoException;

	/** 
	 * Returns all rows from the RC_PSICO_SITUACION_LABORAL table that match the specified arbitrary SQL statement inner join with RC_PSICOLOGIA
	 */
	public RcPsicoSituacionLaboral findByInnerJoinRCRehabilitador( long idPsicologia ) throws RcPsicoSituacionLaboralDaoException;
}
