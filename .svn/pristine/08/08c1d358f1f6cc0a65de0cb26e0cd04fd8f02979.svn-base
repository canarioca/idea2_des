/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.sorin.idea.dto;

import java.io.Serializable;
import java.util.*;

import javax.faces.event.ActionEvent;
import javax.faces.model.SelectItem;

import com.sorin.idea.dao.*;
import com.sorin.idea.exceptions.*;
import com.sorin.idea.factory.*;

public class ArrEstudioComplicaciones implements Serializable
{
	/** 
	 * This attribute maps to the column IDESTUDIO in the ARR_ESTUDIO_COMPLICACIONES table.
	 */
	protected Integer idestudio;

	/** 
	 * This attribute maps to the column EDIAGNOSTICO in the ARR_ESTUDIO_COMPLICACIONES table.
	 */
	protected Integer ediagnostico;

	/** 
	 * This attribute maps to the column PROCEDIMIENTO in the ARR_ESTUDIO_COMPLICACIONES table.
	 */
	protected Integer procedimiento;

	/** 
	 * This attribute maps to the column IDPROCEDIMIENTO in the ARR_ESTUDIO_COMPLICACIONES table.
	 */
	protected Integer idprocedimiento;

	/** 
	 * This attribute maps to the column IDPROCEDIMIENTON2 in the ARR_ESTUDIO_COMPLICACIONES table.
	 */
	protected Integer idprocedimienton2;

	/** 
	 * This attribute maps to the column IDPROCEDIMIENTON3 in the ARR_ESTUDIO_COMPLICACIONES table.
	 */
	protected Integer idprocedimienton3;

	/** 
	 * This attribute maps to the column IDPROCEDIMIENTON4 in the ARR_ESTUDIO_COMPLICACIONES table.
	 */
	protected Integer idprocedimienton4;

	/** 
	 * This attribute maps to the column IDCHECK in the ARR_ESTUDIO_COMPLICACIONES table.
	 */
	protected String comentarios;
	
	private ArrayList<ComplicacionesPacientes> listacompldiag;

	/**
	 * Method 'ArrEstudioComplicaciones'
	 * 
	 */
	public ArrEstudioComplicaciones()
	{
		this.idprocedimiento = 0;
		this.idprocedimienton2 = 0;
		this.idprocedimienton3 = 0;
		this.idprocedimienton4 = 0;
		this.listacompldiag = new ArrayList<ComplicacionesPacientes>();
	}

	/**
	 * Method 'getIdestudio'
	 * 
	 * @return Integer
	 */
	public Integer getIdestudio()
	{
		return idestudio;
	}

	/**
	 * Method 'setIdestudio'
	 * 
	 * @param idestudio
	 */
	public void setIdestudio(Integer idestudio)
	{
		this.idestudio = idestudio;
	}

	/**
	 * Method 'getEdiagnostico'
	 * 
	 * @return Integer
	 */
	public Integer getEdiagnostico()
	{
		return ediagnostico;
	}

	/**
	 * Method 'setEdiagnostico'
	 * 
	 * @param ediagnostico
	 */
	public void setEdiagnostico(Integer ediagnostico)
	{
		this.ediagnostico = ediagnostico;
	}

	/**
	 * Method 'getProcedimiento'
	 * 
	 * @return Integer
	 */
	public Integer getProcedimiento()
	{
		return procedimiento;
	}

	/**
	 * Method 'setProcedimiento'
	 * 
	 * @param procedimiento
	 */
	public void setProcedimiento(Integer procedimiento)
	{
		this.procedimiento = procedimiento;
	}

	/**
	 * Method 'getIdprocedimiento'
	 * 
	 * @return Integer
	 */
	public Integer getIdprocedimiento()
	{
		return idprocedimiento;
	}

	/**
	 * Method 'setIdprocedimiento'
	 * 
	 * @param idprocedimiento
	 */
	public void setIdprocedimiento(Integer idprocedimiento)
	{
		this.idprocedimiento = idprocedimiento;
	}

	/**
	 * Method 'getIdprocedimienton2'
	 * 
	 * @return Integer
	 */
	public Integer getIdprocedimienton2()
	{
		return idprocedimienton2;
	}

	/**
	 * Method 'setIdprocedimienton2'
	 * 
	 * @param idprocedimienton2
	 */
	public void setIdprocedimienton2(Integer idprocedimienton2)
	{
		this.idprocedimienton2 = idprocedimienton2;
	}

	/**
	 * Method 'getIdprocedimienton3'
	 * 
	 * @return Integer
	 */
	public Integer getIdprocedimienton3()
	{
		return idprocedimienton3;
	}

	/**
	 * Method 'setIdprocedimienton3'
	 * 
	 * @param idprocedimienton3
	 */
	public void setIdprocedimienton3(Integer idprocedimienton3)
	{
		this.idprocedimienton3 = idprocedimienton3;
	}

	/**
	 * Method 'getIdprocedimienton4'
	 * 
	 * @return Integer
	 */
	public Integer getIdprocedimienton4()
	{
		return idprocedimienton4;
	}

	/**
	 * Method 'setIdprocedimienton4'
	 * 
	 * @param idprocedimienton4
	 */
	public void setIdprocedimienton4(Integer idprocedimienton4)
	{
		this.idprocedimienton4 = idprocedimienton4;
	}
	
	public String getComentarios() {
		return comentarios;
	}

	public void setComentarios(String comentarios) {
		this.comentarios = comentarios;
	}

	/**
	 * Method 'equals'
	 * 
	 * @param _other
	 * @return boolean
	 */
	public boolean equals(Object _other)
	{
		if (_other == null) {
			return false;
		}
		
		if (_other == this) {
			return true;
		}
		
		if (!(_other instanceof ArrEstudioComplicaciones)) {
			return false;
		}
		
		final ArrEstudioComplicaciones _cast = (ArrEstudioComplicaciones) _other;
		if (idestudio == null ? _cast.idestudio != idestudio : !idestudio.equals( _cast.idestudio )) {
			return false;
		}
		
		if (ediagnostico == null ? _cast.ediagnostico != ediagnostico : !ediagnostico.equals( _cast.ediagnostico )) {
			return false;
		}
		
		if (procedimiento == null ? _cast.procedimiento != procedimiento : !procedimiento.equals( _cast.procedimiento )) {
			return false;
		}
		
		if (idprocedimiento == null ? _cast.idprocedimiento != idprocedimiento : !idprocedimiento.equals( _cast.idprocedimiento )) {
			return false;
		}
		
		if (idprocedimienton2 == null ? _cast.idprocedimienton2 != idprocedimienton2 : !idprocedimienton2.equals( _cast.idprocedimienton2 )) {
			return false;
		}
		
		if (idprocedimienton3 == null ? _cast.idprocedimienton3 != idprocedimienton3 : !idprocedimienton3.equals( _cast.idprocedimienton3 )) {
			return false;
		}
		
		if (idprocedimienton4 == null ? _cast.idprocedimienton4 != idprocedimienton4 : !idprocedimienton4.equals( _cast.idprocedimienton4 )) {
			return false;
		}
		
		return true;
	}

	/**
	 * Method 'hashCode'
	 * 
	 * @return int
	 */
	public int hashCode()
	{
		int _hashCode = 0;
		if (idestudio != null) {
			_hashCode = 29 * _hashCode + idestudio.hashCode();
		}
		
		if (ediagnostico != null) {
			_hashCode = 29 * _hashCode + ediagnostico.hashCode();
		}
		
		if (procedimiento != null) {
			_hashCode = 29 * _hashCode + procedimiento.hashCode();
		}
		
		if (idprocedimiento != null) {
			_hashCode = 29 * _hashCode + idprocedimiento.hashCode();
		}
		
		if (idprocedimienton2 != null) {
			_hashCode = 29 * _hashCode + idprocedimienton2.hashCode();
		}
		
		if (idprocedimienton3 != null) {
			_hashCode = 29 * _hashCode + idprocedimienton3.hashCode();
		}
		
		if (idprocedimienton4 != null) {
			_hashCode = 29 * _hashCode + idprocedimienton4.hashCode();
		}
		
		return _hashCode;
	}

	/**
	 * Method 'createPk'
	 * 
	 * @return ArrEstudioComplicacionesPk
	 */
	public ArrEstudioComplicacionesPk createPk()
	{
		return new ArrEstudioComplicacionesPk(idestudio);
	}

	/**
	 * Method 'toString'
	 * 
	 * @return String
	 */
	public String toString()
	{
		StringBuffer ret = new StringBuffer();
		ret.append( "hvn.apl.jProyecto2011.dto.ArrEstudioComplicaciones: " );
		ret.append( "idestudio=" + idestudio );
		ret.append( ", ediagnostico=" + ediagnostico );
		ret.append( ", procedimiento=" + procedimiento );
		ret.append( ", idprocedimiento=" + idprocedimiento );
		ret.append( ", idprocedimienton2=" + idprocedimienton2 );
		ret.append( ", idprocedimienton3=" + idprocedimienton3 );
		ret.append( ", idprocedimienton4=" + idprocedimienton4 );
		return ret.toString();
	}

	public ArrayList<SelectItem> getTipoComplicaciones() {
		ArrayList<SelectItem> diag = new ArrayList<SelectItem>();
		diag.add(new SelectItem("0", "(Seleccione opción)"));
		diag.add(new SelectItem("1", "Bloqueo AV"));
		diag.add(new SelectItem("2", "Embolismo"));
		diag.add(new SelectItem("3", "Derrame pericárdico"));
		diag.add(new SelectItem("4", "TEP"));
		diag.add(new SelectItem("5", "Vasculares"));
		diag.add(new SelectItem("6", "Otras"));
		diag.add(new SelectItem("7", "Bloqueo mecánico rama derecha"));
		diag.add(new SelectItem("8", "Bloqueo mecánico rama izquierda"));
		return diag;
	}
	
	public ArrayList<SelectItem> getTipoComplicacionesN2() {
		ArrayList<SelectItem> diag = null;
		switch (this.idprocedimiento) {
		case 1:
			diag = new ArrayList<SelectItem>();
			diag.add(new SelectItem("0", "(Seleccione opción)"));
			diag.add(new SelectItem("1", "Primer grado"));
			diag.add(new SelectItem("2", "Segundo/tercer grado"));
			break;
		case 2:
			diag = new ArrayList<SelectItem>();
			diag.add(new SelectItem("0", "(Seleccione opción)"));
			diag.add(new SelectItem("1", "Coronario SCASEST"));
			diag.add(new SelectItem("2", "Coronario SCACEST"));
			diag.add(new SelectItem("3", "Coronario ICP"));
			diag.add(new SelectItem("4", "Coronario ACV"));
			diag.add(new SelectItem("5", "Coronario AIT"));
			diag.add(new SelectItem("6", "Cerebral trombólisis"));
			diag.add(new SelectItem("7", "Periférico"));
			break;
		case 3:
			diag = new ArrayList<SelectItem>();
			diag.add(new SelectItem("0", "(Seleccione opción)"));
			diag.add(new SelectItem("1", "No inestable"));
			diag.add(new SelectItem("2", "Taponamiento"));
			break;
		case 4:
			diag = new ArrayList<SelectItem>();
			diag.add(new SelectItem("0", "(Seleccione opción)"));
			diag.add(new SelectItem("1", "Trombólisis"));
			break;
		case 5:
			diag = new ArrayList<SelectItem>();
			diag.add(new SelectItem("0", "(Seleccione opción)"));
			diag.add(new SelectItem("1", "Venosas TPV"));
			diag.add(new SelectItem("2", "Venosas FAV"));
			diag.add(new SelectItem("3", "Arteriales disección"));
			diag.add(new SelectItem("4", "Arteriales seudoaneurisma"));
			break;
		default:
			break;
		}
		return diag;
	}
	
	public ArrayList<SelectItem> getTipoComplicacionesN3() {
		ArrayList<SelectItem> diag = null;
		if(this.idprocedimiento == 1 && this.idprocedimienton2 == 2){
			diag = new ArrayList<SelectItem>();
			diag.add(new SelectItem("0", "(Seleccione opción)"));
			diag.add(new SelectItem("1", "MP transitorio"));
		}
		else if(this.idprocedimiento == 3 && this.idprocedimienton2 == 2){
			diag = new ArrayList<SelectItem>();
			diag.add(new SelectItem("0", "(Seleccione opción)"));
			diag.add(new SelectItem("1", "pericardiocentesis"));
		}
		else if(this.idprocedimiento == 5 && this.idprocedimienton2 == 2){
			diag = new ArrayList<SelectItem>();
			diag.add(new SelectItem("0", "(Seleccione opción)"));
			diag.add(new SelectItem("1", "intervención"));
		}
		else if(this.idprocedimiento == 5 && this.idprocedimienton2 == 4){
			diag = new ArrayList<SelectItem>();
			diag.add(new SelectItem("0", "(Seleccione opción)"));
			diag.add(new SelectItem("1", "compresión"));
			diag.add(new SelectItem("2", "cirugía"));
		}
		return diag;
	}

	public ArrayList<ComplicacionesPacientes> getListacompldiag() {
		return listacompldiag;
	}

	public void setListacompldiag(ArrayList<ComplicacionesPacientes> listacompldiag) {
		this.listacompldiag = listacompldiag;
	}
}
