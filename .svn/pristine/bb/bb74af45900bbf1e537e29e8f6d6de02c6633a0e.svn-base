/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.sorin.idea.dao;

import java.util.Date;
import com.sorin.idea.dto.*;
import com.sorin.idea.exceptions.*;

public interface TestOrtostatismoActivoDao
{
	/** 
	 * Inserts a new row in the test_ortostatismo_activo table.
	 */
	public TestOrtostatismoActivoPk insert(TestOrtostatismoActivo dto) throws TestOrtostatismoActivoDaoException;

	/** 
	 * Updates a single row in the test_ortostatismo_activo table.
	 */
	public void update(TestOrtostatismoActivoPk pk, TestOrtostatismoActivo dto) throws TestOrtostatismoActivoDaoException;

	/** 
	 * Deletes a single row in the test_ortostatismo_activo table.
	 */
	public void delete(TestOrtostatismoActivoPk pk) throws TestOrtostatismoActivoDaoException;

	/** 
	 * Returns the rows from the test_ortostatismo_activo table that matches the specified primary-key value.
	 */
	public TestOrtostatismoActivo findByPrimaryKey(TestOrtostatismoActivoPk pk) throws TestOrtostatismoActivoDaoException;

	/** 
	 * Returns all rows from the test_ortostatismo_activo table that match the criteria 'IDTEST = :idtest'.
	 */
	public TestOrtostatismoActivo findByPrimaryKey(Integer idtest) throws TestOrtostatismoActivoDaoException;

	/** 
	 * Returns all rows from the test_ortostatismo_activo table that match the criteria ''.
	 */
	public TestOrtostatismoActivo[] findAll() throws TestOrtostatismoActivoDaoException;

	/** 
	 * Returns all rows from the test_ortostatismo_activo table that match the criteria 'IDTEST = :idtest'.
	 */
	public TestOrtostatismoActivo[] findWhereIdtestEquals(int idtest) throws TestOrtostatismoActivoDaoException;

	/** 
	 * Returns all rows from the test_ortostatismo_activo table that match the criteria 'DEC_TAS = :decTas'.
	 */
	public TestOrtostatismoActivo[] findWhereDecTasEquals(String decTas) throws TestOrtostatismoActivoDaoException;

	/** 
	 * Returns all rows from the test_ortostatismo_activo table that match the criteria 'DEC_TAD = :decTad'.
	 */
	public TestOrtostatismoActivo[] findWhereDecTadEquals(String decTad) throws TestOrtostatismoActivoDaoException;

	/** 
	 * Returns all rows from the test_ortostatismo_activo table that match the criteria 'DEC_FC = :decFc'.
	 */
	public TestOrtostatismoActivo[] findWhereDecFcEquals(String decFc) throws TestOrtostatismoActivoDaoException;

	/** 
	 * Returns all rows from the test_ortostatismo_activo table that match the criteria 'ORT_TAS = :ortTas'.
	 */
	public TestOrtostatismoActivo[] findWhereOrtTasEquals(String ortTas) throws TestOrtostatismoActivoDaoException;

	/** 
	 * Returns all rows from the test_ortostatismo_activo table that match the criteria 'ORT_TAD = :ortTad'.
	 */
	public TestOrtostatismoActivo[] findWhereOrtTadEquals(String ortTad) throws TestOrtostatismoActivoDaoException;

	/** 
	 * Returns all rows from the test_ortostatismo_activo table that match the criteria 'ORT_FC = :ortFc'.
	 */
	public TestOrtostatismoActivo[] findWhereOrtFcEquals(String ortFc) throws TestOrtostatismoActivoDaoException;

	/** 
	 * Returns all rows from the test_ortostatismo_activo table that match the criteria 'FECHA = :fecha'.
	 */
	public TestOrtostatismoActivo[] findWhereFechaEquals(Date fecha) throws TestOrtostatismoActivoDaoException;

	/** 
	 * Returns all rows from the test_ortostatismo_activo table that match the criteria 'COMENTARIOS = :comentarios'.
	 */
	public TestOrtostatismoActivo[] findWhereComentariosEquals(String comentarios) throws TestOrtostatismoActivoDaoException;

	/** 
	 * Returns all rows from the test_ortostatismo_activo table that match the criteria 'OPERADOR = :operador'.
	 */
	public TestOrtostatismoActivo[] findWhereOperadorEquals(String operador) throws TestOrtostatismoActivoDaoException;

	/** 
	 * Returns all rows from the test_ortostatismo_activo table that match the criteria 'ENFERMERIA = :enfermeria'.
	 */
	public TestOrtostatismoActivo[] findWhereEnfermeriaEquals(String enfermeria) throws TestOrtostatismoActivoDaoException;

	/** 
	 * Returns all rows from the test_ortostatismo_activo table that match the criteria 'NPROC = :nproc'.
	 */
	public TestOrtostatismoActivo[] findWhereNprocEquals(String nproc) throws TestOrtostatismoActivoDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the test_ortostatismo_activo table that match the specified arbitrary SQL statement
	 */
	public TestOrtostatismoActivo[] findByDynamicSelect(String sql, Object[] sqlParams) throws TestOrtostatismoActivoDaoException;

	/** 
	 * Returns all rows from the test_ortostatismo_activo table that match the specified arbitrary SQL statement
	 */
	public TestOrtostatismoActivo[] findByDynamicWhere(String sql, Object[] sqlParams) throws TestOrtostatismoActivoDaoException;

}
