/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.sorin.idea.dao;

import com.sorin.idea.dto.*;
import com.sorin.idea.exceptions.*;

public interface ArrMaestrasDao
{
	/** 
	 * Inserts a new row in the arr_maestras table.
	 */
	public ArrMaestrasPk insert(ArrMaestras dto) throws ArrMaestrasDaoException;

	/** 
	 * Updates a single row in the arr_maestras table.
	 */
	public void update(ArrMaestrasPk pk, ArrMaestras dto) throws ArrMaestrasDaoException;

	/** 
	 * Deletes a single row in the arr_maestras table.
	 */
	public void delete(ArrMaestrasPk pk) throws ArrMaestrasDaoException;

	/** 
	 * Returns the rows from the arr_maestras table that matches the specified primary-key value.
	 */
	public ArrMaestras findByPrimaryKey(ArrMaestrasPk pk) throws ArrMaestrasDaoException;

	/** 
	 * Returns all rows from the arr_maestras table that match the criteria 'CODIGO = :codigo'.
	 */
	public ArrMaestras findByPrimaryKey(Integer codigo) throws ArrMaestrasDaoException;

	/** 
	 * Returns all rows from the arr_maestras table that match the criteria ''.
	 */
	public ArrMaestras[] findAll() throws ArrMaestrasDaoException;

	/** 
	 * Returns all rows from the arr_maestras table that match the criteria 'CODIGO = :codigo'.
	 */
	public ArrMaestras[] findWhereCodigoEquals(int codigo) throws ArrMaestrasDaoException;

	/** 
	 * Returns all rows from the arr_maestras table that match the criteria 'TIPO = :tipo'.
	 */
	public ArrMaestras[] findWhereTipoEquals(int tipo) throws ArrMaestrasDaoException;

	/** 
	 * Returns all rows from the arr_maestras table that match the criteria 'VALOR = :valor'.
	 */
	public ArrMaestras[] findWhereValorEquals(String valor) throws ArrMaestrasDaoException;

	/** 
	 * Returns all rows from the arr_maestras table that match the criteria 'ACTIVO = :activo'.
	 */
	public ArrMaestras[] findWhereActivoEquals(int activo) throws ArrMaestrasDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the arr_maestras table that match the specified arbitrary SQL statement
	 */
	public ArrMaestras[] findByDynamicSelect(String sql, Object[] sqlParams) throws ArrMaestrasDaoException;

	/** 
	 * Returns all rows from the arr_maestras table that match the specified arbitrary SQL statement
	 */
	public ArrMaestras[] findByDynamicWhere(String sql, Object[] sqlParams) throws ArrMaestrasDaoException;

}
