/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.sorin.idea.dao;

import java.util.Date;
import com.sorin.idea.dto.*;
import com.sorin.idea.exceptions.*;

public interface ProtSincopeAltaDao
{
	/** 
	 * Inserts a new row in the prot_sincope_alta table.
	 */
	public ProtSincopeAltaPk insert(ProtSincopeAlta dto) throws ProtSincopeAltaDaoException;

	/** 
	 * Updates a single row in the prot_sincope_alta table.
	 */
	public void update(ProtSincopeAltaPk pk, ProtSincopeAlta dto) throws ProtSincopeAltaDaoException;

	/** 
	 * Deletes a single row in the prot_sincope_alta table.
	 */
	public void delete(ProtSincopeAltaPk pk) throws ProtSincopeAltaDaoException;

	/** 
	 * Returns the rows from the prot_sincope_alta table that matches the specified primary-key value.
	 */
	public ProtSincopeAlta findByPrimaryKey(ProtSincopeAltaPk pk) throws ProtSincopeAltaDaoException;

	/** 
	 * Returns all rows from the prot_sincope_alta table that match the criteria 'IDPROTSINCOPE = :idprotsincope'.
	 */
	public ProtSincopeAlta findByPrimaryKey(Integer idprotsincope) throws ProtSincopeAltaDaoException;

	/** 
	 * Returns all rows from the prot_sincope_alta table that match the criteria ''.
	 */
	public ProtSincopeAlta[] findAll() throws ProtSincopeAltaDaoException;

	/** 
	 * Returns all rows from the prot_sincope_alta table that match the criteria 'IDPROTSINCOPE = :idprotsincope'.
	 */
	public ProtSincopeAlta[] findWhereIdprotsincopeEquals(int idprotsincope) throws ProtSincopeAltaDaoException;

	/** 
	 * Returns all rows from the prot_sincope_alta table that match the criteria 'FECHA_ALTA = :fechaAlta'.
	 */
	public ProtSincopeAlta[] findWhereFechaAltaEquals(Date fechaAlta) throws ProtSincopeAltaDaoException;

	/** 
	 * Returns all rows from the prot_sincope_alta table that match the criteria 'PERDCONO = :perdcono'.
	 */
	public ProtSincopeAlta[] findWherePerdconoEquals(int perdcono) throws ProtSincopeAltaDaoException;

	/** 
	 * Returns all rows from the prot_sincope_alta table that match the criteria 'RECESP = :recesp'.
	 */
	public ProtSincopeAlta[] findWhereRecespEquals(int recesp) throws ProtSincopeAltaDaoException;

	/** 
	 * Returns all rows from the prot_sincope_alta table that match the criteria 'PRIMEPI = :primepi'.
	 */
	public ProtSincopeAlta[] findWherePrimepiEquals(int primepi) throws ProtSincopeAltaDaoException;

	/** 
	 * Returns all rows from the prot_sincope_alta table that match the criteria 'NUMEPIPREV = :numepiprev'.
	 */
	public ProtSincopeAlta[] findWhereNumepiprevEquals(String numepiprev) throws ProtSincopeAltaDaoException;

	/** 
	 * Returns all rows from the prot_sincope_alta table that match the criteria 'PRIMEREPI = :primerepi'.
	 */
	public ProtSincopeAlta[] findWherePrimerepiEquals(String primerepi) throws ProtSincopeAltaDaoException;

	/** 
	 * Returns all rows from the prot_sincope_alta table that match the criteria 'PRECI_ALTA_CALOR = :preciAltaCalor'.
	 */
	public ProtSincopeAlta[] findWherePreciAltaCalorEquals(int preciAltaCalor) throws ProtSincopeAltaDaoException;

	/** 
	 * Returns all rows from the prot_sincope_alta table that match the criteria 'PRECI_ALTA_ORTO = :preciAltaOrto'.
	 */
	public ProtSincopeAlta[] findWherePreciAltaOrtoEquals(int preciAltaOrto) throws ProtSincopeAltaDaoException;

	/** 
	 * Returns all rows from the prot_sincope_alta table that match the criteria 'PRECI_ALTA_ALCOHOL = :preciAltaAlcohol'.
	 */
	public ProtSincopeAlta[] findWherePreciAltaAlcoholEquals(int preciAltaAlcohol) throws ProtSincopeAltaDaoException;

	/** 
	 * Returns all rows from the prot_sincope_alta table that match the criteria 'PRECI_ALTA_EMOCION = :preciAltaEmocion'.
	 */
	public ProtSincopeAlta[] findWherePreciAltaEmocionEquals(int preciAltaEmocion) throws ProtSincopeAltaDaoException;

	/** 
	 * Returns all rows from the prot_sincope_alta table that match the criteria 'PRECI_ALTA_AYUNO = :preciAltaAyuno'.
	 */
	public ProtSincopeAlta[] findWherePreciAltaAyunoEquals(int preciAltaAyuno) throws ProtSincopeAltaDaoException;

	/** 
	 * Returns all rows from the prot_sincope_alta table that match the criteria 'PRECI_ALTA_AGLO = :preciAltaAglo'.
	 */
	public ProtSincopeAlta[] findWherePreciAltaAgloEquals(int preciAltaAglo) throws ProtSincopeAltaDaoException;

	/** 
	 * Returns all rows from the prot_sincope_alta table that match the criteria 'PRECI_ALTA_POST = :preciAltaPost'.
	 */
	public ProtSincopeAlta[] findWherePreciAltaPostEquals(int preciAltaPost) throws ProtSincopeAltaDaoException;

	/** 
	 * Returns all rows from the prot_sincope_alta table that match the criteria 'PRECI_ALTA_VENOP = :preciAltaVenop'.
	 */
	public ProtSincopeAlta[] findWherePreciAltaVenopEquals(int preciAltaVenop) throws ProtSincopeAltaDaoException;

	/** 
	 * Returns all rows from the prot_sincope_alta table that match the criteria 'PRECI_ALTA_SIT = :preciAltaSit'.
	 */
	public ProtSincopeAlta[] findWherePreciAltaSitEquals(int preciAltaSit) throws ProtSincopeAltaDaoException;

	/** 
	 * Returns all rows from the prot_sincope_alta table that match the criteria 'PRECI_ALTA_EMB = :preciAltaEmb'.
	 */
	public ProtSincopeAlta[] findWherePreciAltaEmbEquals(int preciAltaEmb) throws ProtSincopeAltaDaoException;

	/** 
	 * Returns all rows from the prot_sincope_alta table that match the criteria 'PROD_ALTA_MAREO = :prodAltaMareo'.
	 */
	public ProtSincopeAlta[] findWhereProdAltaMareoEquals(int prodAltaMareo) throws ProtSincopeAltaDaoException;

	/** 
	 * Returns all rows from the prot_sincope_alta table that match the criteria 'PROD_ALTA_VISION = :prodAltaVision'.
	 */
	public ProtSincopeAlta[] findWhereProdAltaVisionEquals(int prodAltaVision) throws ProtSincopeAltaDaoException;

	/** 
	 * Returns all rows from the prot_sincope_alta table that match the criteria 'PROD_ALTA_NAUSEA = :prodAltaNausea'.
	 */
	public ProtSincopeAlta[] findWhereProdAltaNauseaEquals(int prodAltaNausea) throws ProtSincopeAltaDaoException;

	/** 
	 * Returns all rows from the prot_sincope_alta table that match the criteria 'PROD_ALTA_PALIDEZ = :prodAltaPalidez'.
	 */
	public ProtSincopeAlta[] findWhereProdAltaPalidezEquals(int prodAltaPalidez) throws ProtSincopeAltaDaoException;

	/** 
	 * Returns all rows from the prot_sincope_alta table that match the criteria 'PROD_ALTA_DOLORAB = :prodAltaDolorab'.
	 */
	public ProtSincopeAlta[] findWhereProdAltaDolorabEquals(int prodAltaDolorab) throws ProtSincopeAltaDaoException;

	/** 
	 * Returns all rows from the prot_sincope_alta table that match the criteria 'PROD_ALTA_PALP = :prodAltaPalp'.
	 */
	public ProtSincopeAlta[] findWhereProdAltaPalpEquals(int prodAltaPalp) throws ProtSincopeAltaDaoException;

	/** 
	 * Returns all rows from the prot_sincope_alta table that match the criteria 'PROD_ALTA_HIPERV = :prodAltaHiperv'.
	 */
	public ProtSincopeAlta[] findWhereProdAltaHipervEquals(int prodAltaHiperv) throws ProtSincopeAltaDaoException;

	/** 
	 * Returns all rows from the prot_sincope_alta table that match the criteria 'PROD_ALTA_FATIGA = :prodAltaFatiga'.
	 */
	public ProtSincopeAlta[] findWhereProdAltaFatigaEquals(int prodAltaFatiga) throws ProtSincopeAltaDaoException;

	/** 
	 * Returns all rows from the prot_sincope_alta table that match the criteria 'PROD_ALTA_SUDOR = :prodAltaSudor'.
	 */
	public ProtSincopeAlta[] findWhereProdAltaSudorEquals(int prodAltaSudor) throws ProtSincopeAltaDaoException;

	/** 
	 * Returns all rows from the prot_sincope_alta table that match the criteria 'PROD_ALTA_FALTAAIRE = :prodAltaFaltaaire'.
	 */
	public ProtSincopeAlta[] findWhereProdAltaFaltaaireEquals(int prodAltaFaltaaire) throws ProtSincopeAltaDaoException;

	/** 
	 * Returns all rows from the prot_sincope_alta table that match the criteria 'PROD_ALTA_FRIO = :prodAltaFrio'.
	 */
	public ProtSincopeAlta[] findWhereProdAltaFrioEquals(int prodAltaFrio) throws ProtSincopeAltaDaoException;

	/** 
	 * Returns all rows from the prot_sincope_alta table that match the criteria 'PROD_ALTA_CEFAL = :prodAltaCefal'.
	 */
	public ProtSincopeAlta[] findWhereProdAltaCefalEquals(int prodAltaCefal) throws ProtSincopeAltaDaoException;

	/** 
	 * Returns all rows from the prot_sincope_alta table that match the criteria 'PROD_ALTA_DOLORTOR = :prodAltaDolortor'.
	 */
	public ProtSincopeAlta[] findWhereProdAltaDolortorEquals(int prodAltaDolortor) throws ProtSincopeAltaDaoException;

	/** 
	 * Returns all rows from the prot_sincope_alta table that match the criteria 'PRDIAGINI_ALTA_HC = :prdiaginiAltaHc'.
	 */
	public ProtSincopeAlta[] findWherePrdiaginiAltaHcEquals(int prdiaginiAltaHc) throws ProtSincopeAltaDaoException;

	/** 
	 * Returns all rows from the prot_sincope_alta table that match the criteria 'PRDIAGINI_ALTA_SC = :prdiaginiAltaSc'.
	 */
	public ProtSincopeAlta[] findWherePrdiaginiAltaScEquals(int prdiaginiAltaSc) throws ProtSincopeAltaDaoException;

	/** 
	 * Returns all rows from the prot_sincope_alta table that match the criteria 'PRDIAGINI_ALTA_TESTORT = :prdiaginiAltaTestort'.
	 */
	public ProtSincopeAlta[] findWherePrdiaginiAltaTestortEquals(int prdiaginiAltaTestort) throws ProtSincopeAltaDaoException;

	/** 
	 * Returns all rows from the prot_sincope_alta table that match the criteria 'COMENTARIOS = :comentarios'.
	 */
	public ProtSincopeAlta[] findWhereComentariosEquals(String comentarios) throws ProtSincopeAltaDaoException;

	/** 
	 * Returns all rows from the prot_sincope_alta table that match the criteria 'PRDIAGINI_ALTA_SC_RES = :prdiaginiAltaScRes'.
	 */
	public ProtSincopeAlta[] findWherePrdiaginiAltaScResEquals(int prdiaginiAltaScRes) throws ProtSincopeAltaDaoException;

	/** 
	 * Returns all rows from the prot_sincope_alta table that match the criteria 'OPERADOR = :operador'.
	 */
	public ProtSincopeAlta[] findWhereOperadorEquals(String operador) throws ProtSincopeAltaDaoException;
	
	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the prot_sincope_alta table that match the specified arbitrary SQL statement
	 */
	public ProtSincopeAlta[] findByDynamicSelect(String sql, Object[] sqlParams) throws ProtSincopeAltaDaoException;

	/** 
	 * Returns all rows from the prot_sincope_alta table that match the specified arbitrary SQL statement
	 */
	public ProtSincopeAlta[] findByDynamicWhere(String sql, Object[] sqlParams) throws ProtSincopeAltaDaoException;

}
