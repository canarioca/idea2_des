/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.sorin.idea.dto;

import com.sorin.idea.dao.*;
import com.sorin.idea.factory.*;
import com.sorin.idea.exceptions.*;
import java.io.Serializable;
import java.util.*;

public class Cateter implements Serializable
{
	/** 
	 * This attribute maps to the column IDCATETER in the cateter table.
	 */
	protected Integer idcateter;

	/** 
	 * This attribute maps to the column MODELO in the cateter table.
	 */
	protected String modelo;

	/** 
	 * This attribute maps to the column FABRICANTE in the cateter table.
	 */
	protected Integer fabricante;

	/** 
	 * This attribute maps to the column REFERENCIA in the cateter table.
	 */
	protected String referencia;

	/** 
	 * This attribute maps to the column GS128 in the cateter table.
	 */
	protected String gs128;

	/** 
	 * This attribute maps to the column TIPO in the cateter table.
	 */
	protected Integer tipo;

	/** 
	 * This attribute maps to the column DISTANCIAELECS in the cateter table.
	 */
	protected String distanciaelecs;

	/** 
	 * This attribute maps to the column NUMELECS in the cateter table.
	 */
	protected Integer numelecs;

	/** 
	 * This attribute maps to the column TIPOABLACION in the cateter table.
	 */
	protected Integer tipoablacion;

	/** 
	 * This attribute maps to the column TIPODIAGNOSTICO in the cateter table.
	 */
	protected Integer tipodiagnostico;

	/** 
	 * This attribute maps to the column TIPOCURVA in the cateter table.
	 */
	protected Integer tipocurva;

	/** 
	 * This attribute maps to the column TAMANO in the cateter table.
	 */
	protected Integer tamano;

	/** 
	 * This attribute maps to the column LONGITUD in the cateter table.
	 */
	protected String longitud;

	/** 
	 * This attribute maps to the column ENERGIA in the cateter table.
	 */
	protected Integer energia;

	/** 
	 * This attribute maps to the column ACTIVO in the cateter table.
	 */
	protected Integer activo;
	
	private ArrayList<Codigosgs128> codigos;
	private String nuevocodigo;
	private boolean codigovalido;

	/**
	 * Method 'Cateter'
	 * 
	 */
	public Cateter()
	{
		this.setCodigos(new ArrayList<Codigosgs128>());
	}

	/**
	 * Method 'getIdcateter'
	 * 
	 * @return Integer
	 */
	public Integer getIdcateter()
	{
		return idcateter;
	}

	/**
	 * Method 'setIdcateter'
	 * 
	 * @param idcateter
	 */
	public void setIdcateter(Integer idcateter)
	{
		this.idcateter = idcateter;
	}

	/**
	 * Method 'getModelo'
	 * 
	 * @return String
	 */
	public String getModelo()
	{
		return modelo;
	}

	/**
	 * Method 'setModelo'
	 * 
	 * @param modelo
	 */
	public void setModelo(String modelo)
	{
		this.modelo = modelo;
	}

	/**
	 * Method 'getFabricante'
	 * 
	 * @return Integer
	 */
	public Integer getFabricante()
	{
		return fabricante;
	}

	/**
	 * Method 'setFabricante'
	 * 
	 * @param fabricante
	 */
	public void setFabricante(Integer fabricante)
	{
		this.fabricante = fabricante;
	}

	/**
	 * Method 'getReferencia'
	 * 
	 * @return String
	 */
	public String getReferencia()
	{
		return referencia;
	}

	/**
	 * Method 'setReferencia'
	 * 
	 * @param referencia
	 */
	public void setReferencia(String referencia)
	{
		this.referencia = referencia;
	}

	/**
	 * Method 'getGs128'
	 * 
	 * @return String
	 */
	public String getGs128()
	{
		return gs128;
	}

	/**
	 * Method 'setGs128'
	 * 
	 * @param gs128
	 */
	public void setGs128(String gs128)
	{
		this.gs128 = gs128;
	}

	/**
	 * Method 'getTipo'
	 * 
	 * @return Integer
	 */
	public Integer getTipo()
	{
		return tipo;
	}

	/**
	 * Method 'setTipo'
	 * 
	 * @param tipo
	 */
	public void setTipo(Integer tipo)
	{
		this.tipo = tipo;
	}

	/**
	 * Method 'getDistanciaelecs'
	 * 
	 * @return String
	 */
	public String getDistanciaelecs()
	{
		return distanciaelecs;
	}

	/**
	 * Method 'setDistanciaelecs'
	 * 
	 * @param distanciaelecs
	 */
	public void setDistanciaelecs(String distanciaelecs)
	{
		this.distanciaelecs = distanciaelecs;
	}

	/**
	 * Method 'getNumelecs'
	 * 
	 * @return Integer
	 */
	public Integer getNumelecs()
	{
		return numelecs;
	}

	/**
	 * Method 'setNumelecs'
	 * 
	 * @param numelecs
	 */
	public void setNumelecs(Integer numelecs)
	{
		this.numelecs = numelecs;
	}

	/**
	 * Method 'getTipoablacion'
	 * 
	 * @return Integer
	 */
	public Integer getTipoablacion()
	{
		return tipoablacion;
	}

	/**
	 * Method 'setTipoablacion'
	 * 
	 * @param tipoablacion
	 */
	public void setTipoablacion(Integer tipoablacion)
	{
		this.tipoablacion = tipoablacion;
	}

	/**
	 * Method 'getTipodiagnostico'
	 * 
	 * @return Integer
	 */
	public Integer getTipodiagnostico()
	{
		return tipodiagnostico;
	}

	/**
	 * Method 'setTipodiagnostico'
	 * 
	 * @param tipodiagnostico
	 */
	public void setTipodiagnostico(Integer tipodiagnostico)
	{
		this.tipodiagnostico = tipodiagnostico;
	}

	/**
	 * Method 'getTipocurva'
	 * 
	 * @return Integer
	 */
	public Integer getTipocurva()
	{
		return tipocurva;
	}

	/**
	 * Method 'setTipocurva'
	 * 
	 * @param tipocurva
	 */
	public void setTipocurva(Integer tipocurva)
	{
		this.tipocurva = tipocurva;
	}

	/**
	 * Method 'getTamano'
	 * 
	 * @return Integer
	 */
	public Integer getTamano()
	{
		return tamano;
	}

	/**
	 * Method 'setTamano'
	 * 
	 * @param tamano
	 */
	public void setTamano(Integer tamano)
	{
		this.tamano = tamano;
	}

	/**
	 * Method 'getLongitud'
	 * 
	 * @return String
	 */
	public String getLongitud()
	{
		return longitud;
	}

	/**
	 * Method 'setLongitud'
	 * 
	 * @param longitud
	 */
	public void setLongitud(String longitud)
	{
		this.longitud = longitud;
	}

	/**
	 * Method 'getEnergia'
	 * 
	 * @return Integer
	 */
	public Integer getEnergia()
	{
		return energia;
	}

	/**
	 * Method 'setEnergia'
	 * 
	 * @param energia
	 */
	public void setEnergia(Integer energia)
	{
		this.energia = energia;
	}

	/**
	 * Method 'getActivo'
	 * 
	 * @return Integer
	 */
	public Integer getActivo()
	{
		return activo;
	}

	/**
	 * Method 'setActivo'
	 * 
	 * @param activo
	 */
	public void setActivo(Integer activo)
	{
		this.activo = activo;
	}

	/**
	 * Method 'equals'
	 * 
	 * @param _other
	 * @return boolean
	 */
	public boolean equals(Object _other)
	{
		if (_other == null) {
			return false;
		}
		
		if (_other == this) {
			return true;
		}
		
		if (!(_other instanceof Cateter)) {
			return false;
		}
		
		final Cateter _cast = (Cateter) _other;
		if (idcateter == null ? _cast.idcateter != idcateter : !idcateter.equals( _cast.idcateter )) {
			return false;
		}
		
		if (modelo == null ? _cast.modelo != modelo : !modelo.equals( _cast.modelo )) {
			return false;
		}
		
		if (fabricante == null ? _cast.fabricante != fabricante : !fabricante.equals( _cast.fabricante )) {
			return false;
		}
		
		if (referencia == null ? _cast.referencia != referencia : !referencia.equals( _cast.referencia )) {
			return false;
		}
		
		if (gs128 == null ? _cast.gs128 != gs128 : !gs128.equals( _cast.gs128 )) {
			return false;
		}
		
		if (tipo == null ? _cast.tipo != tipo : !tipo.equals( _cast.tipo )) {
			return false;
		}
		
		if (distanciaelecs == null ? _cast.distanciaelecs != distanciaelecs : !distanciaelecs.equals( _cast.distanciaelecs )) {
			return false;
		}
		
		if (numelecs == null ? _cast.numelecs != numelecs : !numelecs.equals( _cast.numelecs )) {
			return false;
		}
		
		if (tipoablacion == null ? _cast.tipoablacion != tipoablacion : !tipoablacion.equals( _cast.tipoablacion )) {
			return false;
		}
		
		if (tipodiagnostico == null ? _cast.tipodiagnostico != tipodiagnostico : !tipodiagnostico.equals( _cast.tipodiagnostico )) {
			return false;
		}
		
		if (tipocurva == null ? _cast.tipocurva != tipocurva : !tipocurva.equals( _cast.tipocurva )) {
			return false;
		}
		
		if (tamano == null ? _cast.tamano != tamano : !tamano.equals( _cast.tamano )) {
			return false;
		}
		
		if (longitud == null ? _cast.longitud != longitud : !longitud.equals( _cast.longitud )) {
			return false;
		}
		
		if (energia == null ? _cast.energia != energia : !energia.equals( _cast.energia )) {
			return false;
		}
		
		if (activo == null ? _cast.activo != activo : !activo.equals( _cast.activo )) {
			return false;
		}
		
		return true;
	}

	/**
	 * Method 'hashCode'
	 * 
	 * @return int
	 */
	public int hashCode()
	{
		int _hashCode = 0;
		if (idcateter != null) {
			_hashCode = 29 * _hashCode + idcateter.hashCode();
		}
		
		if (modelo != null) {
			_hashCode = 29 * _hashCode + modelo.hashCode();
		}
		
		if (fabricante != null) {
			_hashCode = 29 * _hashCode + fabricante.hashCode();
		}
		
		if (referencia != null) {
			_hashCode = 29 * _hashCode + referencia.hashCode();
		}
		
		if (gs128 != null) {
			_hashCode = 29 * _hashCode + gs128.hashCode();
		}
		
		if (tipo != null) {
			_hashCode = 29 * _hashCode + tipo.hashCode();
		}
		
		if (distanciaelecs != null) {
			_hashCode = 29 * _hashCode + distanciaelecs.hashCode();
		}
		
		if (numelecs != null) {
			_hashCode = 29 * _hashCode + numelecs.hashCode();
		}
		
		if (tipoablacion != null) {
			_hashCode = 29 * _hashCode + tipoablacion.hashCode();
		}
		
		if (tipodiagnostico != null) {
			_hashCode = 29 * _hashCode + tipodiagnostico.hashCode();
		}
		
		if (tipocurva != null) {
			_hashCode = 29 * _hashCode + tipocurva.hashCode();
		}
		
		if (tamano != null) {
			_hashCode = 29 * _hashCode + tamano.hashCode();
		}
		
		if (longitud != null) {
			_hashCode = 29 * _hashCode + longitud.hashCode();
		}
		
		if (energia != null) {
			_hashCode = 29 * _hashCode + energia.hashCode();
		}
		
		if (activo != null) {
			_hashCode = 29 * _hashCode + activo.hashCode();
		}
		
		return _hashCode;
	}

	/**
	 * Method 'createPk'
	 * 
	 * @return CateterPk
	 */
	public CateterPk createPk()
	{
		return new CateterPk(idcateter);
	}

	/**
	 * Method 'toString'
	 * 
	 * @return String
	 */
	public String toString()
	{
		StringBuffer ret = new StringBuffer();
		ret.append( "com.sorin.idea.dto.Cateter: " );
		ret.append( "idcateter=" + idcateter );
		ret.append( ", modelo=" + modelo );
		ret.append( ", fabricante=" + fabricante );
		ret.append( ", referencia=" + referencia );
		ret.append( ", gs128=" + gs128 );
		ret.append( ", tipo=" + tipo );
		ret.append( ", distanciaelecs=" + distanciaelecs );
		ret.append( ", numelecs=" + numelecs );
		ret.append( ", tipoablacion=" + tipoablacion );
		ret.append( ", tipodiagnostico=" + tipodiagnostico );
		ret.append( ", tipocurva=" + tipocurva );
		ret.append( ", tamano=" + tamano );
		ret.append( ", longitud=" + longitud );
		ret.append( ", energia=" + energia );
		ret.append( ", activo=" + activo );
		return ret.toString();
	}

	public ArrayList<Codigosgs128> getCodigos() {
		return codigos;
	}

	public void setCodigos(ArrayList<Codigosgs128> codigos) {
		this.codigos = codigos;
	}

	public String getNuevocodigo() {
		return nuevocodigo;
	}

	public void setNuevocodigo(String nuevocodigo) {
		this.nuevocodigo = nuevocodigo;
	}

	public boolean isCodigovalido() {
		return codigovalido;
	}

	public void setCodigovalido(boolean codigovalido) {
		this.codigovalido = codigovalido;
	}

}
