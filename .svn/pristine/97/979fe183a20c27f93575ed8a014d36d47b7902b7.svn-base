/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.sorin.idea.dao;

import com.sorin.idea.dto.*;
import com.sorin.idea.exceptions.*;

public interface Codigosgs128Dao
{
	/** 
	 * Inserts a new row in the codigosgs128 table.
	 */
	public Codigosgs128Pk insert(Codigosgs128 dto) throws Codigosgs128DaoException;

	/** 
	 * Updates a single row in the codigosgs128 table.
	 */
	public void update(Codigosgs128Pk pk, Codigosgs128 dto) throws Codigosgs128DaoException;

	/** 
	 * Deletes a single row in the codigosgs128 table.
	 */
	public void delete(Codigosgs128Pk pk) throws Codigosgs128DaoException;

	/** 
	 * Returns the rows from the codigosgs128 table that matches the specified primary-key value.
	 */
	public Codigosgs128 findByPrimaryKey(Codigosgs128Pk pk) throws Codigosgs128DaoException;

	/** 
	 * Returns all rows from the codigosgs128 table that match the criteria 'IDMATERIAL = :idmaterial AND TIPO = :tipo AND CODIGO = :codigo'.
	 */
	public Codigosgs128 findByPrimaryKey(Integer idmaterial, Integer tipo, String codigo) throws Codigosgs128DaoException;

	/** 
	 * Returns all rows from the codigosgs128 table that match the criteria ''.
	 */
	public Codigosgs128[] findAll() throws Codigosgs128DaoException;

	/** 
	 * Returns all rows from the codigosgs128 table that match the criteria 'IDMATERIAL = :idmaterial'.
	 */
	public Codigosgs128[] findWhereIdmaterialEquals(int idmaterial) throws Codigosgs128DaoException;

	/** 
	 * Returns all rows from the codigosgs128 table that match the criteria 'TIPO = :tipo'.
	 */
	public Codigosgs128[] findWhereTipoEquals(int tipo) throws Codigosgs128DaoException;

	/** 
	 * Returns all rows from the codigosgs128 table that match the criteria 'CODIGO = :codigo'.
	 */
	public Codigosgs128[] findWhereCodigoEquals(String codigo) throws Codigosgs128DaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the codigosgs128 table that match the specified arbitrary SQL statement
	 */
	public Codigosgs128[] findByDynamicSelect(String sql, Object[] sqlParams) throws Codigosgs128DaoException;

	/** 
	 * Returns all rows from the codigosgs128 table that match the specified arbitrary SQL statement
	 */
	public Codigosgs128[] findByDynamicWhere(String sql, Object[] sqlParams) throws Codigosgs128DaoException;

}
