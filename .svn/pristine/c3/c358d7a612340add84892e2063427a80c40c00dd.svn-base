/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.sorin.idea.dao;

import com.sorin.idea.dto.*;
import com.sorin.idea.exceptions.*;


public interface ImpHojaImplantePopDao
{
	/** 
	 * Inserts a new row in the imp_hoja_implante_pop table.
	 */
	public ImpHojaImplantePopPk insert(ImpHojaImplantePop dto) throws ImpHojaImplantePopDaoException;

	/** 
	 * Updates a single row in the imp_hoja_implante_pop table.
	 */
	public void update(ImpHojaImplantePopPk pk, ImpHojaImplantePop dto) throws ImpHojaImplantePopDaoException;

	/** 
	 * Deletes a single row in the imp_hoja_implante_pop table.
	 */
	public void delete(ImpHojaImplantePopPk pk) throws ImpHojaImplantePopDaoException;

	/** 
	 * Returns the rows from the imp_hoja_implante_pop table that matches the specified primary-key value.
	 */
	public ImpHojaImplantePop findByPrimaryKey(ImpHojaImplantePopPk pk) throws ImpHojaImplantePopDaoException;

	/** 
	 * Returns all rows from the imp_hoja_implante_pop table that match the criteria 'IDHOJAIMP = :idhojaimp AND IDOP = :idop'.
	 */
	public ImpHojaImplantePop findByPrimaryKey(Integer idhojaimp, String idop) throws ImpHojaImplantePopDaoException;

	/** 
	 * Returns all rows from the imp_hoja_implante_pop table that match the criteria ''.
	 */
	public ImpHojaImplantePop[] findAll() throws ImpHojaImplantePopDaoException;

	/** 
	 * Returns all rows from the imp_hoja_implante_pop table that match the criteria 'IDHOJAIMP = :idhojaimp'.
	 */
	public ImpHojaImplantePop[] findWhereIdhojaimpEquals(int idhojaimp) throws ImpHojaImplantePopDaoException;

	/** 
	 * Returns all rows from the imp_hoja_implante_pop table that match the criteria 'IDOP = :idop'.
	 */
	public ImpHojaImplantePop[] findWhereIdopEquals(String idop) throws ImpHojaImplantePopDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the imp_hoja_implante_pop table that match the specified arbitrary SQL statement
	 */
	public ImpHojaImplantePop[] findByDynamicSelect(String sql, Object[] sqlParams) throws ImpHojaImplantePopDaoException;

	/** 
	 * Returns all rows from the imp_hoja_implante_pop table that match the specified arbitrary SQL statement
	 */
	public ImpHojaImplantePop[] findByDynamicWhere(String sql, Object[] sqlParams) throws ImpHojaImplantePopDaoException;

}
