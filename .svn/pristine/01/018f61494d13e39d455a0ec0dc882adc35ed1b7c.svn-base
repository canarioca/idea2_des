/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.sorin.idea.dao;

import java.util.Date;
import com.sorin.idea.dto.*;
import com.sorin.idea.exceptions.*;

public interface AgendaDao
{
	/** 
	 * Inserts a new row in the agenda table.
	 */
	public AgendaPk insert(Agenda dto) throws AgendaDaoException;

	/** 
	 * Updates a single row in the agenda table.
	 */
	public void update(AgendaPk pk, Agenda dto) throws AgendaDaoException;

	/** 
	 * Deletes a single row in the agenda table.
	 */
	public void delete(AgendaPk pk) throws AgendaDaoException;

	/** 
	 * Returns the rows from the agenda table that matches the specified primary-key value.
	 */
	public Agenda findByPrimaryKey(AgendaPk pk) throws AgendaDaoException;

	/** 
	 * Returns all rows from the agenda table that match the criteria 'IDAGENDA = :idagenda'.
	 */
	public Agenda findByPrimaryKey(Integer idagenda) throws AgendaDaoException;

	/** 
	 * Returns all rows from the agenda table that match the criteria ''.
	 */
	public Agenda[] findAll() throws AgendaDaoException;

	/** 
	 * Returns all rows from the agenda table that match the criteria 'IDAGENDA = :idagenda'.
	 */
	public Agenda[] findWhereIdagendaEquals(int idagenda) throws AgendaDaoException;

	/** 
	 * Returns all rows from the agenda table that match the criteria 'NOMBRE = :nombre'.
	 */
	public Agenda[] findWhereNombreEquals(String nombre) throws AgendaDaoException;

	/** 
	 * Returns all rows from the agenda table that match the criteria 'DESCRIPCION = :descripcion'.
	 */
	public Agenda[] findWhereDescripcionEquals(String descripcion) throws AgendaDaoException;

	/** 
	 * Returns all rows from the agenda table that match the criteria 'IDUSUARIO = :idusuario'.
	 */
	public Agenda[] findWhereIdusuarioEquals(String idusuario) throws AgendaDaoException;

	/** 
	 * Returns all rows from the agenda table that match the criteria 'TIPOAGENDA = :tipoagenda'.
	 */
	public Agenda[] findWhereTipoagendaEquals(int tipoagenda) throws AgendaDaoException;

	/** 
	 * Returns all rows from the agenda table that match the criteria 'FECHACREACION = :fechacreacion'.
	 */
	public Agenda[] findWhereFechacreacionEquals(Date fechacreacion) throws AgendaDaoException;

	/** 
	 * Returns all rows from the agenda table that match the criteria 'FECHAMOD = :fechamod'.
	 */
	public Agenda[] findWhereFechamodEquals(Date fechamod) throws AgendaDaoException;

	/** 
	 * Returns all rows from the agenda table that match the criteria 'VISIBILIDAD = :visibilidad'.
	 */
	public Agenda[] findWhereVisibilidadEquals(int visibilidad) throws AgendaDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the agenda table that match the specified arbitrary SQL statement
	 */
	public Agenda[] findByDynamicSelect(String sql, Object[] sqlParams) throws AgendaDaoException;

	/** 
	 * Returns all rows from the agenda table that match the specified arbitrary SQL statement
	 */
	public Agenda[] findByDynamicWhere(String sql, Object[] sqlParams) throws AgendaDaoException;

}
