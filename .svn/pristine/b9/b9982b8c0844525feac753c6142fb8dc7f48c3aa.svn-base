/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.sorin.idea.dao;

import com.sorin.idea.dto.*;
import com.sorin.idea.exceptions.*;

public interface RcRehaProbCognitivosDao
{
	/** 
	 * Inserts a new row in the RC_REHA_PROB_COGNITIVOS table.
	 */
	public RcRehaProbCognitivosPk insert(RcRehaProbCognitivos dto) throws RcRehaProbCognitivosDaoException;

	/** 
	 * Updates a single row in the RC_REHA_PROB_COGNITIVOS table.
	 */
	public void update(RcRehaProbCognitivosPk pk, RcRehaProbCognitivos dto) throws RcRehaProbCognitivosDaoException;

	/** 
	 * Deletes a single row in the RC_REHA_PROB_COGNITIVOS table.
	 */
	public void delete(RcRehaProbCognitivosPk pk) throws RcRehaProbCognitivosDaoException;

	/** 
	 * Returns the rows from the RC_REHA_PROB_COGNITIVOS table that matches the specified primary-key value.
	 */
	public RcRehaProbCognitivos findByPrimaryKey(RcRehaProbCognitivosPk pk) throws RcRehaProbCognitivosDaoException;

	/** 
	 * Returns all rows from the RC_REHA_PROB_COGNITIVOS table that match the criteria 'ID_PROBLEMA_COGNITIVO = :idProblemaCognitivo'.
	 */
	public RcRehaProbCognitivos findByPrimaryKey(long idProblemaCognitivo) throws RcRehaProbCognitivosDaoException;

	/** 
	 * Returns all rows from the RC_REHA_PROB_COGNITIVOS table that match the criteria ''.
	 */
	public RcRehaProbCognitivos[] findAll() throws RcRehaProbCognitivosDaoException;

	/** 
	 * Returns all rows from the RC_REHA_PROB_COGNITIVOS table that match the criteria 'ID_PROBLEMA_COGNITIVO = :idProblemaCognitivo'.
	 */
	public RcRehaProbCognitivos[] findWhereIdProblemaCognitivoEquals(long idProblemaCognitivo) throws RcRehaProbCognitivosDaoException;

	/** 
	 * Returns all rows from the RC_REHA_PROB_COGNITIVOS table that match the criteria 'NOMBRE_PROBLEMA = :nombreProblema'.
	 */
	public RcRehaProbCognitivos[] findWhereNombreProblemaEquals(String nombreProblema) throws RcRehaProbCognitivosDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the RC_REHA_PROB_COGNITIVOS table that match the specified arbitrary SQL statement
	 */
	public RcRehaProbCognitivos[] findByDynamicSelect(String sql, Object[] sqlParams) throws RcRehaProbCognitivosDaoException;

	/** 
	 * Returns all rows from the RC_REHA_PROB_COGNITIVOS table that match the specified arbitrary SQL statement
	 */
	public RcRehaProbCognitivos[] findByDynamicWhere(String sql, Object[] sqlParams) throws RcRehaProbCognitivosDaoException;

}
