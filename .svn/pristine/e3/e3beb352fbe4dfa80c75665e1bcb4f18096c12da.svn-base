/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.sorin.idea.dao;

import com.sorin.idea.dto.*;
import com.sorin.idea.exceptions.*;


public interface ArrAnualTecnicasDao
{
	/** 
	 * Inserts a new row in the ARR_ANUAL_TECNICAS table.
	 */
	public ArrAnualTecnicasPk insert(ArrAnualTecnicas dto) throws ArrAnualTecnicasDaoException;

	/** 
	 * Updates a single row in the ARR_ANUAL_TECNICAS table.
	 */
	public void update(ArrAnualTecnicasPk pk, ArrAnualTecnicas dto) throws ArrAnualTecnicasDaoException;

	/** 
	 * Deletes a single row in the ARR_ANUAL_TECNICAS table.
	 */
	public void delete(ArrAnualTecnicasPk pk) throws ArrAnualTecnicasDaoException;

	/** 
	 * Returns the rows from the ARR_ANUAL_TECNICAS table that matches the specified primary-key value.
	 */
	public ArrAnualTecnicas findByPrimaryKey(ArrAnualTecnicasPk pk) throws ArrAnualTecnicasDaoException;

	/** 
	 * Returns all rows from the ARR_ANUAL_TECNICAS table that match the criteria 'ANIO = :anio'.
	 */
	public ArrAnualTecnicas findByPrimaryKey(Integer anio) throws ArrAnualTecnicasDaoException;
	public ArrAnualTecnicas findByMaxAnio() throws ArrAnualTecnicasDaoException;

	/** 
	 * Returns all rows from the ARR_ANUAL_TECNICAS table that match the criteria ''.
	 */
	public ArrAnualTecnicas[] findAll() throws ArrAnualTecnicasDaoException;

	/** 
	 * Returns all rows from the ARR_ANUAL_TECNICAS table that match the criteria 'ANIO = :anio'.
	 */
	public ArrAnualTecnicas[] findWhereAnioEquals(long anio) throws ArrAnualTecnicasDaoException;

	/** 
	 * Returns all rows from the ARR_ANUAL_TECNICAS table that match the criteria 'CARTO = :carto'.
	 */
	public ArrAnualTecnicas[] findWhereCartoEquals(long carto) throws ArrAnualTecnicasDaoException;

	/** 
	 * Returns all rows from the ARR_ANUAL_TECNICAS table that match the criteria 'NAVX = :navx'.
	 */
	public ArrAnualTecnicas[] findWhereNavxEquals(long navx) throws ArrAnualTecnicasDaoException;

	/** 
	 * Returns all rows from the ARR_ANUAL_TECNICAS table that match the criteria 'LOCALISA = :localisa'.
	 */
	public ArrAnualTecnicas[] findWhereLocalisaEquals(long localisa) throws ArrAnualTecnicasDaoException;

	/** 
	 * Returns all rows from the ARR_ANUAL_TECNICAS table that match the criteria 'RPM = :rpm'.
	 */
	public ArrAnualTecnicas[] findWhereRpmEquals(long rpm) throws ArrAnualTecnicasDaoException;

	/** 
	 * Returns all rows from the ARR_ANUAL_TECNICAS table that match the criteria 'NOGA = :noga'.
	 */
	public ArrAnualTecnicas[] findWhereNogaEquals(long noga) throws ArrAnualTecnicasDaoException;

	/** 
	 * Returns all rows from the ARR_ANUAL_TECNICAS table that match the criteria 'OTROS = :otros'.
	 */
	public ArrAnualTecnicas[] findWhereOtrosEquals(long otros) throws ArrAnualTecnicasDaoException;

	/** 
	 * Returns all rows from the ARR_ANUAL_TECNICAS table that match the criteria 'ICT = :ict'.
	 */
	public ArrAnualTecnicas[] findWhereIctEquals(long ict) throws ArrAnualTecnicasDaoException;

	/** 
	 * Returns all rows from the ARR_ANUAL_TECNICAS table that match the criteria 'TA = :ta'.
	 */
	public ArrAnualTecnicas[] findWhereTaEquals(long ta) throws ArrAnualTecnicasDaoException;

	/** 
	 * Returns all rows from the ARR_ANUAL_TECNICAS table that match the criteria 'FM = :fm'.
	 */
	public ArrAnualTecnicas[] findWhereFmEquals(long fm) throws ArrAnualTecnicasDaoException;

	/** 
	 * Returns all rows from the ARR_ANUAL_TECNICAS table that match the criteria 'FA = :fa'.
	 */
	public ArrAnualTecnicas[] findWhereFaEquals(long fa) throws ArrAnualTecnicasDaoException;

	/** 
	 * Returns all rows from the ARR_ANUAL_TECNICAS table that match the criteria 'TVI = :tvi'.
	 */
	public ArrAnualTecnicas[] findWhereTviEquals(long tvi) throws ArrAnualTecnicasDaoException;

	/** 
	 * Returns all rows from the ARR_ANUAL_TECNICAS table that match the criteria 'TVC = :tvc'.
	 */
	public ArrAnualTecnicas[] findWhereTvcEquals(long tvc) throws ArrAnualTecnicasDaoException;

	/** 
	 * Returns all rows from the ARR_ANUAL_TECNICAS table that match the criteria 'IDECO = :ideco'.
	 */
	public ArrAnualTecnicas[] findWhereIdecoEquals(long ideco) throws ArrAnualTecnicasDaoException;

	/** 
	 * Returns all rows from the ARR_ANUAL_TECNICAS table that match the criteria 'IDCRIO = :idcrio'.
	 */
	public ArrAnualTecnicas[] findWhereIdcrioEquals(long idcrio) throws ArrAnualTecnicasDaoException;

	/** 
	 * Returns all rows from the ARR_ANUAL_TECNICAS table that match the criteria 'IDUS = :idus'.
	 */
	public ArrAnualTecnicas[] findWhereIdusEquals(long idus) throws ArrAnualTecnicasDaoException;

	/** 
	 * Returns all rows from the ARR_ANUAL_TECNICAS table that match the criteria 'IDREMOTA = :idremota'.
	 */
	public ArrAnualTecnicas[] findWhereIdremotaEquals(long idremota) throws ArrAnualTecnicasDaoException;

	/** 
	 * Returns all rows from the ARR_ANUAL_TECNICAS table that match the criteria 'TECNICAS = :tecnicas'.
	 */
	public ArrAnualTecnicas[] findWhereTecnicasEquals(String tecnicas) throws ArrAnualTecnicasDaoException;

	/** 
	 * Returns all rows from the ARR_ANUAL_TECNICAS table that match the criteria 'COMENTARIOS = :comentarios'.
	 */
	public ArrAnualTecnicas[] findWhereComentariosEquals(String comentarios) throws ArrAnualTecnicasDaoException;

	/** 
	 * Returns all rows from the arr_anual_tecnicas table that match the criteria 'RYTHMIA = :rythmia'.
	 */
	public ArrAnualTecnicas[] findWhereRythmiaEquals(int rythmia) throws ArrAnualTecnicasDaoException;

	/** 
	 * Returns all rows from the arr_anual_tecnicas table that match the criteria 'MEDIGUIDE = :mediguide'.
	 */
	public ArrAnualTecnicas[] findWhereMediguideEquals(int mediguide) throws ArrAnualTecnicasDaoException;

	/** 
	 * Returns all rows from the arr_anual_tecnicas table that match the criteria 'ANGROT = :angrot'.
	 */
	public ArrAnualTecnicas[] findWhereAngrotEquals(int angrot) throws ArrAnualTecnicasDaoException;

	/** 
	 * Returns all rows from the arr_anual_tecnicas table that match the criteria 'NIOBE = :niobe'.
	 */
	public ArrAnualTecnicas[] findWhereNiobeEquals(int niobe) throws ArrAnualTecnicasDaoException;

	/** 
	 * Returns all rows from the arr_anual_tecnicas table that match the criteria 'HANSEN = :hansen'.
	 */
	public ArrAnualTecnicas[] findWhereHansenEquals(int hansen) throws ArrAnualTecnicasDaoException;

	/** 
	 * Returns all rows from the arr_anual_tecnicas table that match the criteria 'AMIGO = :amigo'.
	 */
	public ArrAnualTecnicas[] findWhereAmigoEquals(int amigo) throws ArrAnualTecnicasDaoException;

	/** 
	 * Returns all rows from the arr_anual_tecnicas table that match the criteria 'AROTRO = :arotro'.
	 */
	public ArrAnualTecnicas[] findWhereArotroEquals(String arotro) throws ArrAnualTecnicasDaoException;

	/** 
	 * Returns all rows from the arr_anual_tecnicas table that match the criteria 'IDLASER = :idlaser'.
	 */
	public ArrAnualTecnicas[] findWhereIdlaserEquals(int idlaser) throws ArrAnualTecnicasDaoException;
	
	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the ARR_ANUAL_TECNICAS table that match the specified arbitrary SQL statement
	 */
	public ArrAnualTecnicas[] findByDynamicSelect(String sql, Object[] sqlParams) throws ArrAnualTecnicasDaoException;

	/** 
	 * Returns all rows from the ARR_ANUAL_TECNICAS table that match the specified arbitrary SQL statement
	 */
	public ArrAnualTecnicas[] findByDynamicWhere(String sql, Object[] sqlParams) throws ArrAnualTecnicasDaoException;

}
