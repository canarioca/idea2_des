/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.sorin.idea.dao;

import com.sorin.idea.dto.*;
import com.sorin.idea.exceptions.*;

public interface UsuariosPlantillasDao
{
	/** 
	 * Inserts a new row in the usuarios_plantillas table.
	 */
	public UsuariosPlantillasPk insert(UsuariosPlantillas dto) throws UsuariosPlantillasDaoException;

	/** 
	 * Updates a single row in the usuarios_plantillas table.
	 */
	public void update(UsuariosPlantillasPk pk, UsuariosPlantillas dto) throws UsuariosPlantillasDaoException;

	/** 
	 * Deletes a single row in the usuarios_plantillas table.
	 */
	public void delete(UsuariosPlantillasPk pk) throws UsuariosPlantillasDaoException;

	/** 
	 * Returns the rows from the usuarios_plantillas table that matches the specified primary-key value.
	 */
	public UsuariosPlantillas findByPrimaryKey(UsuariosPlantillasPk pk) throws UsuariosPlantillasDaoException;

	/** 
	 * Returns all rows from the usuarios_plantillas table that match the criteria 'ID_PLANTILLA = :idPlantilla AND ID_USUARIOS = :idUsuarios'.
	 */
	public UsuariosPlantillas findByPrimaryKey(int idPlantilla, String idUsuarios) throws UsuariosPlantillasDaoException;

	/** 
	 * Returns all rows from the usuarios_plantillas table that match the criteria ''.
	 */
	public UsuariosPlantillas[] findAll() throws UsuariosPlantillasDaoException;

	/** 
	 * Returns all rows from the usuarios_plantillas table that match the criteria 'ID_USUARIOS = :idUsuarios'.
	 */
	public UsuariosPlantillas[] findWhereIdUsuariosEquals(String idUsuarios) throws UsuariosPlantillasDaoException;

	/** 
	 * Returns all rows from the usuarios_plantillas table that match the criteria 'ID_PLANTILLA = :idPlantilla'.
	 */
	public UsuariosPlantillas[] findWhereIdPlantillaEquals(int idPlantilla) throws UsuariosPlantillasDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the usuarios_plantillas table that match the specified arbitrary SQL statement
	 */
	public UsuariosPlantillas[] findByDynamicSelect(String sql, Object[] sqlParams) throws UsuariosPlantillasDaoException;

	/** 
	 * Returns all rows from the usuarios_plantillas table that match the specified arbitrary SQL statement
	 */
	public UsuariosPlantillas[] findByDynamicWhere(String sql, Object[] sqlParams) throws UsuariosPlantillasDaoException;

}
