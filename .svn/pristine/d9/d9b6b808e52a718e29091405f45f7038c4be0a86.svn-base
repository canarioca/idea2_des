/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.sorin.idea.dao;

import com.sorin.idea.dto.*;
import com.sorin.idea.exceptions.*;


public interface ImpSintomasDao
{
	/** 
	 * Inserts a new row in the imp_sintomas table.
	 */
	public ImpSintomasPk insert(ImpSintomas dto) throws ImpSintomasDaoException;

	/** 
	 * Updates a single row in the imp_sintomas table.
	 */
	public void update(ImpSintomasPk pk, ImpSintomas dto) throws ImpSintomasDaoException;

	/** 
	 * Deletes a single row in the imp_sintomas table.
	 */
	public void delete(ImpSintomasPk pk) throws ImpSintomasDaoException;

	/** 
	 * Returns the rows from the imp_sintomas table that matches the specified primary-key value.
	 */
	public ImpSintomas findByPrimaryKey(ImpSintomasPk pk) throws ImpSintomasDaoException;

	/** 
	 * Returns all rows from the imp_sintomas table that match the criteria 'IDIND = :idind AND IDSINTOMA = :idsintoma'.
	 */
	public ImpSintomas findByPrimaryKey(Integer idind, String idsintoma) throws ImpSintomasDaoException;

	/** 
	 * Returns all rows from the imp_sintomas table that match the criteria ''.
	 */
	public ImpSintomas[] findAll() throws ImpSintomasDaoException;

	/** 
	 * Returns all rows from the imp_sintomas table that match the criteria 'IDIND = :idind'.
	 */
	public ImpSintomas[] findWhereIdindEquals(int idind) throws ImpSintomasDaoException;

	/** 
	 * Returns all rows from the imp_sintomas table that match the criteria 'IDSINTOMA = :idsintoma'.
	 */
	public ImpSintomas[] findWhereIdsintomaEquals(String idsintoma) throws ImpSintomasDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the imp_sintomas table that match the specified arbitrary SQL statement
	 */
	public ImpSintomas[] findByDynamicSelect(String sql, Object[] sqlParams) throws ImpSintomasDaoException;

	/** 
	 * Returns all rows from the imp_sintomas table that match the specified arbitrary SQL statement
	 */
	public ImpSintomas[] findByDynamicWhere(String sql, Object[] sqlParams) throws ImpSintomasDaoException;

}
