/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.sorin.idea.dao;

import java.util.Date;
import com.sorin.idea.dto.*;
import com.sorin.idea.exceptions.*;

public interface IntPacientesDao
{
	/** 
	 * Inserts a new row in the int_pacientes table.
	 */
	public IntPacientesPk insert(IntPacientes dto) throws IntPacientesDaoException;

	/** 
	 * Updates a single row in the int_pacientes table.
	 */
	public void update(IntPacientesPk pk, IntPacientes dto) throws IntPacientesDaoException;

	/** 
	 * Deletes a single row in the int_pacientes table.
	 */
	public void delete(IntPacientesPk pk) throws IntPacientesDaoException;

	/** 
	 * Returns the rows from the int_pacientes table that matches the specified primary-key value.
	 */
	public IntPacientes findByPrimaryKey(IntPacientesPk pk) throws IntPacientesDaoException;

	/** 
	 * Returns all rows from the int_pacientes table that match the criteria 'IDINTEGRACION = :idintegracion'.
	 */
	public IntPacientes findByPrimaryKey(Integer idintegracion) throws IntPacientesDaoException;

	/** 
	 * Returns all rows from the int_pacientes table that match the criteria ''.
	 */
	public IntPacientes[] findAll() throws IntPacientesDaoException;

	/** 
	 * Returns all rows from the int_pacientes table that match the criteria 'IDINTEGRACION = :idintegracion'.
	 */
	public IntPacientes[] findWhereIdintegracionEquals(int idintegracion) throws IntPacientesDaoException;

	/** 
	 * Returns all rows from the int_pacientes table that match the criteria 'NOMBRE = :nombre'.
	 */
	public IntPacientes[] findWhereNombreEquals(String nombre) throws IntPacientesDaoException;

	/** 
	 * Returns all rows from the int_pacientes table that match the criteria 'APELLIDOS = :apellidos'.
	 */
	public IntPacientes[] findWhereApellidosEquals(String apellidos) throws IntPacientesDaoException;

	/** 
	 * Returns all rows from the int_pacientes table that match the criteria 'SEXO = :sexo'.
	 */
	public IntPacientes[] findWhereSexoEquals(int sexo) throws IntPacientesDaoException;

	/** 
	 * Returns all rows from the int_pacientes table that match the criteria 'FECHANACIMIENTO = :fechanacimiento'.
	 */
	public IntPacientes[] findWhereFechanacimientoEquals(Date fechanacimiento) throws IntPacientesDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the int_pacientes table that match the specified arbitrary SQL statement
	 */
	public IntPacientes[] findByDynamicSelect(String sql, Object[] sqlParams) throws IntPacientesDaoException;

	/** 
	 * Returns all rows from the int_pacientes table that match the specified arbitrary SQL statement
	 */
	public IntPacientes[] findByDynamicWhere(String sql, Object[] sqlParams) throws IntPacientesDaoException;

}
