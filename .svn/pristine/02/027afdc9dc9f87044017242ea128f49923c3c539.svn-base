/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.sorin.idea.dao;

import com.sorin.idea.dto.*;
import com.sorin.idea.exceptions.*;


public interface ArrEstudioComplicacionesDao
{
	/** 
	 * Inserts a new row in the ARR_ESTUDIO_COMPLICACIONES table.
	 */
	public ArrEstudioComplicacionesPk insert(ArrEstudioComplicaciones dto) throws ArrEstudioComplicacionesDaoException;

	/** 
	 * Updates a single row in the ARR_ESTUDIO_COMPLICACIONES table.
	 */
	public void update(ArrEstudioComplicacionesPk pk, ArrEstudioComplicaciones dto) throws ArrEstudioComplicacionesDaoException;

	/** 
	 * Deletes a single row in the ARR_ESTUDIO_COMPLICACIONES table.
	 */
	public void delete(ArrEstudioComplicacionesPk pk) throws ArrEstudioComplicacionesDaoException;

	/** 
	 * Returns the rows from the ARR_ESTUDIO_COMPLICACIONES table that matches the specified primary-key value.
	 */
	public ArrEstudioComplicaciones findByPrimaryKey(ArrEstudioComplicacionesPk pk) throws ArrEstudioComplicacionesDaoException;

	/** 
	 * Returns all rows from the ARR_ESTUDIO_COMPLICACIONES table that match the criteria 'IDCOMPLICACION = :idcomplicacion'.
	 */
	public ArrEstudioComplicaciones findByPrimaryKey(Integer idestudio) throws ArrEstudioComplicacionesDaoException;

	/** 
	 * Returns all rows from the ARR_ESTUDIO_COMPLICACIONES table that match the criteria ''.
	 */
	public ArrEstudioComplicaciones[] findAll() throws ArrEstudioComplicacionesDaoException;

	/** 
	 * Returns all rows from the ARR_ESTUDIO_COMPLICACIONES table that match the criteria 'IDESTUDIO = :idestudio'.
	 */
	public ArrEstudioComplicaciones[] findWhereIdestudioEquals(long idestudio) throws ArrEstudioComplicacionesDaoException;

	/** 
	 * Returns all rows from the ARR_ESTUDIO_COMPLICACIONES table that match the criteria 'EDIAGNOSTICO = :ediagnostico'.
	 */
	public ArrEstudioComplicaciones[] findWhereEdiagnosticoEquals(long ediagnostico) throws ArrEstudioComplicacionesDaoException;

	/** 
	 * Returns all rows from the ARR_ESTUDIO_COMPLICACIONES table that match the criteria 'PROCEDIMIENTO = :procedimiento'.
	 */
	public ArrEstudioComplicaciones[] findWhereProcedimientoEquals(long procedimiento) throws ArrEstudioComplicacionesDaoException;

	/** 
	 * Returns all rows from the ARR_ESTUDIO_COMPLICACIONES table that match the criteria 'IDPROCEDIMIENTO = :idprocedimiento'.
	 */
	public ArrEstudioComplicaciones[] findWhereIdprocedimientoEquals(long idprocedimiento) throws ArrEstudioComplicacionesDaoException;

	/** 
	 * Returns all rows from the ARR_ESTUDIO_COMPLICACIONES table that match the criteria 'IDPROCEDIMIENTON2 = :idprocedimienton2'.
	 */
	public ArrEstudioComplicaciones[] findWhereIdprocedimienton2Equals(long idprocedimienton2) throws ArrEstudioComplicacionesDaoException;

	/** 
	 * Returns all rows from the ARR_ESTUDIO_COMPLICACIONES table that match the criteria 'IDPROCEDIMIENTON3 = :idprocedimienton3'.
	 */
	public ArrEstudioComplicaciones[] findWhereIdprocedimienton3Equals(long idprocedimienton3) throws ArrEstudioComplicacionesDaoException;

	/** 
	 * Returns all rows from the ARR_ESTUDIO_COMPLICACIONES table that match the criteria 'IDPROCEDIMIENTON4 = :idprocedimienton4'.
	 */
	public ArrEstudioComplicaciones[] findWhereIdprocedimienton4Equals(long idprocedimienton4) throws ArrEstudioComplicacionesDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the ARR_ESTUDIO_COMPLICACIONES table that match the specified arbitrary SQL statement
	 */
	public ArrEstudioComplicaciones[] findByDynamicSelect(String sql, Object[] sqlParams) throws ArrEstudioComplicacionesDaoException;

	/** 
	 * Returns all rows from the ARR_ESTUDIO_COMPLICACIONES table that match the specified arbitrary SQL statement
	 */
	public ArrEstudioComplicaciones[] findByDynamicWhere(String sql, Object[] sqlParams) throws ArrEstudioComplicacionesDaoException;

}
