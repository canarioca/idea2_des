/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.sorin.idea.dao;

import java.util.ArrayList;
import java.util.Date;
import com.sorin.idea.dto.*;
import com.sorin.idea.exceptions.*;

public interface ArrPacientesDao
{
	/** 
	 * Inserts a new row in the arr_pacientes table.
	 */
	public ArrPacientesPk insert(ArrPacientes dto) throws ArrPacientesDaoException;

	/** 
	 * Updates a single row in the arr_pacientes table.
	 */
	public void update(ArrPacientesPk pk, ArrPacientes dto) throws ArrPacientesDaoException;

	/** 
	 * Deletes a single row in the arr_pacientes table.
	 */
	public void delete(ArrPacientesPk pk) throws ArrPacientesDaoException;

	/** 
	 * Returns the rows from the arr_pacientes table that matches the specified primary-key value.
	 */
	public ArrPacientes findByPrimaryKey(ArrPacientesPk pk) throws ArrPacientesDaoException;

	/** 
	 * Returns all rows from the arr_pacientes table that match the criteria 'CODIGO = :codigo'.
	 */
	public ArrPacientes findByPrimaryKey(Integer codigo) throws ArrPacientesDaoException;

	/** 
	 * Returns all rows from the arr_pacientes table that match the criteria ''.
	 */
	public ArrPacientes[] findAll() throws ArrPacientesDaoException;

	/** 
	 * Returns all rows from the arr_pacientes table that match the criteria 'NUHSA = :nuhsa'.
	 */
	public ArrPacientes[] findWhereNuhsaEquals(String nuhsa) throws ArrPacientesDaoException;

	/** 
	 * Returns all rows from the arr_pacientes table that match the criteria 'NHC = :nhc'.
	 */
	public ArrPacientes[] findWhereNhcEquals(String nhc) throws ArrPacientesDaoException;

	/** 
	 * Returns all rows from the arr_pacientes table that match the criteria 'NOMBRE = :nombre'.
	 */
	public ArrPacientes[] findWhereNombreEquals(String nombre) throws ArrPacientesDaoException;

	/** 
	 * Returns all rows from the arr_pacientes table that match the criteria 'APELLID1 = :apellid1'.
	 */
	public ArrPacientes[] findWhereApellid1Equals(String apellid1) throws ArrPacientesDaoException;

	/** 
	 * Returns all rows from the arr_pacientes table that match the criteria 'APELLID2 = :apellid2'.
	 */
	public ArrPacientes[] findWhereApellid2Equals(String apellid2) throws ArrPacientesDaoException;

	/** 
	 * Returns all rows from the arr_pacientes table that match the criteria 'SEXO = :sexo'.
	 */
	public ArrPacientes[] findWhereSexoEquals(int sexo) throws ArrPacientesDaoException;

	/** 
	 * Returns all rows from the arr_pacientes table that match the criteria 'FECHANACI = :fechanaci'.
	 */
	public ArrPacientes[] findWhereFechanaciEquals(Date fechanaci) throws ArrPacientesDaoException;

	/** 
	 * Returns all rows from the arr_pacientes table that match the criteria 'DNI = :dni'.
	 */
	public ArrPacientes[] findWhereDniEquals(String dni) throws ArrPacientesDaoException;

	/** 
	 * Returns all rows from the arr_pacientes table that match the criteria 'NSS1 = :nss1'.
	 */
	public ArrPacientes[] findWhereNss1Equals(String nss1) throws ArrPacientesDaoException;

	/** 
	 * Returns all rows from the arr_pacientes table that match the criteria 'DIRECCION = :direccion'.
	 */
	public ArrPacientes[] findWhereDireccionEquals(String direccion) throws ArrPacientesDaoException;

	/** 
	 * Returns all rows from the arr_pacientes table that match the criteria 'PROVINCIA = :provincia'.
	 */
	public ArrPacientes[] findWhereProvinciaEquals(String provincia) throws ArrPacientesDaoException;

	/** 
	 * Returns all rows from the arr_pacientes table that match the criteria 'POBLACION = :poblacion'.
	 */
	public ArrPacientes[] findWherePoblacionEquals(String poblacion) throws ArrPacientesDaoException;

	/** 
	 * Returns all rows from the arr_pacientes table that match the criteria 'PAIS = :pais'.
	 */
	public ArrPacientes[] findWherePaisEquals(String pais) throws ArrPacientesDaoException;

	/** 
	 * Returns all rows from the arr_pacientes table that match the criteria 'CP = :cp'.
	 */
	public ArrPacientes[] findWhereCpEquals(String cp) throws ArrPacientesDaoException;

	/** 
	 * Returns all rows from the arr_pacientes table that match the criteria 'ESTADO = :estado'.
	 */
	public ArrPacientes[] findWhereEstadoEquals(String estado) throws ArrPacientesDaoException;

	/** 
	 * Returns all rows from the arr_pacientes table that match the criteria 'TELEFONO1 = :telefono1'.
	 */
	public ArrPacientes[] findWhereTelefono1Equals(String telefono1) throws ArrPacientesDaoException;

	/** 
	 * Returns all rows from the arr_pacientes table that match the criteria 'TELEFONO2 = :telefono2'.
	 */
	public ArrPacientes[] findWhereTelefono2Equals(String telefono2) throws ArrPacientesDaoException;

	/** 
	 * Returns all rows from the arr_pacientes table that match the criteria 'CORREO = :correo'.
	 */
	public ArrPacientes[] findWhereCorreoEquals(String correo) throws ArrPacientesDaoException;

	/** 
	 * Returns all rows from the arr_pacientes table that match the criteria 'PROCEDENCIA = :procedencia'.
	 */
	public ArrPacientes[] findWhereProcedenciaEquals(int procedencia) throws ArrPacientesDaoException;

	/** 
	 * Returns all rows from the arr_pacientes table that match the criteria 'CODIGO = :codigo'.
	 */
	public ArrPacientes[] findWhereCodigoEquals(int codigo) throws ArrPacientesDaoException;

	/** 
	 * Returns all rows from the arr_pacientes table that match the criteria 'HPROCEDENCIA = :hprocedencia'.
	 */
	public ArrPacientes[] findWhereHprocedenciaEquals(int hprocedencia) throws ArrPacientesDaoException;

	/** 
	 * Returns all rows from the arr_pacientes table that match the criteria 'VOID = :aVoid'.
	 */
	public ArrPacientes[] findWhereAVoidEquals(int aVoid) throws ArrPacientesDaoException;

	/** 
	 * Returns all rows from the arr_pacientes table that match the criteria 'IDFUSION = :idfusion'.
	 */
	public ArrPacientes[] findWhereIdfusionEquals(int idfusion) throws ArrPacientesDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the arr_pacientes table that match the specified arbitrary SQL statement
	 */
	public ArrPacientes[] findByDynamicSelect(String sql, Object[] sqlParams) throws ArrPacientesDaoException;

	/** 
	 * Returns all rows from the arr_pacientes table that match the specified arbitrary SQL statement
	 */
	public ArrPacientes[] findByDynamicWhere(String sql, Object[] sqlParams) throws ArrPacientesDaoException;
	
	public ArrayList<ArrayList<Object>> getEstadisticasPaciente()throws ArrPacientesDaoException;

}
