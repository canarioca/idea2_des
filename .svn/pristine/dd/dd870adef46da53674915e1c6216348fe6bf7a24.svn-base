/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.sorin.idea.dao;

import com.sorin.idea.dto.*;
import com.sorin.idea.exceptions.*;


public interface ImpZonaDao
{
	/** 
	 * Inserts a new row in the imp_zona table.
	 */
	public ImpZonaPk insert(ImpZona dto) throws ImpZonaDaoException;

	/** 
	 * Updates a single row in the imp_zona table.
	 */
	public void update(ImpZonaPk pk, ImpZona dto) throws ImpZonaDaoException;

	/** 
	 * Deletes a single row in the imp_zona table.
	 */
	public void delete(ImpZonaPk pk) throws ImpZonaDaoException;

	/** 
	 * Returns the rows from the imp_zona table that matches the specified primary-key value.
	 */
	public ImpZona findByPrimaryKey(ImpZonaPk pk) throws ImpZonaDaoException;

	/** 
	 * Returns all rows from the imp_zona table that match the criteria 'IDZONA = :idzona'.
	 */
	public ImpZona findByPrimaryKey(Integer idzona) throws ImpZonaDaoException;

	/** 
	 * Returns all rows from the imp_zona table that match the criteria ''.
	 */
	public ImpZona[] findAll() throws ImpZonaDaoException;

	/** 
	 * Returns all rows from the imp_zona table that match the criteria 'IDEV = :idev'.
	 */
	public ImpZona[] findByImpEvolucion(int idev) throws ImpZonaDaoException;

	/** 
	 * Returns all rows from the imp_zona table that match the criteria 'IDZONA = :idzona'.
	 */
	public ImpZona[] findWhereIdzonaEquals(int idzona) throws ImpZonaDaoException;

	/** 
	 * Returns all rows from the imp_zona table that match the criteria 'IDEV = :idev'.
	 */
	public ImpZona[] findWhereIdevEquals(int idev) throws ImpZonaDaoException;

	/** 
	 * Returns all rows from the imp_zona table that match the criteria 'TIPO = :tipo'.
	 */
	public ImpZona[] findWhereTipoEquals(String tipo) throws ImpZonaDaoException;

	/** 
	 * Returns all rows from the imp_zona table that match the criteria 'FC_PPM = :fcPpm'.
	 */
	public ImpZona[] findWhereFcPpmEquals(String fcPpm) throws ImpZonaDaoException;

	/** 
	 * Returns all rows from the imp_zona table that match the criteria 'FC_MS = :fcMs'.
	 */
	public ImpZona[] findWhereFcMsEquals(String fcMs) throws ImpZonaDaoException;

	/** 
	 * Returns all rows from the imp_zona table that match the criteria 'NUMCICLOMIN = :numciclomin'.
	 */
	public ImpZona[] findWhereNumciclominEquals(String numciclomin) throws ImpZonaDaoException;

	/** 
	 * Returns all rows from the imp_zona table that match the criteria 'DURMIN = :durmin'.
	 */
	public ImpZona[] findWhereDurminEquals(String durmin) throws ImpZonaDaoException;

	/** 
	 * Returns all rows from the imp_zona table that match the criteria 'DISCRIMINACION = :discriminacion'.
	 */
	public ImpZona[] findWhereDiscriminacionEquals(String discriminacion) throws ImpZonaDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the imp_zona table that match the specified arbitrary SQL statement
	 */
	public ImpZona[] findByDynamicSelect(String sql, Object[] sqlParams) throws ImpZonaDaoException;

	/** 
	 * Returns all rows from the imp_zona table that match the specified arbitrary SQL statement
	 */
	public ImpZona[] findByDynamicWhere(String sql, Object[] sqlParams) throws ImpZonaDaoException;

}
