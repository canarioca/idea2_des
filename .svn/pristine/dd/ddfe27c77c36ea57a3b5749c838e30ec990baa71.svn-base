/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.sorin.idea.dao;

import com.sorin.idea.dto.*;
import com.sorin.idea.exceptions.*;


public interface ArrMesasEcgDao
{
	/** 
	 * Inserts a new row in the ARR_MESAS_ECG table.
	 */
	public ArrMesasEcgPk insert(ArrMesasEcg dto) throws ArrMesasEcgDaoException;

	/** 
	 * Updates a single row in the ARR_MESAS_ECG table.
	 */
	public void update(ArrMesasEcgPk pk, ArrMesasEcg dto) throws ArrMesasEcgDaoException;

	/** 
	 * Deletes a single row in the ARR_MESAS_ECG table.
	 */
	public void delete(ArrMesasEcgPk pk) throws ArrMesasEcgDaoException;

	/** 
	 * Returns the rows from the ARR_MESAS_ECG table that matches the specified primary-key value.
	 */
	public ArrMesasEcg findByPrimaryKey(ArrMesasEcgPk pk) throws ArrMesasEcgDaoException;

	/** 
	 * Returns all rows from the ARR_MESAS_ECG table that match the criteria 'IDMESA = :idmesa'.
	 */
	public ArrMesasEcg findByPrimaryKey(Integer idmesa) throws ArrMesasEcgDaoException;

	/** 
	 * Returns all rows from the ARR_MESAS_ECG table that match the criteria ''.
	 */
	public ArrMesasEcg[] findAll() throws ArrMesasEcgDaoException;

	/** 
	 * Returns all rows from the ARR_MESAS_ECG table that match the criteria 'IDMESA = :idmesa'.
	 */
	public ArrMesasEcg[] findByArrMesas(long idmesa) throws ArrMesasEcgDaoException;

	/** 
	 * Returns all rows from the ARR_MESAS_ECG table that match the criteria 'IDMESA = :idmesa'.
	 */
	public ArrMesasEcg[] findWhereIdmesaEquals(long idmesa) throws ArrMesasEcgDaoException;

	/** 
	 * Returns all rows from the ARR_MESAS_ECG table that match the criteria 'IDRITMO = :idritmo'.
	 */
	public ArrMesasEcg[] findWhereIdritmoEquals(long idritmo) throws ArrMesasEcgDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the ARR_MESAS_ECG table that match the specified arbitrary SQL statement
	 */
	public ArrMesasEcg[] findByDynamicSelect(String sql, Object[] sqlParams) throws ArrMesasEcgDaoException;

	/** 
	 * Returns all rows from the ARR_MESAS_ECG table that match the specified arbitrary SQL statement
	 */
	public ArrMesasEcg[] findByDynamicWhere(String sql, Object[] sqlParams) throws ArrMesasEcgDaoException;

}
