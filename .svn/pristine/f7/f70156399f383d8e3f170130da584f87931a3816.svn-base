/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.sorin.idea.dao;

import com.sorin.idea.dto.*;
import com.sorin.idea.exceptions.*;

public interface ArrEstudioCatAplDao
{
	/** 
	 * Inserts a new row in the arr_estudio_cat_apl table.
	 */
	public ArrEstudioCatAplPk insert(ArrEstudioCatApl dto) throws ArrEstudioCatAplDaoException;

	/** 
	 * Updates a single row in the arr_estudio_cat_apl table.
	 */
	public void update(ArrEstudioCatAplPk pk, ArrEstudioCatApl dto) throws ArrEstudioCatAplDaoException;

	/** 
	 * Deletes a single row in the arr_estudio_cat_apl table.
	 */
	public void delete(ArrEstudioCatAplPk pk) throws ArrEstudioCatAplDaoException;
	public void delete(Integer idestudio) throws ArrEstudioCatAplDaoException;
	/** 
	 * Returns the rows from the arr_estudio_cat_apl table that matches the specified primary-key value.
	 */
	public ArrEstudioCatApl findByPrimaryKey(ArrEstudioCatAplPk pk) throws ArrEstudioCatAplDaoException;

	/** 
	 * Returns all rows from the arr_estudio_cat_apl table that match the criteria 'IDABLACION = :idablacion AND IDCATUSO = :idcatuso AND IDVIA = :idvia'.
	 */
	public ArrEstudioCatApl findByPrimaryKey(Integer idablacion, Integer idcatuso, Integer idvia) throws ArrEstudioCatAplDaoException;

	/** 
	 * Returns all rows from the arr_estudio_cat_apl table that match the criteria ''.
	 */
	public ArrEstudioCatApl[] findAll() throws ArrEstudioCatAplDaoException;

	/** 
	 * Returns all rows from the arr_estudio_cat_apl table that match the criteria 'IDABLACION = :idablacion'.
	 */
	public ArrEstudioCatApl[] findWhereIdablacionEquals(int idablacion) throws ArrEstudioCatAplDaoException;

	/** 
	 * Returns all rows from the arr_estudio_cat_apl table that match the criteria 'IDCATUSO = :idcatuso'.
	 */
	public ArrEstudioCatApl[] findWhereIdcatusoEquals(int idcatuso) throws ArrEstudioCatAplDaoException;

	/** 
	 * Returns all rows from the arr_estudio_cat_apl table that match the criteria 'IDVIA = :idvia'.
	 */
	public ArrEstudioCatApl[] findWhereIdviaEquals(int idvia) throws ArrEstudioCatAplDaoException;

	/** 
	 * Returns all rows from the arr_estudio_cat_apl table that match the criteria 'TIEMPO = :tiempo'.
	 */
	public ArrEstudioCatApl[] findWhereTiempoEquals(String tiempo) throws ArrEstudioCatAplDaoException;

	/** 
	 * Returns all rows from the arr_estudio_cat_apl table that match the criteria 'POTENCIA = :potencia'.
	 */
	public ArrEstudioCatApl[] findWherePotenciaEquals(String potencia) throws ArrEstudioCatAplDaoException;

	/** 
	 * Returns all rows from the arr_estudio_cat_apl table that match the criteria 'IMPEDANCIA = :impedancia'.
	 */
	public ArrEstudioCatApl[] findWhereImpedanciaEquals(String impedancia) throws ArrEstudioCatAplDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the arr_estudio_cat_apl table that match the specified arbitrary SQL statement
	 */
	public ArrEstudioCatApl[] findByDynamicSelect(String sql, Object[] sqlParams) throws ArrEstudioCatAplDaoException;

	/** 
	 * Returns all rows from the arr_estudio_cat_apl table that match the specified arbitrary SQL statement
	 */
	public ArrEstudioCatApl[] findByDynamicWhere(String sql, Object[] sqlParams) throws ArrEstudioCatAplDaoException;

}
